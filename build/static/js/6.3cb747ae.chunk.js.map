{"version":3,"sources":["../node_modules/@linways/table-to-excel/dist sync","components/document/SearchSkuCodeDialog.js","components/document/SearchContractAgreementDialog.js","components/document/DocumentInputDetails.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SearchSkuCodeDialog","open","handleCloseDialog","documentDetails","setDocumentDetails","selectedRowIndex","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","selectDocument","companyDetails","documentType","useState","list","setList","setLastDoc","setHasMore","temp_fetchInventoryRef","useRef","selectedSkuFilter","set_selectedSkuFilter","skuCodeSearch","set_skuCodeSearch","useEffect","current","fetchInventory","a","setLoading","db","collection","doc","orderBy","limit","get","then","result","docs","length","lastVisible","itemList","forEach","push","data","sku","category","JSON","stringify","model","size","materials","color","stockHistory","qty","qtySold","qtyRemaining","unitPriceWithoutShipping","unitPriceWithShipping","totalPriceWithShipping","unitSellingPrice","totalSellingPrice","companyName","percentageProfit","percentageShipping","catch","error","message","variant","where","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","Divider","Grid","container","spacing","item","xs","md","Autocomplete","ListboxProps","style","maxHeight","label","options","value","renderInput","params","TextField","onChange","reason","getOptionLabel","option","Stack","direction","alignItems","name","type","event","target","Tooltip","title","Button","onClick","searchSkuCode","sx","width","disabled","TableContainer","Table","border","TableHead","TableRow","TableCell","align","TableBody","filter","obj","map","index","newDocParticulars","docParticulars","newDesc","rowDescription","unitpriceWithoutVAT","Number","rowUnitPrice","inventoryItemData","selectSkuCode","toFixed","displayType","thousandSeparator","DialogActions","SearchContractAgreementDialog","logo","sigImage","temp_fetch_document_ref","clientDocumentObjectSelected","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","us_documentlist","set_us_documentlist","lastVisibleId","set_lastVisibleId","undefined","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","firebase","firestore","Timestamp","fromDate","querySnapshot","docArray","document","clientId","deleted","docString","checked","sort","dynamicSort","err","startAfter","newArr","newString","treatmentDefinition","parseHTML","parsedTreatmentDefinition","htmlTag","mainIndex","tag","newText","text","replace","matches","matchAll","match","unitPrice","str","parseFloat","convertToNumber","annualTotalAmt","totalAmount","rowQty","rowAmount","rowDiscountedAmount","rowVatAmount","rowTotalAmount","Typography","DatePicker","newValue","inputFormat","desc","dateCreated","moment","toDate","format","IconButton","handleViewDownloadCustomSurvey","Iconify","icon","onChooseQuotationNumber","colSpan","nextPagination","QuotationOrPurchaseOrderInputField","lazy","DocumentConversion","DocumentTableStandard","DocumentTableTransport","DocumentSummaryTotal","DocumentSaveButton","DocumentUpdateButton","FlexitransCustom","WorldLinkCustom","DocumentInputDetails","action","handleCloseUpdateDialog","set_us_actionChoice","themeMode","useSettings","classes","palette","makeStyles","input","background","light","default","dark","multilineInput","resize","useStyles","ref","temp_logo_image_ref","temp_signature_image_ref","temp_applyUpdatedData_ref","temp_refreshTable_ref","temp_fetch_saved_description_ref","temp_calculateTotal_ref","setSelectedRowIndex","savedDescriptions","setSavedDescriptions","us_openDialog","set_us_openDialog","us_openDialogSKUCodeSearch","set_us_openDialogSKUCodeSearch","us_openDialogContractAgreementSearch","set_us_openDialogContractAgreementSearch","us_s_quotationNumber","set_us_s_quotationNumber","us_s_purchaseOrderNumber","set_us_s_purchaseOrderNumber","setLogo","setSigImage","displayDiscountColumns","set_displayDiscountColumns","defaultParticularOptions","set_defaultParticularOptions","partialPaymentAmount","setPartialPaymentAmount","companyIdSelected","updateDocumentData","originalDocParticulars","setOriginalDocParticulars","docCompDetails","docClientDetails","docCustomIdNumber","docBillTo","docShipTo","docDate","docSubTotal","docVatFee","docTotal","docTermsAndCondition","docBLNumber","docSupplier","docContainerNumber","docPackages","docDescription","docGrossWeight","docVolume","docPortOfLoading","docETA","docVesselName","docRoE","docPlaceOfLanding","transactionType","parse","process","personType","invoiceTypeDesc","invoiceRefIdentifier","downPayment","downPaymentInvoiceNumber","discountTotalAmount","discountedTotalAmount","docSalesTransaction","docReasonStated","MRATemplateApplied","docTotalTaxableWithoutVatParticulars","docTotalTaxableVatOnlyParticulars","docTotalTaxableParticulars","docTotalZeroRatedParticulars","docTotalExemptParticulars","docTotalDisbursementParticulars","docTotalExemptBodiesParticulars","docDisbursementParticularsData","invJobRef","invStorageFee","invScanningFee","invGatePassFee","invVehicleNo","transportFees","transportDesc","invApplyVat","REACT_APP_CUSTOM_SOREFAN_ID","docShipper","docMarkNos","docCommodity","docHbl","docDepot","showViewButton","savedDocument","us_showViewDocument","set_us_showViewDocument","imageUrl","toDataUrl","logoImage","sigUrl","sigImageResult","docQuoteNumber","docPurchaseOrderNumber","refreshTable","getBillToDefaultValue","billToDefaultvalue","particularsDefaultValue","documentTemplate","getParticularsDefaultValue","particularOptions","rowOrder","rowSubTotalAmount","rowDiscountAmount","rowIsVatable","rowTaxCode","rowNature","rowVatCheckBoxDisabled","docTermsAndConditionValue","REACT_APP_CUSTOM_BUGSBEGONE_ID","fetchDescription","arr","description","uniqueObjects","getUniqueObjects","prop","self","findIndex","t","calculateTotal","subTotal","totalDiscount","totalDiscounted","vat","total","docTotalTaxableWithoutVat","docTotalTaxableVatOnly","docTotalTaxable","docTotalZeroRated","docTotalExempt","docTotalDisbursement","docTotalExemptBodies","docDisbursementParticularsDataArray","newRowTotalDiscount","subtotalWithoutDiscount","vatWithoutDiscount","particular","previousState","Math","round","includes","MRATemplateFlag","amount","deleteParticular","splice","Card","CardContent","paper","previous","multiline","minRows","InputProps","className","fallback","classStyle","InputLabelProps","shrink","fieldType","us_doc_number","set_us_doc_number","borderRadius","required","preventDefault","flexItem","handleInputChange","newAmount","vatAmount","docUnitPrice","docQty","isVatable","particularChange","handleOrderChange","newOrderNumber","handleIsVatableChange","discountedAmount","companyMRATemplateFlag","documentMRATemplateApplied","companyId","inputClass","REACT_APP_CUSTOM_SMART_PROMOTE_ID","scrollIntoView","behavior","display","selectedDescription","selectSavedDesription"],"mappings":"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","file":"static/js/6.3cb747ae.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1573;","import {\n  Autocomplete,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useRef, useState } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDocument } from \"src/features/documentSlice\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport db from \"src/firebase\";\n\nconst FETCH_LIMIT = 50;\n\nexport default function SearchSkuCodeDialog({\n  open,\n  handleCloseDialog,\n  documentDetails,\n  setDocumentDetails,\n  selectedRowIndex,\n}) {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { companyDetails, documentType } = useSelector(selectDocument);\n\n  const [list, setList] = useState([]);\n\n  const [lastDoc, setLastDoc] = useState(null); // Keep track of the last document for pagination\n\n  const [hasMore, setHasMore] = useState(true); // Check if there are more documents\n\n  const temp_fetchInventoryRef = useRef();\n\n  const [selectedSkuFilter, set_selectedSkuFilter] = useState(null);\n\n  const [skuCodeSearch, set_skuCodeSearch] = useState(\"\");\n\n  useEffect(() => {\n    temp_fetchInventoryRef.current();\n  }, []);\n\n  const fetchInventory = async () => {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(\"inventory\")\n      .orderBy(\"model\")\n      .limit(FETCH_LIMIT)\n      .get()\n      .then((result) => {\n        if (result?.docs?.length > 0) {\n          const lastVisible = result?.docs[result?.docs.length - 1];\n          setLastDoc(lastVisible); // Save the last document for pagination\n\n          let itemList = [];\n          result.docs.forEach((doc) => {\n            if (doc?.id !== \"documentIndex\") {\n              itemList.push({\n                id: doc.id,\n                data: { ...doc.data() },\n                sku: doc.data()?.sku || \"\",\n                category: JSON.stringify(doc.data()?.category || null),\n                model: doc.data()?.model || \"\",\n                size: doc.data()?.size || \"\",\n                materials: doc.data()?.materials || \"\",\n                color: doc.data()?.color || \"\",\n                stockHistory: doc.data()?.stockHistory || [],\n                qty: doc.data()?.qty || \"\",\n                qtySold: doc.data()?.qtySold || \"\",\n                qtyRemaining: doc.data()?.qtyRemaining || \"\",\n                unitPriceWithoutShipping:\n                  doc.data()?.unitPriceWithoutShipping || \"\",\n                unitPriceWithShipping: doc.data()?.unitPriceWithShipping || \"\",\n                totalPriceWithShipping:\n                  doc.data()?.totalPriceWithShipping || \"\",\n                unitSellingPrice: doc.data()?.unitSellingPrice || \"\",\n                totalSellingPrice: doc.data()?.totalSellingPrice || \"\",\n                companyName: doc.data()?.companyName || \"\",\n                percentageProfit: doc.data()?.percentageProfit || \"\",\n                percentageShipping: doc.data()?.percentageShipping || \"\",\n              });\n            }\n          });\n\n          setList(itemList);\n\n          if (result?.docs?.length === FETCH_LIMIT) {\n            setHasMore(true);\n          }\n\n          dispatch(setLoading(false));\n        } else {\n          setHasMore(false);\n          setList([]);\n          setLastDoc(null);\n\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while fetching inventory items: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  temp_fetchInventoryRef.current = fetchInventory;\n\n  const fetchMoreItems = async () => {\n    if (!lastDoc) return; // Don't fetch if there's no last document\n\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(\"inventory\")\n      .orderBy(\"model\")\n      .startAfter(lastDoc)\n      .limit(FETCH_LIMIT)\n      .get()\n      .then((result) => {\n        if (result?.docs?.length > 0) {\n          const lastVisible = result?.docs[result?.docs.length - 1];\n          setLastDoc(lastVisible); // Save the last document for pagination\n\n          let itemList = [];\n          result.docs.forEach((doc) => {\n            if (doc?.id !== \"documentIndex\") {\n              itemList.push({\n                id: doc.id,\n                data: { ...doc.data() },\n                sku: doc.data()?.sku || \"\",\n                category: doc.data()?.category || null,\n                model: doc.data()?.model || \"\",\n                size: doc.data()?.size || \"\",\n                materials: doc.data()?.materials || \"\",\n                color: doc.data()?.color || \"\",\n                stockHistory: doc.data()?.stockHistory || [],\n                qty: doc.data()?.qty || \"\",\n                qtySold: doc.data()?.qtySold || \"\",\n                qtyRemaining: doc.data()?.qtyRemaining || \"\",\n                unitPriceWithoutShipping:\n                  doc.data()?.unitPriceWithoutShipping || \"\",\n                unitPriceWithShipping: doc.data()?.unitPriceWithShipping || \"\",\n                totalPriceWithShipping:\n                  doc.data()?.totalPriceWithShipping || \"\",\n                unitSellingPrice: doc.data()?.unitSellingPrice || \"\",\n                totalSellingPrice: doc.data()?.totalSellingPrice || \"\",\n                companyName: doc.data()?.companyName || \"\",\n                percentageProfit: doc.data()?.percentageProfit || \"\",\n                percentageShipping: doc.data()?.percentageShipping || \"\",\n              });\n            }\n          });\n\n          setList((prevProducts) => [...prevProducts, ...itemList]);\n\n          if (result?.docs?.length === FETCH_LIMIT) {\n            setHasMore(true);\n          } else {\n            setHasMore(false);\n          }\n\n          dispatch(setLoading(false));\n        } else {\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while fetching inventory items: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  async function searchSkuCode() {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(\"inventory\")\n      .where(\"sku\", \"==\", skuCodeSearch)\n      .get()\n      .then((result) => {\n        if (result?.docs?.length > 0) {\n          enqueueSnackbar(\n            \"The SKU code you entered is already present in the database.\",\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        } else {\n          enqueueSnackbar(\"SKU code is valid and is not present in database.\");\n          dispatch(setLoading(false));\n        }\n      });\n  }\n\n  function selectSkuCode(item) {\n    if (selectedRowIndex !== null) {\n      let newDocParticulars = [...(documentDetails?.docParticulars || [])];\n\n      // add selected description with current description if present\n      let newDesc =\n        (newDocParticulars[selectedRowIndex]?.rowDescription || \"\") +\n        (item?.sku ? `${item?.sku}, ` : \"\") +\n        (item?.model ? `${item?.model}, ` : \"\") +\n        (item?.color ? `${item?.color}, ` : \"\") +\n        (item?.category?.title ? `${item?.category?.title}, ` : \"\") +\n        (item?.size ? `${item?.size}, ` : \"\") +\n        (item?.materials ? `${item?.materials}` : \"\");\n\n      let unitpriceWithoutVAT = Number(item?.unitSellingPrice || 0);\n\n      if (documentType?.id !== \"cash_transaction\") {\n        // NOTE: This custom is applied to all SMART PROMOTE DOCS except CASH_TRANSACTION\n        // all products are vat inclusive\n        // for smart promote -> need to calculate the unitprice without vat\n        unitpriceWithoutVAT = Number(item?.unitSellingPrice || 0) * 100;\n        unitpriceWithoutVAT = unitpriceWithoutVAT / 115;\n      }\n\n      // update state using index\n      newDocParticulars[selectedRowIndex] = {\n        ...newDocParticulars[selectedRowIndex],\n        rowDescription: newDesc,\n        rowUnitPrice: Number(unitpriceWithoutVAT || 0),\n        inventoryItemData: { ...item },\n      };\n\n      setDocumentDetails({\n        ...documentDetails,\n        docParticulars: newDocParticulars,\n      });\n\n      // close popup\n      handleCloseDialog();\n    }\n  }\n\n  return (\n    <Dialog open={open} maxWidth=\"lg\" fullWidth>\n      <DialogTitle>Search SKU item</DialogTitle>\n      <DialogContent>\n        <Divider />\n        <br />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Autocomplete\n              ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n              size=\"small\"\n              label=\"SKU filter\"\n              id=\"sku filter-drop-down\"\n              options={list || []}\n              value={selectedSkuFilter}\n              renderInput={(params) => (\n                <TextField {...params} label={\"SKU filter\"} fullWidth />\n              )}\n              onChange={(e, value, reason) => {\n                if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                  set_selectedSkuFilter(value);\n                } else {\n                  set_selectedSkuFilter(null);\n                }\n              }}\n              getOptionLabel={(option) => option?.sku}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={2}>\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                name=\"skuCode\"\n                label=\"Search SKU Code\"\n                type=\"text\"\n                id=\"skuCode\"\n                value={skuCodeSearch || \"\"}\n                onChange={(event) => {\n                  set_skuCodeSearch(event.target.value);\n                }}\n              />\n\n              <Tooltip title=\"Search SKU Code\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => searchSkuCode()}\n                  sx={{ width: \"150px\" }}\n                  disabled={!skuCodeSearch}\n                >\n                  Search\n                </Button>\n              </Tooltip>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TableContainer>\n              <Table border={1}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell />\n                    <TableCell align=\"center\" size=\"small\">\n                      SKU Code\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Model\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Color\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Category\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Size\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Materials\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Selling Price\n                    </TableCell>\n                    <TableCell align=\"center\" size=\"small\">\n                      Stock Qty\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {list &&\n                    list?.length > 0 &&\n                    list\n                      ?.filter(\n                        (obj) =>\n                          obj?.sku === selectedSkuFilter?.sku ||\n                          !selectedSkuFilter?.sku\n                      )\n                      ?.map((item, index) => (\n                        <TableRow key={index}>\n                          <TableCell align=\"center\" size=\"small\">\n                            <Button\n                              onClick={() => selectSkuCode(item)}\n                              variant=\"contained\"\n                              color=\"primary\"\n                            >\n                              Select\n                            </Button>\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.sku || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.model || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.color || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.category?.title || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.size || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.materials || \"\"}\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            <CurrencyFormat\n                              value={Number(\n                                item?.unitSellingPrice || 0\n                              ).toFixed(2)}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                            />\n                          </TableCell>\n                          <TableCell align=\"center\" size=\"small\">\n                            {item?.qtyRemaining || \"\"}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          color=\"error\"\n          onClick={() => handleCloseDialog()}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDocument } from \"../../features/documentSlice\";\nimport Iconify from \"../../components/Iconify\";\nimport {\n  dynamicSort,\n  handleViewDownload,\n  handleViewDownloadCustomSurvey,\n  parseHTML,\n} from \"../../components/core-functions/SelectionCoreFunctions\";\nimport { useEffect, useRef, useState } from \"react\";\nimport db from \"../../firebase\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport { useSnackbar } from \"notistack\";\nimport { DatePicker } from \"@mui/lab\";\nimport firebase from \"firebase/compat\";\n\nexport default function SearchContractAgreementDialog({\n  open,\n  handleCloseDialog,\n  documentDetails,\n  setDocumentDetails,\n  selectedRowIndex,\n  logo,\n  sigImage,\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const temp_fetch_document_ref = useRef();\n\n  const { companyDetails, clientDocumentObjectSelected } =\n    useSelector(selectDocument);\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [us_documentlist, set_us_documentlist] = useState([]);\n\n  const [lastVisibleId, set_lastVisibleId] = useState(\"\");\n\n  useEffect(() => {\n    temp_fetch_document_ref.current();\n  }, [us_fromDate, us_ToDate]);\n\n  async function fetchDocument() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\"\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else if (\n        companyDetails !== undefined &&\n        clientDocumentObjectSelected !== undefined\n      ) {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(\"contractagreement\")\n          .where(\n            \"dateCreated\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"dateCreated\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let docArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((document) => {\n                // filter by client selected\n                if (\n                  document?.data()?.clientId ===\n                    clientDocumentObjectSelected?.id &&\n                  !document?.data()?.deleted\n                ) {\n                  docArray.push({\n                    id: document?.id,\n                    docString: document?.data()?.docString,\n                    data: document?.data(),\n                    checked: false,\n                  });\n                }\n              });\n\n              if (docArray?.length === 25) {\n                set_lastVisibleId(true);\n              }\n\n              docArray.sort(dynamicSort(\"docString\"));\n\n              set_us_documentlist(docArray);\n            } else {\n              set_us_documentlist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching documents: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_document_ref.current = fetchDocument;\n\n  async function nextPagination() {\n    dispatch(setLoading(true));\n\n    const startDateISOString = us_fromDate.toISOString();\n    const startDateStringSplit = startDateISOString.split(\"T\");\n\n    const endDateISOString = us_ToDate.toISOString();\n    const endDateStringSplit = endDateISOString.split(\"T\");\n\n    const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n    const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(\"contractagreement\")\n      .where(\n        \"dateCreated\",\n        \">=\",\n        firebase.firestore.Timestamp.fromDate(startDate)\n      )\n      .where(\n        \"dateCreated\",\n        \"<=\",\n        firebase.firestore.Timestamp.fromDate(endDate)\n      )\n      .startAfter(lastVisibleId)\n      .limit(25)\n      .get()\n      .then((querySnapshot) => {\n        let docArray = [];\n        if (querySnapshot?.docs?.length > 0) {\n          querySnapshot?.docs.forEach((document) => {\n            // filter by client selected\n            if (\n              document?.data()?.clientId === clientDocumentObjectSelected?.id &&\n              !document?.data()?.deleted\n            ) {\n              docArray.push({\n                id: document?.id,\n                data: document?.data(),\n                checked: false,\n              });\n            }\n          });\n\n          if (docArray?.length === 25) {\n            set_lastVisibleId(true);\n          } else {\n            set_lastVisibleId(false);\n          }\n\n          let newArr = [...us_documentlist, ...docArray];\n\n          set_us_documentlist(newArr);\n\n          dispatch(setLoading(false));\n        } else {\n          set_lastVisibleId(false);\n\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while fetching documents: ${err?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function onChooseQuotationNumber(data) {\n    if (selectedRowIndex !== null) {\n      let newDocParticulars = [...(documentDetails?.docParticulars || [])];\n\n      let newString = \"\";\n\n      let parsedTreatmentDefinition =\n        (data?.treatmentDefinition &&\n          (await parseHTML(data?.treatmentDefinition || \"\"))) ||\n        \"\";\n\n      if (parsedTreatmentDefinition) {\n        let treatmentDefinition = parsedTreatmentDefinition;\n\n        treatmentDefinition &&\n          treatmentDefinition?.length > 0 &&\n          treatmentDefinition?.map((htmlTag, mainIndex) => {\n            if (htmlTag?.tag === undefined) {\n              newString = newString + \"\\n\";\n            }\n            if (htmlTag?.tag === \"span\") {\n              let newText = htmlTag?.text.replace(/&nbsp;|\\t/g, \" \");\n              newString = newString + newText + \"\\n\";\n            }\n            if (htmlTag?.tag === \"strong\") {\n              let newText = htmlTag?.text.replace(/&nbsp;|\\t/g, \" \");\n              newString = newString + newText + \"\\n\";\n            } else if (htmlTag?.tag === \"ul\") {\n              const regex =\n                /<li class=\\\"ql-align-justify\\\"><span style=\\\"background-color: transparent;\\\">(.*?)<\\/span><\\/li>|<li>(.*?)<\\/li>|/g;\n              const matches = [...htmlTag?.text.matchAll(regex)].map(\n                (match) => match[1]\n              );\n              if (matches && matches?.length > 0) {\n                matches.forEach((text, index) => {\n                  if (text) {\n                    let newText = text.replace(/&nbsp;|\\t/g, \" \");\n                    newString = newString + \"-\" + newText + \"\\n\";\n                  } else newString = newString + \"\";\n                });\n              }\n            } else if (htmlTag?.tag === \"ol\") {\n              const regex =\n                /<li class=\\\"ql-align-justify\\\"><span style=\\\"background-color: transparent;\\\">(.*?)<\\/span><\\/li>|<li>(.*?)<\\/li>|/g;\n              const matches = [...htmlTag?.text.matchAll(regex)].map(\n                (match) => match[1]\n              );\n              if (matches && matches?.length > 0) {\n                matches.forEach((text, index) => {\n                  if (text) {\n                    let newText = text.replace(/&nbsp;|\\t/g, \" \");\n                    newString = newString + \"-\" + newText + \"\\n\";\n                  } else newString = newString + \"\";\n                });\n              }\n            } else {\n              newString = newString + \"\";\n            }\n          });\n      }\n\n      if (newString) {\n        // add selected description with current description if present\n        let newDesc =\n          (newDocParticulars[selectedRowIndex]?.rowDescription || \"\") +\n          (newString ? `${newString}` : \"\");\n\n        const convertToNumber = (str) => {\n          // Remove \"Rs.\", \"Rs\", or \"rs\" (case-insensitive) and commas, then convert to a number\n          const number = parseFloat(\n            str.replace(/rs\\.?/gi, \"\").replace(/,/g, \"\")\n          );\n          return number;\n        };\n\n        let unitPrice = convertToNumber(data?.annualTotalAmt);\n        let totalAmount = Number(unitPrice || 0) * 1;\n\n        // update state using index\n        newDocParticulars[selectedRowIndex] = {\n          ...newDocParticulars[selectedRowIndex],\n          rowDescription: newDesc,\n          rowUnitPrice: unitPrice || 0,\n          rowQty: 1,\n          rowAmount: totalAmount,\n          rowDiscountedAmount: totalAmount,\n          rowVatAmount: 0,\n          rowTotalAmount: totalAmount,\n        };\n\n        setDocumentDetails({\n          ...documentDetails,\n          docParticulars: newDocParticulars,\n        });\n\n        // close popup\n        handleCloseDialog();\n      } else {\n        // close popup\n        handleCloseDialog();\n      }\n    }\n  }\n\n  return (\n    <Dialog open={open} maxWidth={\"md\"} fullWidth>\n      <DialogTitle>Search Contract Agreement Descriptions</DialogTitle>\n      <DialogContent>\n        <br />\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <hr />\n            <br />\n            <Typography>Please choose a date</Typography>\n          </Grid>\n\n          <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n            <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n              <DatePicker\n                label=\"From\"\n                value={us_fromDate || \"\"}\n                onChange={(newValue) => {\n                  set_us_fromDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} size=\"small\" />}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n\n              <DatePicker\n                label=\"To\"\n                value={us_ToDate || \"\"}\n                onChange={(newValue) => {\n                  set_us_ToDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} size=\"small\" />}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <TableContainer>\n              <Table border={1}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell size=\"small\">\n                      Contract Agreement number\n                    </TableCell>\n                    <TableCell size=\"small\">Date created</TableCell>\n                    <TableCell size=\"small\">Preview</TableCell>\n                    <TableCell size=\"small\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {us_documentlist &&\n                    us_documentlist?.length > 0 &&\n                    us_documentlist?.map((desc, index) => (\n                      <TableRow key={index}>\n                        <TableCell size=\"small\">\n                          <Typography>{desc?.id}</Typography>\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <Typography>\n                            {desc?.data?.dateCreated\n                              ? moment(desc?.data?.dateCreated.toDate()).format(\n                                  \"DD-MM-YYYY\"\n                                ) || \"\"\n                              : \"\"}\n                          </Typography>\n                        </TableCell>\n                        <TableCell size=\"small\" align=\"center\">\n                          <Stack\n                            spacing={2}\n                            direction={\"row\"}\n                            alignItems={\"center\"}\n                          >\n                            <IconButton\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownloadCustomSurvey(\n                                  companyDetails,\n                                  \"view\",\n                                  desc?.data,\n                                  \"contractagreement\",\n                                  logo\n                                )\n                              }\n                            >\n                              <Iconify icon={\"carbon:view\"} />\n                            </IconButton>\n\n                            <IconButton\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownloadCustomSurvey(\n                                  companyDetails,\n                                  \"download\",\n                                  desc?.data,\n                                  \"contractagreement\",\n                                  logo\n                                )\n                              }\n                            >\n                              <Iconify icon={\"eva:download-fill\"} />\n                            </IconButton>\n                          </Stack>\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => onChooseQuotationNumber(desc?.data)}\n                          >\n                            select\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n\n                  {lastVisibleId ? (\n                    <TableRow>\n                      <TableCell size=\"small\" colSpan={4}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => nextPagination()}\n                        >\n                          Next\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <></>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={() => handleCloseDialog()}\n        >\n          cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Suspense, lazy, useEffect, useRef, useState } from \"react\";\n// @mui\nimport {\n  Autocomplete,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db from \"../../firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport moment from \"moment\";\nimport {\n  dynamicSort,\n  getBillToDefaultValue,\n  getParticularsDefaultValue,\n  toDataUrl,\n} from \"../core-functions/SelectionCoreFunctions\";\nimport { selectDocument } from \"../../features/documentSlice\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport palette from \"../../theme/palette\";\nimport useSettings from \"../../hooks/useSettings\";\nimport SearchSkuCodeDialog from \"./SearchSkuCodeDialog\";\nimport SearchContractAgreementDialog from \"./SearchContractAgreementDialog\";\nimport l from \"@linways/table-to-excel\";\n\nconst QuotationOrPurchaseOrderInputField = lazy(() =>\n  import(\n    \"./quotation-purchase-order-list-dialog/QuotationOrPurchaseOrderInputField\"\n  )\n);\nconst DocumentConversion = lazy(() =>\n  import(\"./document-conversion/DocumentConversion\")\n);\nconst DocumentTableStandard = lazy(() => import(\"./DocumentTableStandard\"));\nconst DocumentTableTransport = lazy(() => import(\"./DocumentTableTransport\"));\nconst DocumentSummaryTotal = lazy(() => import(\"./DocumentSummaryTotal\"));\nconst DocumentSaveButton = lazy(() => import(\"./DocumentSaveButton\"));\nconst DocumentUpdateButton = lazy(() => import(\"./DocumentUpdateButton\"));\nconst FlexitransCustom = lazy(() =>\n  import(\"./custom-flexitrans/FlexitransCustom\")\n);\nconst WorldLinkCustom = lazy(() =>\n  import(\"./custom-worldlink/WorldLinkCustom\")\n);\n\nconst useStyles = (themeMode, palette) =>\n  makeStyles(() => ({\n    input: {\n      background:\n        themeMode === \"light\"\n          ? palette.light.background.default\n          : palette.dark.background.default,\n    },\n    multilineInput: {\n      background:\n        themeMode === \"light\"\n          ? palette.light.background.default\n          : palette.dark.background.default,\n      resize: \"both\",\n    },\n  }));\n\n// ----------------------------------------------------------------------\n\nexport default function DocumentInputDetails({\n  action,\n  handleCloseUpdateDialog,\n  set_us_actionChoice,\n}) {\n  const { themeMode } = useSettings();\n\n  const classes = useStyles(themeMode, palette)();\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ref = useRef(null);\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  const temp_applyUpdatedData_ref = useRef();\n\n  // const temp_showNotUsedVatInvoiceNumber_ref = useRef();\n\n  const temp_refreshTable_ref = useRef();\n\n  const temp_fetch_saved_description_ref = useRef();\n\n  const temp_calculateTotal_ref = useRef();\n\n  const [selectedRowIndex, setSelectedRowIndex] = useState(null);\n\n  const [savedDescriptions, setSavedDescriptions] = useState([]);\n\n  const [us_openDialog, set_us_openDialog] = useState(false);\n\n  const [us_openDialogSKUCodeSearch, set_us_openDialogSKUCodeSearch] =\n    useState(false);\n\n  const [\n    us_openDialogContractAgreementSearch,\n    set_us_openDialogContractAgreementSearch,\n  ] = useState(false);\n\n  const [us_s_quotationNumber, set_us_s_quotationNumber] = useState(\"\");\n\n  const [us_s_purchaseOrderNumber, set_us_s_purchaseOrderNumber] = useState(\"\");\n\n  const [logo, setLogo] = useState(null);\n\n  const [sigImage, setSigImage] = useState(null);\n\n  // const [deletedButUnusedDocIds, set_deletedButUnusedDocIds] = useState([]);\n\n  const [displayDiscountColumns, set_displayDiscountColumns] = useState(false);\n\n  const [defaultParticularOptions, set_defaultParticularOptions] = useState([]);\n\n  const [partialPaymentAmount, setPartialPaymentAmount] = useState(\"\");\n\n  const {\n    documentType,\n    companyIdSelected,\n    companyDetails,\n    clientDocumentObjectSelected,\n    updateDocumentData,\n  } = useSelector(selectDocument);\n\n  const [originalDocParticulars, setOriginalDocParticulars] = useState([]);\n\n  const [documentDetails, setDocumentDetails] = useState({\n    docCompDetails: null,\n    docClientDetails: null,\n    docCustomIdNumber: \"\",\n    docBillTo: \"\",\n    docShipTo: \"\",\n    docDate: moment(new Date()).format(\"yyyy-MM-DD\"),\n    docParticulars: [],\n    docSubTotal: \"\",\n    docVatFee: \"\",\n    docTotal: \"\",\n    docTermsAndCondition: \"\",\n\n    // custom part\n    docBLNumber: \"\",\n    docSupplier: \"\",\n    docContainerNumber: \"\",\n    docPackages: \"\",\n    docDescription: \"\",\n    docGrossWeight: \"\",\n    docVolume: \"\",\n    docPortOfLoading: \"\",\n    docETA: \"\",\n    docVesselName: \"\",\n    docRoE: \"\",\n    docPlaceOfLanding: \"\",\n\n    //MRA customs\n    transactionType:\n      (process.env.REACT_APP_EBS_TRANSACTION_TYPES &&\n        JSON.parse(process.env.REACT_APP_EBS_TRANSACTION_TYPES)[0]) ||\n      null,\n    personType: null,\n    invoiceTypeDesc: { id: \"STD\", type: \"Standard\" },\n    invoiceRefIdentifier: \"\",\n\n    downPayment: \"\",\n    downPaymentInvoiceNumber: \"\",\n    discountTotalAmount: \"\",\n    discountedTotalAmount: \"\",\n\n    docSalesTransaction: null,\n    docReasonStated: \"\",\n\n    // use only in update mode -> check boolean value to display MRA template (new template) or old template\n    MRATemplateApplied: false,\n\n    // Fadil customs\n    docTotalTaxableWithoutVatParticulars: \"\",\n    docTotalTaxableVatOnlyParticulars: \"\",\n    docTotalTaxableParticulars: \"\",\n    docTotalZeroRatedParticulars: \"\",\n    docTotalExemptParticulars: \"\",\n    docTotalDisbursementParticulars: \"\",\n    docTotalExemptBodiesParticulars: \"\",\n    docDisbursementParticularsData: [],\n\n    // transport template\n    invJobRef: \"\",\n    invStorageFee: \"\",\n    invScanningFee: \"\",\n    invGatePassFee: \"\",\n    invVehicleNo: \"\",\n    transportFees: \"\",\n    transportDesc: \"\",\n    invApplyVat:\n      companyDetails?.id === process.env.REACT_APP_CUSTOM_SOREFAN_ID\n        ? true\n        : documentType?.id === \"invoice\" ||\n          documentType?.id === \"cash_transaction\"\n        ? false\n        : true,\n\n    // flexitrans template\n    docShipper: \"\",\n    docMarkNos: \"\",\n    docCommodity: \"\",\n    docHbl: \"\",\n    docDepot: \"\",\n  });\n\n  const {\n    docCustomIdNumber,\n    docBillTo,\n    docShipTo,\n    docDate,\n    docParticulars,\n    docVatFee,\n    docTermsAndCondition,\n\n    /*     //custom details\n    docBLNumber,\n    docSupplier,\n    docContainerNumber,\n    docPackages,\n    docDescription,\n    docGrossWeight,\n    docVolume,\n    docPortOfLoading,\n    docETA,\n    docVesselName,\n    docRoE,\n    docPlaceOfLanding, */\n\n    // MRA customs\n    transactionType,\n    invoiceTypeDesc,\n    invoiceRefIdentifier,\n    docReasonStated,\n\n    // use only in update mode -> check boolean value to display MRA template (new template) or old template\n    MRATemplateApplied,\n\n    invStorageFee,\n    invScanningFee,\n    transportFees,\n    invGatePassFee,\n\n    invApplyVat,\n  } = documentDetails;\n\n  const [us_showViewDocument, set_us_showViewDocument] = useState({\n    showViewButton: false,\n    savedDocument: null,\n  });\n\n  useEffect(() => {\n    temp_logo_image_ref.current();\n    temp_signature_image_ref.current();\n  }, []);\n\n  useEffect(() => {\n    temp_applyUpdatedData_ref.current();\n  }, [action, updateDocumentData]);\n\n  useEffect(() => {\n    temp_refreshTable_ref.current();\n  }, [action, companyDetails, clientDocumentObjectSelected]);\n\n  // fetch all saved description\n  useEffect(() => {\n    temp_fetch_saved_description_ref.current();\n  }, [action]);\n\n  // calculate total\n  useEffect(() => {\n    temp_calculateTotal_ref.current();\n  }, [\n    docParticulars,\n    docVatFee,\n    invStorageFee,\n    invScanningFee,\n    invGatePassFee,\n    transportFees,\n    invApplyVat,\n  ]);\n\n  async function getLogoImage() {\n    if (\n      companyDetails?.data?.imageUrl &&\n      companyDetails?.data?.imageUrl !== \"\"\n    ) {\n      dispatch(setLoading(true));\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      setLogo(logoImage);\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_logo_image_ref.current = getLogoImage;\n\n  async function getSignatureImage() {\n    if (companyDetails?.data?.sigUrl && companyDetails?.data?.sigUrl !== \"\") {\n      dispatch(setLoading(true));\n      let sigImageResult = await toDataUrl(companyDetails?.data?.sigUrl);\n      setSigImage(sigImageResult);\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_signature_image_ref.current = getSignatureImage;\n\n  async function applyUpdatedData() {\n    if (action === \"update\" && updateDocumentData) {\n      set_us_s_quotationNumber(updateDocumentData?.data?.docQuoteNumber || \"\");\n\n      set_us_s_purchaseOrderNumber(\n        updateDocumentData?.data?.docPurchaseOrderNumber || \"\"\n      );\n\n      setOriginalDocParticulars(\n        updateDocumentData?.data?.docParticulars &&\n          updateDocumentData?.data?.docParticulars?.length > 0\n          ? [...updateDocumentData?.data?.docParticulars]\n          : []\n      );\n\n      setDocumentDetails({\n        ...documentDetails,\n        docCompDetails: { ...companyDetails },\n        docClientDetails: { ...clientDocumentObjectSelected },\n        docCustomIdNumber: updateDocumentData?.data?.docCustomIdNumber || \"\",\n        docBillTo: updateDocumentData?.data?.docBillTo || \"\",\n        docShipTo: updateDocumentData?.data?.docShipTo || \"\",\n        docDate:\n          moment(updateDocumentData?.data?.docDate.toDate()).format(\n            \"yyyy-MM-DD\"\n          ) || moment(new Date()).format(\"yyyy-MM-DD\"),\n        docParticulars:\n          updateDocumentData?.data?.docParticulars &&\n          updateDocumentData?.data?.docParticulars?.length > 0\n            ? [...updateDocumentData?.data?.docParticulars]\n            : [],\n        docSubTotal: updateDocumentData?.data?.docSubTotal || \"\",\n        docVatFee: updateDocumentData?.data?.docVatFee || \"\",\n        docTotal: updateDocumentData?.data?.docTotal || \"\",\n        docTermsAndCondition:\n          updateDocumentData?.data?.docTermsAndCondition || \"\",\n\n        // custom part\n        docBLNumber: updateDocumentData?.data?.docBLNumber || \"\",\n        docSupplier: updateDocumentData?.data?.docSupplier || \"\",\n        docContainerNumber: updateDocumentData?.data?.docContainerNumber || \"\",\n        docPackages: updateDocumentData?.data?.docPackages || \"\",\n        docDescription: updateDocumentData?.data?.docDescription || \"\",\n        docGrossWeight: updateDocumentData?.data?.docGrossWeight || \"\",\n        docVolume: updateDocumentData?.data?.docVolume || \"\",\n        docPortOfLoading: updateDocumentData?.data?.docPortOfLoading || \"\",\n        docETA: updateDocumentData?.data?.docETA || \"\",\n        docVesselName: updateDocumentData?.data?.docVesselName || \"\",\n        docRoE: updateDocumentData?.data?.docRoE || \"\",\n        docPlaceOfLanding: updateDocumentData?.data?.docPlaceOfLanding || \"\",\n\n        //MRA customs\n        transactionType:\n          updateDocumentData?.data?.transactionType ||\n          (process.env.REACT_APP_EBS_TRANSACTION_TYPES &&\n            JSON.parse(process.env.REACT_APP_EBS_TRANSACTION_TYPES)[0]) ||\n          null,\n        personType: updateDocumentData?.data?.personType || null,\n        invoiceTypeDesc: updateDocumentData?.data?.invoiceTypeDesc || {\n          id: \"STD\",\n          type: \"Standard\",\n        },\n        invoiceRefIdentifier:\n          updateDocumentData?.data?.invoiceRefIdentifier || \"\",\n\n        downPayment: updateDocumentData?.data?.downPayment || \"\",\n        downPaymentInvoiceNumber:\n          updateDocumentData?.data?.downPaymentInvoiceNumber || \"\",\n        discountTotalAmount:\n          updateDocumentData?.data?.discountTotalAmount || \"\",\n        discountedTotalAmount:\n          updateDocumentData?.data?.discountedTotalAmount || \"\",\n\n        docSalesTransaction:\n          updateDocumentData?.data?.docSalesTransaction || null,\n        docReasonStated: updateDocumentData?.data?.docReasonStated || \"\",\n\n        // use only in update mode -> check boolean value to display MRA template (new template) or old template\n        MRATemplateApplied:\n          updateDocumentData?.data?.MRATemplateApplied || false,\n        // Fadil customs\n        docTotalTaxableWithoutVatParticulars:\n          updateDocumentData?.data?.docTotalTaxableWithoutVatParticulars || \"\",\n        docTotalTaxableVatOnlyParticulars:\n          updateDocumentData?.data?.docTotalTaxableVatOnlyParticulars || \"\",\n        docTotalTaxableParticulars:\n          updateDocumentData?.data?.docTotalTaxableParticulars || \"\",\n        docTotalZeroRatedParticulars:\n          updateDocumentData?.data?.docTotalZeroRatedParticulars || \"\",\n        docTotalExemptParticulars:\n          updateDocumentData?.data?.docTotalExemptParticulars || \"\",\n        docTotalDisbursementParticulars:\n          updateDocumentData?.data?.docTotalDisbursementParticulars || \"\",\n        docTotalExemptBodiesParticulars:\n          updateDocumentData?.data?.docTotalExemptBodiesParticulars || \"\",\n        docDisbursementParticularsData:\n          updateDocumentData?.data?.docDisbursementParticularsData || [],\n\n        // transport template\n        invJobRef: updateDocumentData?.data?.invJobRef || \"\",\n        invStorageFee: updateDocumentData?.data?.invStorageFee || \"\",\n        invScanningFee: updateDocumentData?.data?.invScanningFee || \"\",\n        invGatePassFee: updateDocumentData?.data?.invGatePassFee || \"\",\n        invVehicleNo: updateDocumentData?.data?.invVehicleNo || \"\",\n        transportFees: updateDocumentData?.data?.transportFees || \"\",\n        transportDesc: updateDocumentData?.data?.transportDesc || \"\",\n        invApplyVat:\n          Number(updateDocumentData?.data?.docVatFee || 0) > 0\n            ? true\n            : updateDocumentData?.data?.invApplyVat || false,\n\n        // flexitrans template\n        docShipper: updateDocumentData?.data?.docShipper || \"\",\n        docMarkNos: updateDocumentData?.data?.docMarkNos || \"\",\n        docCommodity: updateDocumentData?.data?.docCommodity || \"\",\n        docHbl: updateDocumentData?.data?.docHbl || \"\",\n        docDepot: updateDocumentData?.data?.docDepot || \"\",\n      });\n    }\n  }\n\n  temp_applyUpdatedData_ref.current = applyUpdatedData;\n\n  /* async function showNotUsedVatInvoiceNumber() {\n        if (\n            action &&\n            action === 'add' &&\n            documentType &&\n            documentType?.id === 'vat_invoice'\n        ) {\n            dispatch(setLoading(true));\n            await db\n                .collection('company')\n                .doc(companyIdSelected)\n                .collection('deletedvat_invoice')\n                .get()\n                .then((result) => {\n                    if (result?.docs && result?.docs?.length > 0) {\n                        const promises = [];\n                        result?.docs.forEach(async (doc) => {\n                            promises.push(\n                                new Promise(async (resolve) => {\n                                    await db\n                                        .collection('company')\n                                        .doc(companyIdSelected)\n                                        .collection('vat_invoice')\n                                        .doc(doc?.data()?.docString || '')\n                                        .get()\n                                        .then((resultDoc) => {\n                                            if (resultDoc?.exists) {\n                                                resolve({\n                                                    error: false,\n                                                    exist: true,\n                                                });\n                                            } else {\n                                                resolve({\n                                                    error: false,\n                                                    exist: false,\n                                                    docString:\n                                                        doc?.data()?.docString,\n                                                });\n                                            }\n                                        })\n                                        .catch(() => {\n                                            resolve({\n                                                error: true,\n                                            });\n                                        });\n                                }),\n                            );\n                        });\n\n                        Promise.all(promises).then(async (allResponse) => {\n                            let arr = [];\n                            if (allResponse && allResponse?.length > 0) {\n                                allResponse.forEach((doc) => {\n                                    if (doc && !doc?.error && !doc?.exist) {\n                                        arr.push({ docString: doc?.docString });\n                                    }\n                                });\n                            }\n\n                            if (arr?.length > 0) {\n                                arr.sort(dynamicSort('docString'));\n\n                                set_deletedButUnusedDocIds(arr);\n                                set_displayDeletedButUnusedDocIdsPopUp(true);\n\n                                dispatch(setLoading(false));\n                            } else {\n                                set_deletedButUnusedDocIds([]);\n                                set_displayDeletedButUnusedDocIdsPopUp(false);\n\n                                dispatch(setLoading(false));\n                            }\n                        });\n                    }\n                });\n        }\n    } */\n\n  // temp_showNotUsedVatInvoiceNumber_ref.current = showNotUsedVatInvoiceNumber;\n\n  async function refreshTable() {\n    if (action === \"add\" && companyDetails && clientDocumentObjectSelected) {\n      let billToDefaultvalue = await getBillToDefaultValue(\n        clientDocumentObjectSelected\n      );\n\n      let particularsDefaultValue = [];\n\n      if (companyDetails?.data?.documentTemplate === \"transport\") {\n        particularsDefaultValue = await getParticularsDefaultValue(\n          companyDetails?.id,\n          companyDetails?.data?.documentTemplate\n        );\n      } else {\n        if (companyDetails?.data?.documentTemplate === \"flexitrans\") {\n          let particularOptions = await getParticularsDefaultValue(\n            companyDetails?.id,\n            companyDetails?.data?.documentTemplate\n          );\n          set_defaultParticularOptions(particularOptions);\n        }\n\n        particularsDefaultValue = [\n          {\n            rowOrder: 1,\n            rowQty: \"\",\n            rowDescription: \"\",\n            rowUnitPrice: \"\",\n            rowAmount: \"\",\n            rowSubTotalAmount: \"\",\n            rowDiscountAmount: \"\",\n            rowDiscountedAmount: \"\",\n            rowIsVatable:\n              documentType?.id === \"invoice\" ||\n              documentType?.id === \"cash_transaction\"\n                ? false\n                : true,\n            rowVatAmount: \"\",\n            rowTotalAmount: \"\",\n            rowTaxCode: null,\n            rowNature: null,\n            rowVatCheckBoxDisabled: false,\n          },\n        ];\n      }\n\n      let docTermsAndConditionValue = \"\";\n      if (\n        companyDetails &&\n        companyDetails?.data?.documentTemplate === \"flexitrans\"\n      ) {\n        docTermsAndConditionValue =\n          \"a. Cheque to be drawn in favour of FLEXITRANS LOGISTICS LTD.\\nb. Payment on cash or office cheques unless otherwise agreed by management.\\nc. Interest rate above 2% bank rate will be claimed on overdue A/C.\\nd. If recovered through an attorney, legal fees + 10% of amount due representing attorney's commission will be claimed.\";\n      } else if (\n        companyDetails?.id === process.env.REACT_APP_CUSTOM_BUGSBEGONE_ID\n      ) {\n        docTermsAndConditionValue =\n          \"Le paiement doit être fait un jour avant pour le procaine controle.\";\n      }\n\n      setOriginalDocParticulars(particularsDefaultValue);\n\n      // refresh table\n      setDocumentDetails({\n        docCompDetails: { ...companyDetails },\n        docClientDetails: { ...clientDocumentObjectSelected },\n        docCustomIdNumber: \"\",\n        docBillTo: billToDefaultvalue || \"\",\n        docShipTo: \"\",\n        docDate: moment(new Date()).format(\"yyyy-MM-DD\"),\n        docParticulars: particularsDefaultValue,\n        docSubTotal: \"\",\n        docVatFee: \"\",\n        docTotal: \"\",\n        docTermsAndCondition: docTermsAndConditionValue || \"\",\n\n        //custom details\n        docBLNumber: \"\",\n        docSupplier: \"\",\n        docContainerNumber: \"\",\n        docPackages: \"\",\n        docDescription: \"\",\n        docGrossWeight: \"\",\n        docVolume: \"\",\n        docPortOfLoading: \"\",\n        docETA: \"\",\n        docVesselName: \"\",\n        docRoE: \"\",\n        docPlaceOfLanding: \"\",\n\n        // MRA customs\n        transactionType:\n          (process.env.REACT_APP_EBS_TRANSACTION_TYPES &&\n            JSON.parse(process.env.REACT_APP_EBS_TRANSACTION_TYPES)[0]) ||\n          null,\n        personType: null,\n        invoiceTypeDesc: { id: \"STD\", type: \"Standard\" },\n        invoiceRefIdentifier: \"\",\n        downPayment: 0,\n        downPaymentInvoiceNumber: \"\",\n        discountTotalAmount: 0,\n        discountedTotalAmount: 0,\n        docSalesTransaction: null,\n        docReasonStated: \"\",\n\n        //Fadil customs\n        docTotalTaxableWithoutVatParticulars: \"\",\n        docTotalTaxableVatOnlyParticulars: \"\",\n        docTotalTaxableParticulars: \"\",\n        docTotalZeroRatedParticulars: \"\",\n        docTotalExemptParticulars: \"\",\n        docTotalDisbursementParticulars: \"\",\n        docTotalExemptBodiesParticulars: \"\",\n        docDisbursementParticularsData: [],\n\n        // flexitrans customs\n        docShipper: \"\",\n        docMarkNos: \"\",\n        docCommodity: \"\",\n        docHbl: \"\",\n        docDepot: \"\",\n\n        invApplyVat:\n          companyDetails?.id === process.env.REACT_APP_CUSTOM_SOREFAN_ID\n            ? true\n            : documentType?.id === \"invoice\" ||\n              documentType?.id === \"cash_transaction\"\n            ? false\n            : true,\n      });\n\n      // set_previousNoteHash(\"\");\n    }\n  }\n\n  temp_refreshTable_ref.current = refreshTable;\n\n  async function fetchDescription() {\n    if (companyDetails?.data?.documentTemplate !== \"transport\") {\n      dispatch(setLoading(true));\n\n      await db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(\"saved_descriptions\")\n        .get()\n        .then(async (querySnapshot) => {\n          if (querySnapshot?.docs?.length > 0) {\n            let arr = [];\n            querySnapshot?.docs.forEach((doc) => {\n              arr.push({\n                id: doc.id,\n                description: doc?.data()?.text || \"\",\n              });\n            });\n\n            const uniqueObjects = getUniqueObjects(arr, \"description\");\n\n            // sort by description\n            uniqueObjects.sort(dynamicSort(\"description\"));\n\n            setSavedDescriptions(uniqueObjects);\n            dispatch(setLoading(false));\n          } else {\n            dispatch(setLoading(false));\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while fetching saved descriptions: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  temp_fetch_saved_description_ref.current = fetchDescription;\n\n  // Function to get unique objects based on a property\n  function getUniqueObjects(arr, prop) {\n    return arr.filter(\n      (obj, index, self) =>\n        index === self.findIndex((t) => t[prop] === obj[prop])\n    );\n  }\n\n  function calculateTotal() {\n    if (docParticulars && docParticulars?.length > 0) {\n      let subTotal = 0;\n      let totalDiscount = 0;\n      let totalDiscounted = 0;\n      let vat = 0;\n      let total = 0;\n      let docTotalTaxableWithoutVat = 0;\n      let docTotalTaxableVatOnly = 0;\n      let docTotalTaxable = 0;\n      let docTotalZeroRated = 0;\n      let docTotalExempt = 0;\n      let docTotalDisbursement = 0;\n      let docTotalExemptBodies = 0;\n      let docDisbursementParticularsDataArray = [];\n\n      if (companyDetails?.data?.documentTemplate === \"transport\") {\n        subTotal = subTotal + Number(transportFees || 0);\n\n        // fees\n        total =\n          subTotal +\n          Number(invStorageFee || 0) +\n          Number(invScanningFee || 0) +\n          Number(invGatePassFee || 0) +\n          Number(docVatFee || 0);\n\n        setDocumentDetails({\n          ...documentDetails,\n          docSubTotal: subTotal,\n          docTotal: total,\n        });\n      } else if (companyDetails?.data?.documentTemplate === \"smart_promote\") {\n        // total particulars\n        if (docParticulars?.length > 0) {\n          let newRowTotalDiscount = 0;\n          let subtotalWithoutDiscount = 0;\n          let vatWithoutDiscount = 0;\n          let totalWithoutDiscount = 0;\n\n          docParticulars.forEach((particular) => {\n            subTotal = subTotal + Number(particular?.rowDiscountedAmount || 0);\n\n            subtotalWithoutDiscount =\n              subtotalWithoutDiscount + Number(particular?.rowAmount || 0);\n          });\n\n          if (invApplyVat || documentType?.id === \"vat_invoice\") {\n            vat = 0.15 * Number(subTotal);\n\n            vatWithoutDiscount = 0.15 * Number(subtotalWithoutDiscount);\n          }\n\n          total = subTotal + vat;\n\n          totalWithoutDiscount = subtotalWithoutDiscount + vatWithoutDiscount;\n\n          newRowTotalDiscount = totalWithoutDiscount - total;\n\n          setDocumentDetails((previousState) => {\n            return {\n              ...previousState,\n              docSubTotal: subTotal || 0,\n              docVatFee: vat || 0,\n              docTotal: total || 0,\n              discountTotalAmount: Math.round(Number(newRowTotalDiscount || 0)),\n            };\n          });\n        }\n      } else if (\n        /**\n         * check if company chosen require old or new table template\n         * template may alter depending on action -> add or update\n         * if action === add -> check if company's MRATemplateFlag is true to apply new template or not\n         * if action === update -> check if MRATemplateApplied to verify if the updated invoice has been saved with new template\n         */\n        (process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n          companyIdSelected &&\n          process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n            companyIdSelected\n          )) ||\n        (action === \"add\" && companyDetails?.data?.MRATemplateFlag?.value) ||\n        (action === \"update\" && MRATemplateApplied)\n      ) {\n        // total particulars\n        if (docParticulars?.length > 0) {\n          docParticulars.forEach((particular) => {\n            if (\n              particular &&\n              particular?.rowTaxCode &&\n              particular?.rowTaxCode?.id === \"TC01\"\n            ) {\n              docTotalTaxableWithoutVat =\n                docTotalTaxableWithoutVat +\n                Number(particular?.rowDiscountedAmount || 0);\n              docTotalTaxableVatOnly =\n                docTotalTaxableVatOnly + Number(particular?.rowVatAmount || 0);\n              docTotalTaxable =\n                docTotalTaxable + Number(particular?.rowTotalAmount || 0);\n            } else if (\n              particular &&\n              particular?.rowTaxCode &&\n              particular?.rowTaxCode?.id === \"TC02\"\n            ) {\n              docTotalZeroRated =\n                docTotalZeroRated + Number(particular?.rowTotalAmount || 0);\n            } else if (\n              particular &&\n              particular?.rowTaxCode &&\n              particular?.rowTaxCode?.id === \"TC03\"\n            ) {\n              docTotalExempt =\n                docTotalExempt + Number(particular?.rowTotalAmount || 0);\n            } else if (\n              particular &&\n              particular?.rowTaxCode &&\n              particular?.rowTaxCode?.id === \"TC04\"\n            ) {\n              docTotalDisbursement =\n                docTotalDisbursement + Number(particular?.rowTotalAmount || 0);\n\n              docDisbursementParticularsDataArray.push({\n                description: particular?.rowDescription || \"\",\n                amount: particular?.rowTotalAmount || \"\",\n              });\n            } else if (\n              particular &&\n              particular?.rowTaxCode &&\n              particular?.rowTaxCode?.id === \"TC05\"\n            ) {\n              docTotalExemptBodies =\n                docTotalExemptBodies + Number(particular?.rowTotalAmount || 0);\n            }\n\n            subTotal = subTotal + Number(particular?.rowAmount || 0);\n\n            totalDiscounted =\n              totalDiscounted + Number(particular?.rowDiscountedAmount || 0);\n\n            totalDiscount =\n              totalDiscount + Number(particular?.rowDiscountAmount || 0);\n\n            vat = vat + Number(particular?.rowVatAmount || 0);\n\n            total = total + Number(particular?.rowTotalAmount || 0);\n          });\n        }\n\n        setDocumentDetails((previousState) => {\n          return {\n            ...previousState,\n            docSubTotal: subTotal,\n            discountTotalAmount: totalDiscount,\n            discountedTotalAmount: totalDiscounted,\n            docVatFee: vat,\n            docTotal: total,\n            docTotalTaxableWithoutVatParticulars: docTotalTaxableWithoutVat,\n            docTotalTaxableVatOnlyParticulars: docTotalTaxableVatOnly,\n            docTotalTaxableParticulars: docTotalTaxable,\n            docTotalZeroRatedParticulars: docTotalZeroRated,\n            docTotalExemptParticulars: docTotalExempt,\n            docTotalDisbursementParticulars: docTotalDisbursement,\n            docTotalExemptBodiesParticulars: docTotalExemptBodies,\n            docDisbursementParticularsData: docDisbursementParticularsDataArray,\n          };\n        });\n      } else {\n        // total particulars\n        if (docParticulars?.length > 0) {\n          docParticulars.forEach((particular) => {\n            subTotal = subTotal + Number(particular?.rowAmount || 0);\n          });\n        }\n\n        if (invApplyVat || documentType?.id === \"vat_invoice\") {\n          vat = 0.15 * Number(subTotal);\n        }\n\n        total = subTotal + vat;\n\n        setDocumentDetails((previousState) => {\n          return {\n            ...previousState,\n            docSubTotal: subTotal || 0,\n            docVatFee: vat || 0,\n            docTotal: total || 0,\n          };\n        });\n      }\n    }\n  }\n\n  temp_calculateTotal_ref.current = calculateTotal;\n\n  const handleCloseDialog = () => {\n    set_us_openDialog(false);\n    set_us_openDialogSKUCodeSearch(false);\n    set_us_openDialogContractAgreementSearch(false);\n  };\n\n  function handleInputChange(value, index, name) {\n    let newDocParticulars = [...docParticulars];\n\n    if (\n      name === \"rowQty\" ||\n      name === \"rowUnitPrice\" ||\n      name === \"rowDiscountAmount\" ||\n      name === \"rowTaxCode\"\n    ) {\n      let newAmount = 0;\n      let rowDiscountedAmount = 0;\n      let vatAmount = 0;\n      let totalAmount = 0;\n\n      if (name === \"rowQty\") {\n        let docUnitPrice = Number(newDocParticulars[index]?.rowUnitPrice || 0);\n        if (Number(value) >= 0 && docUnitPrice && Number(docUnitPrice > 0)) {\n          newAmount = Number(value) * Number(docUnitPrice);\n        }\n      } else if (name === \"rowUnitPrice\") {\n        let docQty = Number(newDocParticulars[index]?.rowQty || 0);\n        if (docQty && Number(docQty > 0)) {\n          newAmount = Number(value) * Number(docQty);\n        }\n      } else if (name === \"rowDiscountAmount\" || name === \"rowTaxCode\") {\n        let docUnitPrice = Number(newDocParticulars[index]?.rowUnitPrice || 0);\n        let docQty = Number(newDocParticulars[index]?.rowQty || 0);\n        newAmount = Number(docUnitPrice) * Number(docQty);\n      }\n\n      /**\n       * custom discount calculation for smart promote\n       */\n      if (companyDetails?.data?.documentTemplate === \"smart_promote\") {\n        if (name === \"rowDiscountAmount\") {\n          rowDiscountedAmount = Number(newAmount) - Number(value);\n        } else {\n          if (\n            newDocParticulars[index]?.rowDiscountAmount &&\n            Number(newDocParticulars[index]?.rowDiscountAmount) > 0\n          ) {\n            rowDiscountedAmount =\n              Number(newAmount) -\n              Number(newDocParticulars[index]?.rowDiscountAmount);\n          } else {\n            rowDiscountedAmount = Number(newAmount);\n          }\n        }\n\n        newDocParticulars[index] = {\n          ...newDocParticulars[index],\n          [name]: value,\n          rowAmount: newAmount,\n          rowDiscountedAmount: rowDiscountedAmount,\n        };\n      } else if (\n        /**\n         * check if company chosen require old or new table template\n         * template may alter depending on action -> add or update\n         * if action === add -> check if company's MRATemplateFlag is true to apply new template or not\n         * if action === update -> check if MRATemplateApplied to verify if the updated invoice has been saved with new template\n         */\n        (process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n          companyIdSelected &&\n          process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n            companyIdSelected\n          )) ||\n        (action === \"add\" && companyDetails?.data?.MRATemplateFlag?.value) ||\n        (action === \"update\" && MRATemplateApplied)\n      ) {\n        let isVatable = false;\n\n        if (\n          documentType?.id === \"invoice\" ||\n          documentType?.id === \"cash_transaction\"\n        ) {\n          isVatable = false;\n        } else if (name === \"rowTaxCode\") {\n          if (value && value?.id === \"TC01\") {\n            isVatable = true;\n          } else {\n            isVatable = false;\n          }\n        } else if (newDocParticulars[index]?.rowIsVatable === undefined) {\n          isVatable = true;\n        } else {\n          isVatable = newDocParticulars[index]?.rowIsVatable;\n        }\n\n        // apply discount\n        if (name === \"rowDiscountAmount\") {\n          rowDiscountedAmount = Number(newAmount) - Number(value);\n        } else {\n          if (\n            newDocParticulars[index]?.rowDiscountAmount &&\n            Number(newDocParticulars[index]?.rowDiscountAmount) > 0\n          ) {\n            rowDiscountedAmount =\n              Number(newAmount) -\n              Number(newDocParticulars[index]?.rowDiscountAmount);\n          } else {\n            rowDiscountedAmount = Number(newAmount);\n          }\n        }\n\n        if (isVatable) {\n          vatAmount = 0.15 * Number(rowDiscountedAmount);\n          totalAmount = vatAmount + rowDiscountedAmount;\n        } else {\n          totalAmount = rowDiscountedAmount;\n        }\n\n        let particularChange = {\n          rowIsVatable: isVatable,\n          rowAmount: newAmount,\n          rowDiscountedAmount: rowDiscountedAmount,\n          rowVatAmount: vatAmount,\n          rowTotalAmount: totalAmount,\n        };\n\n        // check if checkbox needs to be disabled or not\n        if (name === \"rowTaxCode\") {\n          if (value && value?.id) {\n            particularChange = {\n              ...particularChange,\n              rowVatCheckBoxDisabled: true,\n            };\n          } else {\n            particularChange = {\n              ...particularChange,\n              rowVatCheckBoxDisabled: false,\n            };\n          }\n        } else if (\n          newDocParticulars[index]?.rowTaxCode &&\n          newDocParticulars[index]?.rowTaxCode?.id\n        ) {\n          particularChange = {\n            ...particularChange,\n            rowVatCheckBoxDisabled: true,\n          };\n        } else {\n          particularChange = {\n            ...particularChange,\n            rowVatCheckBoxDisabled: false,\n          };\n        }\n\n        newDocParticulars[index] = {\n          ...newDocParticulars[index],\n          [name]: value,\n          ...particularChange,\n        };\n      } else {\n        if (documentType?.id !== \"invoice\") {\n          vatAmount = 0.15 * Number(newAmount);\n          totalAmount = vatAmount + Number(newAmount);\n        } else {\n          totalAmount = Number(newAmount);\n        }\n\n        newDocParticulars[index] = {\n          ...newDocParticulars[index],\n          [name]: value,\n          rowAmount: newAmount,\n          rowVatAmount: vatAmount,\n          rowTotalAmount: totalAmount,\n        };\n      }\n    } else {\n      newDocParticulars[index] = {\n        ...newDocParticulars[index],\n        [name]: value,\n      };\n    }\n\n    setDocumentDetails((previousState) => {\n      return {\n        ...previousState,\n        docParticulars: newDocParticulars,\n      };\n    });\n\n    if (\n      name === \"rowQty\" ||\n      name === \"rowUnitPrice\" ||\n      name === \"rowDiscountAmount\" ||\n      name === \"rowTaxCode\"\n    ) {\n      calculateTotal();\n    }\n  }\n\n  function handleOrderChange(value, index) {\n    // change order of row\n    let newDocParticulars = [...(docParticulars || [])];\n    const newOrderNumber = Number(value || 0);\n    newDocParticulars[index] = {\n      ...newDocParticulars[index],\n      rowOrder: newOrderNumber,\n    };\n\n    // sort all rows by order number\n    newDocParticulars.sort(dynamicSort(\"rowOrder\"));\n\n    setDocumentDetails({\n      ...documentDetails,\n      docParticulars: newDocParticulars,\n    });\n  }\n\n  function handleIsVatableChange(index, value) {\n    let newDocParticulars = [...(docParticulars || [])];\n\n    let discountedAmount = 0;\n    let vatAmount = 0;\n    let totalAmount = 0;\n\n    if (newDocParticulars[index]?.rowDiscountedAmount) {\n      discountedAmount = Number(\n        newDocParticulars[index]?.rowDiscountedAmount || 0\n      );\n    } else {\n      discountedAmount = Number(newDocParticulars[index]?.rowAmount || 0);\n    }\n\n    if (value) {\n      vatAmount = 0.15 * Number(discountedAmount);\n      totalAmount = vatAmount + discountedAmount;\n    } else {\n      totalAmount = discountedAmount;\n    }\n\n    newDocParticulars[index] = {\n      ...newDocParticulars[index],\n      rowIsVatable: value,\n      rowDiscountedAmount: discountedAmount,\n      rowVatAmount: vatAmount,\n      rowTotalAmount: totalAmount,\n    };\n\n    setDocumentDetails((previousState) => {\n      return {\n        ...previousState,\n        docParticulars: newDocParticulars,\n      };\n    });\n\n    calculateTotal();\n  }\n\n  async function deleteParticular(index) {\n    // remove respectiv row from table\n    let newDocParticulars = [...(docParticulars || [])];\n    newDocParticulars.splice(index, 1);\n    setDocumentDetails({\n      ...documentDetails,\n      docParticulars: newDocParticulars,\n    });\n  }\n\n  function selectSavedDesription(selectedDescription) {\n    if (selectedRowIndex !== null) {\n      let newDocParticulars = [...(docParticulars || [])];\n\n      // add selected description with current description if present\n      let newDesc =\n        (newDocParticulars[selectedRowIndex]?.rowDescription || \"\") +\n          selectedDescription || \"\";\n\n      // update state using index\n      newDocParticulars[selectedRowIndex] = {\n        ...newDocParticulars[selectedRowIndex],\n        rowDescription: newDesc,\n      };\n\n      setDocumentDetails({\n        ...documentDetails,\n        docParticulars: newDocParticulars,\n      });\n\n      // close popup\n      handleCloseDialog();\n    }\n  }\n\n  /*   async function setup() {\n    const defaultPart = [\n      {\n        rowOrder: 1,\n        rowDescription: \"CFS CHARGES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 2,\n        rowDescription: \"LANDING CHARGES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 3,\n        rowDescription: \"DOCUMENTATION FEES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 4,\n        rowDescription: \"AGENCY FEES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 5,\n        rowDescription: \"MACCS FEE\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 6,\n        rowDescription: \"THC\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 7,\n        rowDescription: \"CUSTOM VAT\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 8,\n        rowDescription: \"TRANSPORT\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 9,\n        rowDescription: \"OFFICE CHARGES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 10,\n        rowDescription: \"MNS FEES\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 11,\n        rowDescription: \"GATE PASS\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n      {\n        rowOrder: 12,\n        rowDescription: \"COLLECT FOR SHIPPER\",\n        rowQty: \"\",\n        rowUnitPrice: \"\",\n        rowAmount: \"\",\n        rowDiscountAmount: \"\",\n        rowDiscountedAmount: \"\",\n        rowIsVatable: false,\n        rowVatAmount: \"\",\n        rowTotalAmount: \"\",\n        rowTaxCode: null,\n        rowNature: { id: \"SERVICES\", title: \"Services\" },\n        rowVatCheckBoxDisabled: false,\n      },\n    ];\n\n    defaultPart.forEach(async (part) => {\n      await db\n        .collection(\"company\")\n        .doc(companyDetails?.id)\n        .collection(\"particulars\")\n        .add({ ...part })\n        .then(() => {\n          console.log(\"done\");\n        });\n    });\n  } */\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <hr />\n        <br />\n        <Typography>{`Please enter details required for the ${documentType?.title}`}</Typography>\n      </Grid>\n\n      {/*       <Button onClick={() => setup()}>set up</Button> */}\n\n      <Grid item xs={12} md={12}>\n        <Card>\n          <CardContent\n            style={{\n              background:\n                themeMode && themeMode === \"light\"\n                  ? \"#E2F3FE\"\n                  : palette.dark.background.paper,\n            }}\n          >\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={7}>\n                <Stack spacing={3}>\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"billTo\"\n                    label=\"Bill to\"\n                    id=\"billTo\"\n                    type=\"text\"\n                    value={docBillTo || \"\"}\n                    onChange={(event) => {\n                      setDocumentDetails((previous) => {\n                        return {\n                          ...previous,\n                          docBillTo: event.target.value,\n                        };\n                      });\n                    }}\n                    size=\"small\"\n                    fullWidth\n                    multiline\n                    minRows={5}\n                    InputProps={{\n                      className: classes.input,\n                    }}\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"shipTo\"\n                    label=\"Location\"\n                    id=\"shipTo\"\n                    type=\"text\"\n                    value={docShipTo || \"\"}\n                    onChange={(event) => {\n                      setDocumentDetails((previous) => {\n                        return {\n                          ...previous,\n                          docShipTo: event.target.value,\n                        };\n                      });\n                    }}\n                    size=\"small\"\n                    fullWidth\n                    multiline\n                    minRows={5}\n                    InputProps={{\n                      className: classes.input,\n                    }}\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <Grid container spacing={3}>\n                  {action && action !== \"update\" ? (\n                    <Grid item xs={12} md={12}>\n                      <Suspense fallback={<></>}>\n                        <DocumentConversion\n                          documentDetails={documentDetails}\n                          setDocumentDetails={setDocumentDetails}\n                          set_us_actionChoice={set_us_actionChoice}\n                          classStyle={classes.multilineInput}\n                        />\n                      </Suspense>\n                    </Grid>\n                  ) : (\n                    <></>\n                  )}\n\n                  {action && action === \"add\" ? (\n                    <Grid item xs={12} md={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"docCustomIdNumber\"\n                        label={\"Custom document Id number\"}\n                        id=\"docCustomIdNumber\"\n                        type=\"text\"\n                        value={docCustomIdNumber || \"\"}\n                        size=\"small\"\n                        fullWidth\n                        onChange={(event) => {\n                          setDocumentDetails((previous) => {\n                            return {\n                              ...previous,\n                              docCustomIdNumber: event.target.value,\n                            };\n                          });\n                        }}\n                        InputProps={{\n                          className: classes.input,\n                        }}\n                      />\n                    </Grid>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      name=\"invoiceDate\"\n                      label={`Date Of ${documentType?.title}`}\n                      id=\"invoiceDate\"\n                      type=\"date\"\n                      value={docDate || \"\"}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      size=\"small\"\n                      fullWidth\n                      // disabled\n                      onChange={(event) => {\n                        if (event.target.value) {\n                          setDocumentDetails((previous) => {\n                            return {\n                              ...previous,\n                              docDate: event.target.value,\n                            };\n                          });\n                        }\n                      }}\n                      InputProps={{\n                        className: classes.input,\n                      }}\n                      disabled={action === \"update\" ? false : true}\n                    />\n                  </Grid>\n\n                  {/**\n                   * Option to add quotation number\n                   */}\n                  {documentType?.id && documentType?.id !== \"quotation\" ? (\n                    <Grid item xs={12} md={12}>\n                      <Suspense fallback={<></>}>\n                        <QuotationOrPurchaseOrderInputField\n                          action={action}\n                          fieldType={\"quotation\"}\n                          us_doc_number={us_s_quotationNumber}\n                          set_us_doc_number={set_us_s_quotationNumber}\n                          classes={classes}\n                          logo={logo}\n                          sigImage={sigImage}\n                          documentDetails={documentDetails}\n                          setDocumentDetails={setDocumentDetails}\n                        />\n                      </Suspense>\n                    </Grid>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {/**\n                   * Option to add purchase order number\n                   */}\n                  {documentType?.id &&\n                  documentType?.id !== \"quotation\" &&\n                  documentType?.id !== \"purchase_order\" ? (\n                    <Grid item xs={12} md={12}>\n                      <Suspense fallback={<></>}>\n                        <QuotationOrPurchaseOrderInputField\n                          fieldType={\"purchase_order\"}\n                          us_doc_number={us_s_purchaseOrderNumber}\n                          set_us_doc_number={set_us_s_purchaseOrderNumber}\n                          classes={classes}\n                          logo={logo}\n                          sigImage={sigImage}\n                          documentDetails={documentDetails}\n                          setDocumentDetails={setDocumentDetails}\n                        />\n                      </Suspense>\n                    </Grid>\n                  ) : (\n                    \"\"\n                  )}\n                </Grid>\n              </Grid>\n\n              {documentType?.id !== \"quotation\" ? (\n                <Grid item xs={12} md={6}>\n                  <Autocomplete\n                    className={classes.multilineInput}\n                    style={{ borderRadius: \"10px\" }}\n                    ListboxProps={{\n                      style: { maxHeight: \"70vh\" },\n                    }}\n                    size=\"small\"\n                    label=\"Please define a type of transaction\"\n                    id=\"transaction-type-drop-down\"\n                    options={\n                      process.env.REACT_APP_EBS_TRANSACTION_TYPES\n                        ? JSON.parse(\n                            process.env.REACT_APP_EBS_TRANSACTION_TYPES\n                          )\n                        : []\n                    }\n                    value={transactionType}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Please define a type of transaction\"\n                        required\n                      />\n                    )}\n                    required\n                    onChange={(e, value, reason) => {\n                      e.preventDefault();\n                      if (\n                        reason !== \"removeOption\" &&\n                        reason !== \"clear\" &&\n                        value\n                      ) {\n                        setDocumentDetails({\n                          ...documentDetails,\n                          transactionType: value,\n                        });\n                      } else if (\n                        reason === \"removeOption\" ||\n                        reason === \"clear\"\n                      ) {\n                        setDocumentDetails({\n                          ...documentDetails,\n                          transactionType: null,\n                        });\n                      }\n                    }}\n                    getOptionLabel={(option) => option?.type || \"\"}\n                    fullWidth\n                  />\n                </Grid>\n              ) : (\n                <></>\n              )}\n\n              {documentType?.id !== \"quotation\" ? (\n                <Grid item xs={12} md={6}>\n                  <Autocomplete\n                    className={classes.multilineInput}\n                    style={{ borderRadius: \"10px\" }}\n                    ListboxProps={{\n                      style: { maxHeight: \"70vh\" },\n                    }}\n                    size=\"small\"\n                    label=\"Please define type of document\"\n                    id=\"invoice-type-drop-down\"\n                    options={\n                      documentType?.id === \"vat_invoice\" &&\n                      process.env.REACT_APP_EBS_INVOICE_TYPE_DESC_INVOICE\n                        ? JSON.parse(\n                            process.env.REACT_APP_EBS_INVOICE_TYPE_DESC_INVOICE\n                          )\n                        : documentType?.id === \"proforma\" &&\n                          process.env.REACT_APP_EBS_INVOICE_TYPE_DESC_PROFORMA\n                        ? JSON.parse(\n                            process.env.REACT_APP_EBS_INVOICE_TYPE_DESC_PROFORMA\n                          )\n                        : documentType?.id === \"credit_note\" &&\n                          process.env\n                            .REACT_APP_EBS_INVOICE_TYPE_DESC_CREDIT_NOTE\n                        ? JSON.parse(\n                            process.env\n                              .REACT_APP_EBS_INVOICE_TYPE_DESC_CREDIT_NOTE\n                          )\n                        : documentType?.id === \"debit_note\" &&\n                          process.env.REACT_APP_EBS_INVOICE_TYPE_DESC_DEBIT_NOTE\n                        ? JSON.parse(\n                            process.env\n                              .REACT_APP_EBS_INVOICE_TYPE_DESC_DEBIT_NOTE\n                          )\n                        : []\n                    }\n                    value={invoiceTypeDesc || null}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Please define type of document\"\n                      />\n                    )}\n                    required\n                    onChange={(e, value, reason) => {\n                      e.preventDefault();\n                      if (\n                        reason !== \"removeOption\" &&\n                        reason !== \"clear\" &&\n                        value\n                      ) {\n                        setDocumentDetails({\n                          ...documentDetails,\n                          invoiceTypeDesc: value,\n                        });\n                      } else if (\n                        reason === \"removeOption\" ||\n                        reason === \"clear\"\n                      ) {\n                        setDocumentDetails({\n                          ...documentDetails,\n                          invoiceTypeDesc: null,\n                        });\n                      }\n                    }}\n                    getOptionLabel={(option) => option?.type || \"\"}\n                    fullWidth\n                  />\n                </Grid>\n              ) : (\n                <></>\n              )}\n\n              {invoiceTypeDesc &&\n              (invoiceTypeDesc?.id === \"CRN\" ||\n                invoiceTypeDesc?.id === \"DRN\") ? (\n                <>\n                  {invoiceTypeDesc?.id === \"CRN\" ? (\n                    <Grid item xs={12} md={4}>\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"docReasonStated\"\n                        label=\"Reason\"\n                        id=\"docReasonStated\"\n                        type=\"text\"\n                        value={docReasonStated || \"\"}\n                        size=\"small\"\n                        fullWidth\n                        onChange={(event) => {\n                          setDocumentDetails((previous) => {\n                            return {\n                              ...previous,\n                              docReasonStated: event.target.value,\n                            };\n                          });\n                        }}\n                        InputProps={{\n                          className: classes.input,\n                        }}\n                      />\n                    </Grid>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Grid item xs={12} md={4}>\n                    <Tooltip title=\"This attribute defines the sequential number of an existing invoice. The attribute is mandatory if type of invoice is a Credit or a Debit\">\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"invoiceRefIdentifier\"\n                        label={\"Invoice Ref Identier\"}\n                        id=\"invoiceRefIdentifier\"\n                        type=\"text\"\n                        value={invoiceRefIdentifier || \"\"}\n                        size=\"small\"\n                        fullWidth\n                        onChange={(event) => {\n                          setDocumentDetails((previous) => {\n                            return {\n                              ...previous,\n                              invoiceRefIdentifier: event.target.value,\n                            };\n                          });\n                        }}\n                        InputProps={{\n                          className: classes.input,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                </>\n              ) : (\n                <></>\n              )}\n\n              {companyDetails &&\n              companyDetails?.data &&\n              companyDetails?.data?.documentTemplate === \"flexitrans\" ? (\n                <Suspense fallback={<></>}>\n                  <FlexitransCustom\n                    classes={classes}\n                    documentDetails={documentDetails}\n                    setDocumentDetails={setDocumentDetails}\n                  />\n                </Suspense>\n              ) : (\n                <></>\n              )}\n\n              {process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n              companyDetails?.id &&\n              process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n                companyDetails?.id\n              ) ? (\n                <Suspense fallback={<></>}>\n                  <WorldLinkCustom\n                    classes={classes}\n                    documentDetails={documentDetails}\n                    setDocumentDetails={setDocumentDetails}\n                  />\n                </Suspense>\n              ) : (\n                <></>\n              )}\n              <Grid item xs={12} md={12}>\n                <Divider flexItem />\n              </Grid>\n\n              {companyDetails &&\n              companyDetails?.data?.documentTemplate === \"transport\" ? (\n                <Suspense fallback={<></>}>\n                  <DocumentTableTransport\n                    action={action}\n                    classes={classes}\n                    companyDetails={companyDetails}\n                    companyIdSelected={companyIdSelected}\n                    documentDetails={documentDetails}\n                    setDocumentDetails={setDocumentDetails}\n                    deleteParticular={deleteParticular}\n                    originalDocParticulars={originalDocParticulars}\n                  />\n                </Suspense>\n              ) : (\n                <Suspense fallback={<></>}>\n                  <DocumentTableStandard\n                    companyDetails={companyDetails}\n                    documentDetails={documentDetails}\n                    setDocumentDetails={setDocumentDetails}\n                    documentType={documentType}\n                    savedDescriptions={savedDescriptions}\n                    set_us_openDialog={set_us_openDialog}\n                    set_us_openDialogSKUCodeSearch={\n                      set_us_openDialogSKUCodeSearch\n                    }\n                    set_us_openDialogContractAgreementSearch={\n                      set_us_openDialogContractAgreementSearch\n                    }\n                    handleInputChange={handleInputChange}\n                    handleOrderChange={handleOrderChange}\n                    handleIsVatableChange={handleIsVatableChange}\n                    deleteParticular={deleteParticular}\n                    setSelectedRowIndex={setSelectedRowIndex}\n                    action={action}\n                    companyMRATemplateFlag={\n                      companyDetails?.data?.MRATemplateFlag?.value\n                    }\n                    documentMRATemplateApplied={MRATemplateApplied}\n                    displayDiscountColumns={displayDiscountColumns}\n                    set_displayDiscountColumns={set_displayDiscountColumns}\n                    defaultParticularOptions={defaultParticularOptions}\n                  />\n                </Suspense>\n              )}\n\n              <Suspense fallback={<></>}>\n                <DocumentSummaryTotal\n                  documentType={documentType}\n                  documentDetails={documentDetails}\n                  action={action}\n                  companyMRATemplateFlag={\n                    companyDetails?.data?.MRATemplateFlag?.value\n                  }\n                  documentMRATemplateApplied={MRATemplateApplied}\n                  companyId={companyDetails?.id}\n                  inputClass={classes.input}\n                  setDocumentDetails={setDocumentDetails}\n                  documentTemplate={\n                    companyDetails?.data?.documentTemplate || \"\"\n                  }\n                  displayDiscountColumns={displayDiscountColumns}\n                  calculateTotal={calculateTotal}\n                />\n              </Suspense>\n\n              {action === \"add\" &&\n              documentType?.id === \"proforma\" &&\n              companyDetails?.id ===\n                process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID ? (\n                <Grid item xs={12} md={12}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} md={3}>\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"partialPaymentAmount\"\n                        label=\"Partial payment amount\"\n                        id=\"partialPaymentAmount\"\n                        type=\"text\"\n                        value={partialPaymentAmount || \"\"}\n                        onChange={(event) => {\n                          setPartialPaymentAmount(event.target.value);\n                        }}\n                        size=\"small\"\n                        fullWidth\n                        InputProps={{ className: classes.input }}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              ) : (\n                <></>\n              )}\n\n              <Grid item xs={12} md={4}>\n                <TextField\n                  variant=\"outlined\"\n                  name=\"termsAndCondition\"\n                  label=\"Terms and condition\"\n                  id=\"termsAndCondition\"\n                  type=\"text\"\n                  value={docTermsAndCondition || \"\"}\n                  onChange={(event) => {\n                    setDocumentDetails((previous) => {\n                      return {\n                        ...previous,\n                        docTermsAndCondition: event.target.value,\n                      };\n                    });\n                  }}\n                  size=\"small\"\n                  fullWidth\n                  multiline\n                  minRows={5}\n                  InputProps={{ className: classes.input }}\n                />\n              </Grid>\n              <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n                <Stack spacing={3} direction=\"row\">\n                  {action && action === \"add\" ? (\n                    <Suspense fallback={<></>}>\n                      <DocumentSaveButton\n                        originalDocParticulars={originalDocParticulars}\n                        documentDetails={documentDetails}\n                        us_s_quotationNumber={us_s_quotationNumber}\n                        us_s_purchaseOrderNumber={us_s_purchaseOrderNumber}\n                        set_us_showViewDocument={set_us_showViewDocument}\n                        refreshTable={refreshTable}\n                        fetchDescription={fetchDescription}\n                        displayDiscountColumns={displayDiscountColumns}\n                        partialPaymentAmount={partialPaymentAmount}\n                      />\n                    </Suspense>\n                  ) : action && action === \"update\" ? (\n                    <Suspense fallback={<></>}>\n                      <DocumentUpdateButton\n                        updateDocumentData={updateDocumentData}\n                        documentDetails={documentDetails}\n                        us_s_quotationNumber={us_s_quotationNumber}\n                        us_s_purchaseOrderNumber={us_s_purchaseOrderNumber}\n                        handleCloseUpdateDialog={handleCloseUpdateDialog}\n                        displayDiscountColumns={displayDiscountColumns}\n                      />\n                    </Suspense>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Button\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    onClick={() => {\n                      set_us_showViewDocument({\n                        showViewButton: false,\n                        savedDocument: null,\n                      });\n\n                      ref.current?.scrollIntoView({\n                        behavior: \"smooth\",\n                      });\n                    }}\n                    fullWidth\n                    style={{\n                      display: us_showViewDocument?.showViewButton\n                        ? \"\"\n                        : \"none\",\n                    }}\n                  >\n                    {`Create new ${documentType?.title}`}\n                  </Button>\n\n                  <Button\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    onClick={() => {\n                      set_us_actionChoice(\"view\");\n                    }}\n                    fullWidth\n                    style={{\n                      display: us_showViewDocument?.showViewButton\n                        ? \"\"\n                        : \"none\",\n                    }}\n                  >\n                    {`View ${documentType?.title}`}\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {us_openDialogSKUCodeSearch ? (\n        <SearchSkuCodeDialog\n          open={us_openDialogSKUCodeSearch}\n          handleCloseDialog={handleCloseDialog}\n          documentDetails={documentDetails}\n          setDocumentDetails={setDocumentDetails}\n          selectedRowIndex={selectedRowIndex}\n        />\n      ) : (\n        <></>\n      )}\n\n      {us_openDialogContractAgreementSearch ? (\n        <SearchContractAgreementDialog\n          open={us_openDialogContractAgreementSearch}\n          handleCloseDialog={handleCloseDialog}\n          documentDetails={documentDetails}\n          setDocumentDetails={setDocumentDetails}\n          selectedRowIndex={selectedRowIndex}\n          logo={logo}\n          sigImage={sigImage}\n        />\n      ) : (\n        <></>\n      )}\n\n      {us_openDialog ? (\n        <Dialog open={us_openDialog} maxWidth={\"sm\"} fullWidth>\n          <DialogTitle>Saved description</DialogTitle>\n          <DialogContent>\n            <br />\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={12}>\n                <TableContainer>\n                  <Table border={1}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell size=\"small\">Description</TableCell>\n                        <TableCell size=\"small\">Action</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {savedDescriptions?.map((desc, index) => (\n                        <TableRow key={index}>\n                          <TableCell size=\"small\">\n                            <Typography>{desc?.description}</Typography>\n                          </TableCell>\n                          <TableCell size=\"small\">\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                selectSavedDesription(desc?.description)\n                              }\n                            >\n                              select\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() => handleCloseDialog()}\n            >\n              cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}