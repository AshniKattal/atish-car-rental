{"version":3,"sources":["components/invoice-input-details/InvInputDetails.js"],"names":["InvInputDetails","action","handleCloseUpdateDialog","set_us_actionChoice","dispatch","useDispatch","enqueueSnackbar","useSnackbar","isDesktop","useResponsive","ref","useRef","useSelector","selectInvoiceSection","companyInvSelected","clientInvSelected","updateInvData","useState","invCompDetails","invClientDetails","undefined","data","clientDetails","invDate","moment","toDate","format","Date","invVehicleNo","invJobRef","invParticulars","invRemarks","invSubTotal","invStorageFee","invScanningFee","invEdiFee","invVatFee","invTotal","invDetails","setInvDetails","transportFees","us_transportFees","set_us_transportFees","transportDesc","us_transportDesc","set_us_transportDesc","us_newParticular","set_us_newParticular","us_particularDetail","set_us_particularDetail","us_newParticular_orderNum","set_us_newParticular_orderNum","us_new_particularDetailList","set_us_new_particularDetailList","showViewButton","savedInvoice","us_showViewInvoice","set_us_showViewInvoice","us_openDialog","set_us_openDialog","us_dlg_type","set_us_dlg_type","us_update_id","set_us_update_id","temp_fetch_particulars_ref","temp_calculateTotal_ref","a","setLoading","db","collection","doc","id","get","then","querySnapshot","docs","length","arr","forEach","push","orderNum","isChecked","title","customDetail","selectedValue","valueList","amount","sort","dynamicSort","catch","err","message","variant","useEffect","current","total","subTotal","process","REACT_APP_CUSTOM_ASHLEY_ID","REACT_APP_CUSTOM_SOREFAN_ID","particular","Number","handleCloseDialog","add","docRef","newInvParticularsList","set","merge","newList","handleInputChange","value","name","i","handleAdditionalFeesChange","fee","invoiceDocRef","runTransaction","transaction","sfDoc","exists","update","invNumber","newInvoiceNumber","invoiceDoc","toString","newInvParticulars","queryDocs","invoiceString","companyDetails","firebase","firestore","Timestamp","fromDate","paymentStatus","invRemainingPaymentAmt","attachedPaymentNumber","remainingPaymentAmount","paymentDone","paymentAmount","delete","item","xs","md","style","padding","container","spacing","direction","whiteSpace","margin","label","type","disabled","size","fullWidth","InputLabelProps","shrink","brn","onChange","event","target","width","sx","color","onClick","minWidth","align","checked","vatFee","vatPercentage","onHandleTransportFeeChange","map","index","display","flexDirection","justifyContent","alignItems","deleteParticular","handleOrderChange","e","handleChkChange","required","labelId","detail","handleAmountChange","toFixed","saveInvoice","scrollIntoView","behavior","open","maxWidth","parseInt","paddingTop","addParticularDetail","newDetail","handleParticularDetailChange","deleteNewParticularDetail","submitChanges"],"mappings":"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","file":"static/js/73.f436e65c.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n// @mui\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectInvoiceSection } from \"../../features/invoiceSectionSlice\";\nimport Scrollbar from \"../Scrollbar\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport db from \"../../firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport moment from \"moment\";\nimport firebase from \"firebase/compat\";\nimport { dynamicSort } from \"../core-functions/SelectionCoreFunctions\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\n// ----------------------------------------------------------------------\n\nexport default function InvInputDetails({\n  action,\n  handleCloseUpdateDialog,\n  set_us_actionChoice,\n}) {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const isDesktop = useResponsive(\"up\", \"md\");\n\n  const ref = useRef(null);\n\n  const { companyInvSelected, clientInvSelected, updateInvData } =\n    useSelector(selectInvoiceSection);\n\n  const [invDetails, setInvDetails] = useState({\n    /* invCompDetails: { ...companyInvSelected },\n    invClientDetails: { ...clientInvSelected },\n    invDate: moment(new Date()).format(\"yyyy-MM-DD\"), */\n    /*  invCompDetails: {},\n    invClientDetails: {},\n    invDate: \"\",\n    invVehicleNo: \"\",\n    invJobRef: \"\",\n    invParticulars: [],\n    invRemarks: \"\",\n    invSubTotal: 0,\n    invStorageFee: 0,\n    invScanningFee: 0,\n    invEdiFee: 0,\n    invVatFee: 0,\n    invTotal: 0, */\n\n    invCompDetails: { ...companyInvSelected },\n    invClientDetails:\n      action === \"update\" && updateInvData !== undefined\n        ? { ...updateInvData?.data?.clientDetails }\n        : { ...clientInvSelected },\n    invDate:\n      action === \"update\" && updateInvData !== undefined\n        ? moment(updateInvData?.data?.invDate.toDate()).format(\"yyyy-MM-DD\")\n        : moment(new Date()).format(\"yyyy-MM-DD\"),\n    invVehicleNo:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invVehicleNo || \"\"\n        : \"\",\n    invJobRef:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invJobRef || \"\"\n        : \"\",\n    invParticulars:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invParticulars || []\n        : [],\n    invRemarks:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invRemarks || \"\"\n        : \"\",\n    invSubTotal:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invSubTotal || \"\"\n        : \"\",\n    invStorageFee:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invStorageFee || \"\"\n        : \"\",\n    invScanningFee:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invScanningFee || \"\"\n        : \"\",\n    invEdiFee:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invEdiFee || \"\"\n        : \"\",\n    invVatFee:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invVatFee || \"\"\n        : \"\",\n    invTotal:\n      action === \"update\" && updateInvData !== undefined\n        ? updateInvData?.data?.invTotal || \"\"\n        : \"\",\n  });\n\n  const {\n    invClientDetails,\n    invDate,\n    invVehicleNo,\n    invJobRef,\n    invParticulars,\n    invRemarks,\n    invSubTotal,\n    invStorageFee,\n    invScanningFee,\n    invEdiFee,\n    invVatFee,\n    invTotal,\n  } = invDetails;\n\n  const [us_transportFees, set_us_transportFees] = useState(\n    action === \"update\" && updateInvData !== undefined\n      ? updateInvData?.data?.transportFees || \"\"\n      : \"\"\n  );\n\n  const [us_transportDesc, set_us_transportDesc] = useState(\n    action === \"update\" && updateInvData !== undefined\n      ? updateInvData?.data?.transportDesc || \"\"\n      : \"\"\n  );\n\n  const [us_newParticular, set_us_newParticular] = useState(\"\");\n\n  const [us_particularDetail, set_us_particularDetail] = useState(\"\");\n\n  const [us_newParticular_orderNum, set_us_newParticular_orderNum] =\n    useState(0);\n\n  const [us_new_particularDetailList, set_us_new_particularDetailList] =\n    useState([]);\n\n  const [us_showViewInvoice, set_us_showViewInvoice] = useState({\n    showViewButton: false,\n    savedInvoice: null,\n  });\n\n  const [us_openDialog, set_us_openDialog] = useState(false);\n\n  const [us_dlg_type, set_us_dlg_type] = useState(\"\");\n\n  const [us_update_id, set_us_update_id] = useState(\"\");\n\n  const temp_fetch_particulars_ref = useRef();\n\n  const temp_calculateTotal_ref = useRef();\n\n  // fetch all stored particulars\n  useEffect(() => {\n    temp_fetch_particulars_ref.current();\n  }, [action]);\n\n  // calculate total\n  useEffect(() => {\n    temp_calculateTotal_ref.current();\n  }, [\n    invParticulars,\n    invStorageFee,\n    invScanningFee,\n    us_transportFees,\n    invVatFee,\n  ]);\n\n  async function fetchParticulars() {\n    set_us_showViewInvoice({\n      showViewButton: false,\n      savedInvoice: null,\n    });\n\n    if (action && action === \"add\") {\n      dispatch(setLoading(true));\n\n      await db\n        .collection(\"company\")\n        .doc(companyInvSelected?.id)\n        .collection(\"particulars\")\n        .get()\n        .then(async (querySnapshot) => {\n          if (querySnapshot?.docs?.length > 0) {\n            let arr = [];\n            querySnapshot?.docs.forEach((doc) => {\n              arr.push({\n                orderNum: doc?.data()?.orderNum || \"\",\n                id: doc.id,\n                isChecked: true,\n                title: doc?.data()?.title,\n                customDetail: \"\",\n                selectedValue: \"\",\n                valueList: doc?.data()?.valueList || [],\n                amount: 0,\n              });\n            });\n\n            arr.sort(dynamicSort(\"orderNum\"));\n\n            setInvDetails({ ...invDetails, invParticulars: arr });\n            dispatch(setLoading(false));\n          } else {\n            await db\n              .collection(\"particulars\")\n              .get()\n              .then((querySnapshot) => {\n                if (querySnapshot?.docs?.length > 0) {\n                  let arr = [];\n                  querySnapshot?.docs.forEach((doc) => {\n                    arr.push({\n                      orderNum: doc?.data()?.orderNum || \"\",\n                      id: doc.id,\n                      isChecked: true,\n                      title: doc?.data()?.title,\n                      customDetail: \"\",\n                      selectedValue: \"\",\n                      valueList: doc?.data()?.valueList || [],\n                      amount: 0,\n                    });\n                  });\n\n                  arr.sort(dynamicSort(\"orderNum\"));\n\n                  setInvDetails({ ...invDetails, invParticulars: arr });\n                  dispatch(setLoading(false));\n                } else {\n                  setInvDetails({ ...invDetails, invParticulars: [] });\n                  dispatch(setLoading(false));\n                }\n              })\n              .catch((err) => {\n                enqueueSnackbar(\n                  `Error occured while fetching particulars: ${err?.message}`,\n                  { variant: \"error\" }\n                );\n                dispatch(setLoading(false));\n              });\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while fetching particulars: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  temp_fetch_particulars_ref.current = fetchParticulars;\n\n  function calculateTotal() {\n    let subTotal = 0;\n    let total = 0;\n\n    // custom total calculation for ashley\n    // only one amount for ashley -> transport fees\n    if (\n      companyInvSelected &&\n      (companyInvSelected?.id === process.env.REACT_APP_CUSTOM_ASHLEY_ID ||\n        companyInvSelected?.id === process.env.REACT_APP_CUSTOM_SOREFAN_ID)\n    ) {\n      subTotal = subTotal + Number(us_transportFees);\n    } else {\n      // total particulars\n      if (invParticulars?.length > 0) {\n        invParticulars.forEach((particular) => {\n          if (particular?.isChecked) {\n            subTotal = subTotal + Number(particular?.amount || 0);\n          }\n        });\n      }\n    }\n\n    // fees\n    total =\n      subTotal +\n      Number(invStorageFee) +\n      Number(invScanningFee) +\n      Number(invVatFee);\n\n    setInvDetails({ ...invDetails, invSubTotal: subTotal, invTotal: total });\n  }\n\n  temp_calculateTotal_ref.current = calculateTotal;\n\n  function handleAmountChange(value, id) {\n    if (Number(value) >= 0) {\n      if (invParticulars?.length > 0) {\n        let newList = [];\n        for (var i = 0; i < invParticulars?.length; i++) {\n          if (invParticulars[i].id === id) {\n            if (Number(value) > 0) {\n              newList.push({\n                ...invParticulars[i],\n                amount: value,\n                isChecked: true,\n              });\n            } else if (Number(value) <= 0) {\n              newList.push({\n                ...invParticulars[i],\n                amount: value,\n                isChecked: false,\n              });\n            }\n          } else {\n            newList.push(invParticulars[i]);\n          }\n        }\n        setInvDetails({ ...invDetails, invParticulars: newList });\n      }\n    }\n  }\n\n  const handleCloseDialog = () => {\n    set_us_openDialog(false);\n    set_us_dlg_type(\"\");\n    set_us_update_id(\"\");\n  };\n\n  function deleteNewParticularDetail(index) {\n    if (us_new_particularDetailList?.length > 0) {\n      if (us_new_particularDetailList?.length === 1) {\n        set_us_new_particularDetailList([]);\n      } else {\n        let newList = [];\n        for (var i = 0; i < us_new_particularDetailList?.length; i++) {\n          if (i !== index) {\n            newList.push(us_new_particularDetailList[i]);\n          }\n        }\n        set_us_new_particularDetailList(newList);\n      }\n    }\n  }\n\n  function addParticularDetail() {\n    if (us_particularDetail && us_particularDetail !== \"\") {\n      let newList = [...us_new_particularDetailList];\n      newList.push(us_particularDetail);\n      set_us_new_particularDetailList(newList);\n\n      set_us_particularDetail(\"\");\n    }\n  }\n\n  function handleParticularDetailChange(index, value) {\n    if (us_new_particularDetailList?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < us_new_particularDetailList?.length; i++) {\n        if (i === index) {\n          newList.push(value);\n        } else {\n          newList.push(us_new_particularDetailList[i]);\n        }\n      }\n      set_us_new_particularDetailList(newList);\n    }\n  }\n\n  async function submitChanges() {\n    if (us_newParticular !== undefined && us_newParticular !== \"\") {\n      dispatch(setLoading(true));\n\n      if (us_dlg_type === \"add\") {\n        await db\n          .collection(\"company\")\n          .doc(companyInvSelected?.id)\n          .collection(\"particulars\")\n          .add({\n            orderNum: us_newParticular_orderNum,\n            title: us_newParticular,\n            customDetail: us_particularDetail,\n            selectedValue: \"\",\n            valueList: [us_particularDetail],\n          })\n          .then((docRef) => {\n            enqueueSnackbar(\"Particular added successfully\");\n\n            let newInvParticularsList = [\n              ...invDetails?.invParticulars,\n              {\n                id: docRef?.id,\n                isChecked: false,\n                title: us_newParticular,\n                customDetail: us_particularDetail,\n                orderNum: us_newParticular_orderNum,\n                valueList: [us_particularDetail],\n                amount: 0,\n              },\n            ];\n\n            newInvParticularsList.sort(dynamicSort(\"orderNum\"));\n\n            setInvDetails({\n              ...invDetails,\n              invParticulars: newInvParticularsList,\n            });\n\n            set_us_particularDetail(\"\");\n            set_us_newParticular(\"\");\n            set_us_newParticular_orderNum(0);\n            set_us_new_particularDetailList([]);\n\n            handleCloseDialog();\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while adding new particular: ${\n                err?.message || \"\"\n              }`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      } else if (us_dlg_type === \"update\") {\n        await db\n          .collection(\"company\")\n          .doc(companyInvSelected?.id)\n          .collection(\"particulars\")\n          .doc(us_update_id)\n          .set(\n            {\n              title: us_newParticular,\n              valueList: us_new_particularDetailList,\n            },\n            { merge: true }\n          )\n          .then(() => {\n            enqueueSnackbar(\"Particular updated successfully\");\n\n            let newList = [];\n            if (invDetails?.invParticulars?.length > 0) {\n              invDetails?.invParticulars.forEach((particular) => {\n                if (particular?.id === us_update_id) {\n                  newList.push({\n                    ...particular,\n                    title: us_newParticular,\n                    valueList: us_new_particularDetailList,\n                    // selectedValue: us_new_particularDetailList[0],\n                  });\n                } else {\n                  newList.push({ ...particular });\n                }\n              });\n            }\n\n            setInvDetails({\n              ...invDetails,\n              invParticulars: newList,\n            });\n\n            set_us_particularDetail(\"\");\n            set_us_newParticular(\"\");\n            set_us_new_particularDetailList([]);\n\n            handleCloseDialog();\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while adding new particular: ${\n                err?.message || \"\"\n              }`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    }\n  }\n\n  function handleChkChange(value, id) {\n    if (invParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < invParticulars?.length; i++) {\n        if (invParticulars[i].id === id) {\n          newList.push({ ...invParticulars[i], isChecked: value });\n        } else {\n          newList.push(invParticulars[i]);\n        }\n      }\n      setInvDetails({ ...invDetails, invParticulars: newList });\n    }\n  }\n\n  function handleInputChange(value, id, name) {\n    if (invParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < invParticulars?.length; i++) {\n        if (invParticulars[i].id === id) {\n          newList.push({ ...invParticulars[i], [name]: value });\n        } else {\n          newList.push(invParticulars[i]);\n        }\n      }\n      setInvDetails({ ...invDetails, invParticulars: newList });\n    }\n  }\n\n  function handleOrderChange(value, id) {\n    if (invParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < invParticulars?.length; i++) {\n        if (invParticulars[i].id === id) {\n          newList.push({ ...invParticulars[i], orderNum: Number(value) });\n        } else {\n          newList.push(invParticulars[i]);\n        }\n      }\n\n      newList.sort(dynamicSort(\"orderNum\"));\n\n      setInvDetails({ ...invDetails, invParticulars: newList });\n    }\n  }\n\n  function handleAdditionalFeesChange(value, fee) {\n    if (Number(value) >= 0) {\n      setInvDetails({ ...invDetails, [fee]: value });\n    }\n  }\n\n  /*   async function deleteParticular(id) {\n    dispatch(setLoading(true));\n    await db\n      .collection(\"particulars\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        const newList = invDetails?.invParticulars.filter(\n          (particular) => particular.id !== id\n        );\n\n        setInvDetails({\n          ...invDetails,\n          invParticulars: newList,\n        });\n\n        enqueueSnackbar(\"Particular successfully deleted!\");\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Error removing document: ${error?.message}`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      });\n  } */\n\n  async function saveInvoice() {\n    dispatch(setLoading(true));\n\n    if (action === \"add\") {\n      var invoiceDocRef = db\n        .collection(\"company\")\n        .doc(companyInvSelected?.id)\n        .collection(\"invoice\")\n        .doc(\"invNumber\");\n\n      db.runTransaction((transaction) => {\n        return transaction.get(invoiceDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            // throw \"Document does not exist!\";\n            transaction.update(invoiceDocRef, { invNumber: 1 });\n            return 1;\n          }\n\n          var newInvoiceNumber = Number(sfDoc.data().invNumber) + 1;\n          transaction.update(invoiceDocRef, { invNumber: newInvoiceNumber });\n          return newInvoiceNumber;\n        });\n      })\n        .then(async (newInvoiceNumber) => {\n          let invoiceDoc = newInvoiceNumber.toString();\n          if (invoiceDoc?.length === 1) {\n            invoiceDoc = `0000${invoiceDoc}`;\n          } else if (invoiceDoc?.length === 2) {\n            invoiceDoc = `000${invoiceDoc}`;\n          } else if (invoiceDoc?.length === 3) {\n            invoiceDoc = `00${invoiceDoc}`;\n          } else if (invoiceDoc?.length === 4) {\n            invoiceDoc = `0${invoiceDoc}`;\n          }\n\n          // check for new customDetail -> save as new doc in db if present\n          let newInvParticulars = [];\n          if (invParticulars?.length > 0) {\n            invParticulars.forEach(async (particular) => {\n              if (particular?.customDetail !== \"\") {\n                // save customDetail\n                newInvParticulars.push({\n                  ...particular,\n                  valueList: [\n                    ...particular?.valueList,\n                    particular?.customDetail,\n                  ],\n                });\n              } else {\n                newInvParticulars.push({ ...particular });\n              }\n            });\n          }\n\n          // check if company has collection particulars\n          await db\n            .collection(\"company\")\n            .doc(companyInvSelected?.id)\n            .collection(\"particulars\")\n            .get()\n            .then(async (queryDocs) => {\n              // save all particulars if no particulars present\n              if (queryDocs?.docs?.length === 0) {\n                if (newInvParticulars?.length > 0) {\n                  newInvParticulars.forEach(async (particular) => {\n                    await db\n                      .collection(\"company\")\n                      .doc(companyInvSelected?.id)\n                      .collection(\"particulars\")\n                      .add({\n                        orderNum: particular?.orderNum || \"\",\n                        title: particular?.title || \"\",\n                        customDetail: particular?.customDetail || \"\",\n                        selectedValue: particular?.selectedValue || \"\",\n                        valueList: particular?.valueList || [],\n                        isChecked: particular?.isChecked || false,\n                        amount: particular?.amount || \"\",\n                      });\n                  });\n                }\n              } else {\n                // update entire particulars list\n                if (newInvParticulars?.length > 0) {\n                  newInvParticulars.forEach(async (particular) => {\n                    if (particular?.id && particular?.id !== \"\") {\n                      await db\n                        .collection(\"company\")\n                        .doc(companyInvSelected?.id)\n                        .collection(\"particulars\")\n                        .doc(particular?.id)\n                        .update(\n                          {\n                            ...particular,\n                          },\n                          { merge: true }\n                        );\n                    }\n                  });\n                }\n              }\n\n              // save invoice\n              await db\n                .collection(\"company\")\n                .doc(companyInvSelected?.id)\n                .collection(\"invoice\")\n                .doc(newInvoiceNumber.toString())\n                .set(\n                  {\n                    id: newInvoiceNumber.toString(),\n                    invoiceString: invoiceDoc,\n                    companyDetails: companyInvSelected,\n                    clientDetails: clientInvSelected,\n                    invDate: firebase.firestore.Timestamp.fromDate(new Date()),\n                    invVehicleNo: invVehicleNo,\n                    invJobRef: invJobRef,\n                    invParticulars: newInvParticulars,\n                    invRemarks: invRemarks,\n                    invSubTotal: invSubTotal,\n                    invStorageFee: invStorageFee,\n                    invScanningFee: invScanningFee,\n                    invEdiFee: invEdiFee,\n                    invVatFee: invVatFee,\n                    invTotal: invTotal,\n                    transportDesc: us_transportDesc,\n                    transportFees: us_transportFees,\n                    // used in payment section\n                    paymentStatus: \"Unpaid\",\n                    invRemainingPaymentAmt: invTotal,\n                    attachedPaymentNumber: [],\n                  },\n                  { merge: true }\n                )\n                .then(async () => {\n                  dispatch(setLoading(true));\n\n                  set_us_showViewInvoice({\n                    showViewButton: true,\n                    savedInvoice: {\n                      id: newInvoiceNumber.toString(),\n                      invoiceString: invoiceDoc,\n                      companyDetails: companyInvSelected,\n                      clientDetails: clientInvSelected,\n                      invDate: firebase.firestore.Timestamp.fromDate(\n                        new Date()\n                      ),\n                      invVehicleNo: invVehicleNo,\n                      invJobRef: invJobRef,\n                      invParticulars: newInvParticulars,\n                      invRemarks: invRemarks,\n                      invSubTotal: invSubTotal,\n                      invStorageFee: invStorageFee,\n                      invScanningFee: invScanningFee,\n                      invEdiFee: invEdiFee,\n                      invVatFee: invVatFee,\n                      invTotal: invTotal,\n                      transportDesc: us_transportDesc,\n                      transportFees: us_transportFees,\n                      // used in payment section\n                      paymentStatus: \"Unpaid\",\n                      invRemainingPaymentAmt: invTotal,\n                      attachedPaymentNumber: [],\n                    },\n                  });\n\n                  await db\n                    .collection(\"company\")\n                    .doc(companyInvSelected?.id)\n                    .collection(\"particulars\")\n                    .get()\n                    .then(async (querySnapshot) => {\n                      if (querySnapshot?.docs?.length > 0) {\n                        let arr = [];\n                        querySnapshot?.docs.forEach((doc) => {\n                          arr.push({\n                            orderNum: doc?.data()?.orderNum || \"\",\n                            id: doc.id,\n                            isChecked: true,\n                            title: doc?.data()?.title,\n                            customDetail: \"\",\n                            selectedValue: \"\",\n                            valueList: doc?.data()?.valueList || [],\n                            amount: 0,\n                          });\n                        });\n\n                        arr.sort(dynamicSort(\"orderNum\"));\n\n                        setInvDetails({\n                          ...invDetails,\n                          invParticulars: [...arr],\n                          invCompDetails: { ...companyInvSelected },\n                          invClientDetails: { ...clientInvSelected },\n                          invDate: moment(new Date()).format(\"yyyy-MM-DD\"),\n                          invVehicleNo: \"\",\n                          invJobRef: \"\",\n                          invRemarks: \"\",\n                          invSubTotal: \"\",\n                          invStorageFee: \"\",\n                          invScanningFee: \"\",\n                          invEdiFee: \"\",\n                          invVatFee: \"\",\n                          invTotal: \"\",\n                        });\n                        dispatch(setLoading(false));\n                      }\n                    });\n\n                  enqueueSnackbar(\"Invoice saved successfully\");\n\n                  dispatch(setLoading(false));\n                })\n                .catch((err) => {\n                  enqueueSnackbar(\n                    `Error occured while saving Invoice: ${err?.message}`,\n                    { variant: \"error\" }\n                  );\n                  dispatch(setLoading(false));\n                });\n            });\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while doing Invoice transaction: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else if (action === \"update\") {\n      // check for new customDetail -> save as new doc in db if present\n      let newInvParticulars = [];\n      if (invParticulars?.length > 0) {\n        invParticulars.forEach(async (particular) => {\n          if (particular?.customDetail !== \"\") {\n            // save customDetail\n            newInvParticulars.push({\n              ...particular,\n              valueList: [...particular?.valueList, particular?.customDetail],\n            });\n          } else {\n            newInvParticulars.push({ ...particular });\n          }\n        });\n      }\n\n      // check if company has collection particulars\n      await db\n        .collection(\"company\")\n        .doc(companyInvSelected?.id)\n        .collection(\"particulars\")\n        .get()\n        .then(async (queryDocs) => {\n          // save all particulars if no particulars present\n          if (queryDocs?.docs?.length === 0) {\n            if (newInvParticulars?.length > 0) {\n              newInvParticulars.forEach(async (particular) => {\n                await db\n                  .collection(\"company\")\n                  .doc(companyInvSelected?.id)\n                  .collection(\"particulars\")\n                  .add({\n                    orderNum: particular?.orderNum || \"\",\n                    title: particular?.title || \"\",\n                    customDetail: particular?.customDetail || \"\",\n                    selectedValue: particular?.selectedValue || \"\",\n                    valueList: particular?.valueList || [],\n                    isChecked: particular?.isChecked || false,\n                    amount: particular?.amount || \"\",\n                  });\n              });\n            }\n          } else {\n            // update entire particulars list\n            if (newInvParticulars?.length > 0) {\n              newInvParticulars.forEach(async (particular) => {\n                if (particular?.id && particular?.id !== \"\") {\n                  await db\n                    .collection(\"company\")\n                    .doc(companyInvSelected?.id)\n                    .collection(\"particulars\")\n                    .doc(particular?.id)\n                    .update(\n                      {\n                        ...particular,\n                      },\n                      { merge: true }\n                    );\n                }\n              });\n            }\n          }\n\n          // calculate remaining payment amount\n          let remainingPaymentAmount = Number(invTotal);\n          if (\n            updateInvData?.data?.attachedPaymentNumber &&\n            updateInvData?.data?.attachedPaymentNumber?.length > 0\n          ) {\n            updateInvData?.data?.attachedPaymentNumber.forEach(\n              (paymentDone) => {\n                remainingPaymentAmount =\n                  remainingPaymentAmount - Number(paymentDone?.paymentAmount);\n              }\n            );\n          }\n\n          // save invoice\n          await db\n            .collection(\"company\")\n            .doc(companyInvSelected?.id)\n            .collection(\"invoice\")\n            .doc(updateInvData?.id)\n            .set(\n              {\n                companyDetails: companyInvSelected,\n                clientDetails: invClientDetails,\n                invVehicleNo: invVehicleNo,\n                invJobRef: invJobRef,\n                invParticulars: newInvParticulars,\n                invRemarks: invRemarks,\n                invSubTotal: invSubTotal,\n                invStorageFee: invStorageFee,\n                invScanningFee: invScanningFee,\n                invEdiFee: invEdiFee,\n                invVatFee: invVatFee,\n                invTotal: invTotal,\n                invRemainingPaymentAmt: remainingPaymentAmount,\n                transportDesc: us_transportDesc,\n                transportFees: us_transportFees,\n              },\n              { merge: true }\n            )\n            .then(() => {\n              enqueueSnackbar(\"Invoice updated successfully\");\n              if (handleCloseUpdateDialog) {\n                handleCloseUpdateDialog(true);\n              }\n\n              dispatch(setLoading(false));\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while updating Invoice: ${err?.message}`,\n                { variant: \"error\" }\n              );\n              dispatch(setLoading(false));\n            });\n        });\n    }\n  }\n\n  async function deleteParticular(id) {\n    dispatch(setLoading(true));\n\n    let newInvParticulars = [];\n    if (invParticulars?.length > 0) {\n      invParticulars.forEach(async (particular) => {\n        if (particular?.id !== id) {\n          newInvParticulars.push({\n            ...particular,\n          });\n        }\n      });\n\n      newInvParticulars.sort(dynamicSort(\"orderNum\"));\n\n      setInvDetails({ ...invDetails, invParticulars: newInvParticulars });\n    } else {\n      setInvDetails({ ...invDetails, invParticulars: [] });\n    }\n\n    await db\n      .collection(\"company\")\n      .doc(companyInvSelected?.id)\n      .collection(\"particulars\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        enqueueSnackbar(\"Particular deleted successfully\");\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while deleting particular: ${err?.message || \"\"}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  function onHandleTransportFeeChange(value) {\n    if (Number(value) >= 0) {\n      set_us_transportFees(value);\n\n      // calculate vat on transport if vat percentage is not zero\n      if (\n        companyInvSelected?.data?.vatPercentage &&\n        Number(companyInvSelected?.data?.vatPercentage) > 0\n      ) {\n        let vatFee = 0;\n        vatFee =\n          (Number(companyInvSelected?.data?.vatPercentage) / 100) *\n          Number(value);\n        setInvDetails({ ...invDetails, invVatFee: vatFee });\n      }\n    }\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <hr />\n        <br />\n        <Typography>Please enter details required for the invoice</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12} ref={ref}>\n        <Card /* style={{ width: isDesktop ? \"40%\" : \"100%\" }} */>\n          <Stack style={{ padding: \"20px\" }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Stack direction={\"row\"} spacing={3}>\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\n                    Send Invoice to\n                  </Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    name=\"clientName\"\n                    label=\"Sent Invoice to\"\n                    id=\"clientName\"\n                    type=\"text\"\n                    value={invClientDetails?.data?.name || \"\"}\n                    disabled\n                    size=\"small\"\n                    fullWidth\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Stack direction={\"row\"} spacing={3}>\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>Date</Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    name=\"invoiceDate\"\n                    label=\"Date Of Invoice\"\n                    id=\"invoiceDate\"\n                    type=\"date\"\n                    value={invDate}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    size=\"small\"\n                    fullWidth\n                    disabled\n                  />\n                </Stack>\n              </Grid>\n              {companyInvSelected &&\n                companyInvSelected?.id !==\n                  process.env.REACT_APP_CUSTOM_SOREFAN_ID && (\n                  <Grid item xs={12} md={6}>\n                    <Stack direction={\"row\"} spacing={3}>\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        Clients BRN\n                      </Typography>\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        name=\"clientBrn\"\n                        label=\"Clients BRN\"\n                        id=\"clientBrn\"\n                        type=\"text\"\n                        value={invClientDetails?.data?.brn || \"\"}\n                        disabled\n                        size=\"small\"\n                        fullWidth\n                      />\n                    </Stack>\n                  </Grid>\n                )}\n\n              <Grid item xs={12} md={6}>\n                <Stack direction={\"row\"} spacing={3}>\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\n                    {companyInvSelected &&\n                    companyInvSelected?.id ===\n                      process.env.REACT_APP_CUSTOM_SOREFAN_ID\n                      ? \"Lorry number\"\n                      : \"Vehicle number\"}\n                  </Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    name=\"invVehicleNo\"\n                    label=\"Vehicle Number\"\n                    id=\"invVehicleNo\"\n                    type=\"text\"\n                    value={invVehicleNo || \"\"}\n                    size=\"small\"\n                    onChange={(event) =>\n                      setInvDetails({\n                        ...invDetails,\n                        invVehicleNo: event.target.value,\n                      })\n                    }\n                    fullWidth\n                  />\n                </Stack>\n              </Grid>\n              {companyInvSelected &&\n                companyInvSelected?.id !==\n                  process.env.REACT_APP_CUSTOM_SOREFAN_ID && (\n                  <Grid item xs={12} md={12}>\n                    <Stack direction={\"row\"} spacing={3}>\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        Job Ref\n                      </Typography>\n                      <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        name=\"invJobRef\"\n                        label=\"Job Ref\"\n                        id=\"invJobRef\"\n                        type=\"text\"\n                        value={invJobRef || \"\"}\n                        size=\"small\"\n                        onChange={(event) =>\n                          setInvDetails({\n                            ...invDetails,\n                            invJobRef: event.target.value,\n                          })\n                        }\n                        fullWidth\n                      />\n                    </Stack>\n                  </Grid>\n                )}\n            </Grid>\n          </Stack>\n        </Card>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <hr />\n        <br />\n        <Typography>Please enter particulars</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Card style={{ width: \"100%\" }}>\n          <Stack sx={{ padding: \"20px\", width: \"100%\" }}>\n            <Scrollbar>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  set_us_openDialog(true);\n                  set_us_dlg_type(\"add\");\n                  set_us_update_id(\"\");\n                }}\n              >\n                Add new particular\n              </Button>\n              <br />\n              <br />\n              <TableContainer>\n                <Table style={{ width: \"100%\", minWidth: 650 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\", whiteSpace: \"nowrap\" }}\n                      />\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Order\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\" }}\n                      >\n                        Select\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        style={{ width: \"20%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Particulars\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"45%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Description\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"20%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Amount (Rs)\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {companyInvSelected &&\n                      (companyInvSelected?.id ===\n                        process.env.REACT_APP_CUSTOM_ASHLEY_ID ||\n                        companyInvSelected?.id ===\n                          process.env.REACT_APP_CUSTOM_SOREFAN_ID) && (\n                        <TableRow>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          />\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            Fixed\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Checkbox checked={true} />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            Transport fees\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"transportDesc\"\n                              id=\"transportDesc\"\n                              type=\"text\"\n                              value={us_transportDesc || \"\"}\n                              size=\"small\"\n                              onChange={(event) => {\n                                set_us_transportDesc(event.target.value);\n                              }}\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"transportFees\"\n                              id=\"transportFees\"\n                              type=\"text\"\n                              value={us_transportFees || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                onHandleTransportFeeChange(event.target.value)\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                        </TableRow>\n                      )}\n\n                    {invParticulars &&\n                      invParticulars?.length > 0 &&\n                      invParticulars?.map((particular, index) => (\n                        <TableRow key={index}>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"center\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <IconButton\n                              onClick={() => {\n                                set_us_dlg_type(\"update\");\n                                set_us_update_id(particular?.id || \"\");\n                                set_us_newParticular(particular?.title || \"\");\n                                set_us_new_particularDetailList(\n                                  particular?.valueList || []\n                                );\n                                set_us_newParticular_orderNum(\n                                  particular?.orderNum\n                                );\n                                set_us_openDialog(true);\n                              }}\n                            >\n                              <EditIcon color=\"primary\" />\n                            </IconButton>\n                            <IconButton\n                              color=\"error\"\n                              onClick={() => deleteParticular(particular?.id)}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"orderNum\"\n                              id=\"orderNum\"\n                              type=\"number\"\n                              value={particular?.orderNum || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleOrderChange(\n                                  event.target.value,\n                                  particular?.id\n                                )\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Checkbox\n                              checked={particular?.isChecked || false}\n                              onChange={(e) =>\n                                handleChkChange(\n                                  e.target.checked,\n                                  particular?.id\n                                )\n                              }\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"title\"\n                              id=\"title\"\n                              type=\"text\"\n                              value={particular?.title || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleInputChange(\n                                  event.target.value,\n                                  particular?.id,\n                                  \"title\"\n                                )\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Stack spacing={3} direction=\"row\">\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"customDetail\"\n                                id=\"customDetail\"\n                                type=\"text\"\n                                value={particular?.customDetail || \"\"}\n                                size=\"small\"\n                                onChange={(event) =>\n                                  handleInputChange(\n                                    event.target.value,\n                                    particular?.id,\n                                    \"customDetail\"\n                                  )\n                                }\n                                fullWidth\n                              />\n\n                              {particular?.valueList &&\n                                particular?.valueList?.length > 0 && (\n                                  <FormControl\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                  >\n                                    <InputLabel\n                                      id=\"particular-detail-label\"\n                                      required\n                                    >\n                                      Previous particular detail\n                                    </InputLabel>\n                                    <Select\n                                      label=\"Previous particular detail\"\n                                      labelId=\"particular-detail-label\"\n                                      value={particular?.selectedValue || \"\"}\n                                      onChange={(event) =>\n                                        handleInputChange(\n                                          event.target.value,\n                                          particular?.id,\n                                          \"selectedValue\"\n                                        )\n                                      }\n                                    >\n                                      <MenuItem value={\"\"}>\n                                        Please choose previous detail\n                                      </MenuItem>\n                                      {particular?.valueList &&\n                                        particular?.valueList?.map(\n                                          (detail, index) => (\n                                            <MenuItem\n                                              value={detail}\n                                              key={index}\n                                            >\n                                              {detail}\n                                            </MenuItem>\n                                          )\n                                        )}\n                                    </Select>\n                                  </FormControl>\n                                )}\n                            </Stack>\n                          </TableCell>\n                          {/* <TableCell size=\"small\">\n                            <Stack direction={\"row\"} spacing={2}>\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  set_us_dlg_type(\"update\");\n                                  set_us_update_id(particular?.id || \"\");\n                                  set_us_newParticular(particular?.title || \"\");\n                                  set_us_new_particularDetailList(\n                                    particular?.valueList || []\n                                  );\n                                  set_us_openDialog(true);\n                                }}\n                              >\n                                update\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={() => deleteParticular(particular?.id)}\n                              >\n                                delete\n                              </Button>\n                            </Stack>\n                          </TableCell> */}\n                          <TableCell size=\"small\" align=\"center\">\n                            {companyInvSelected &&\n                            (companyInvSelected?.id ===\n                              process.env.REACT_APP_CUSTOM_ASHLEY_ID ||\n                              companyInvSelected?.id ===\n                                process.env.REACT_APP_CUSTOM_SOREFAN_ID) ? (\n                              \"\"\n                            ) : (\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"amount\"\n                                id=\"amount\"\n                                type=\"number\"\n                                value={particular?.amount || \"\"}\n                                size=\"small\"\n                                onChange={(event) =>\n                                  handleAmountChange(\n                                    event.target.value,\n                                    particular?.id\n                                  )\n                                }\n                                fullWidth\n                              />\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n          </Stack>\n        </Card>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <hr />\n\n        <Card style={{ width: isDesktop ? \"40%\" : \"100%\" }}>\n          <Stack sx={{ padding: \"20px\", width: \"100%\" }}>\n            <TableContainer>\n              <Typography>Total Summary</Typography>\n              <Table>\n                <TableBody>\n                  {companyInvSelected &&\n                    (companyInvSelected?.id ===\n                      process.env.REACT_APP_CUSTOM_ASHLEY_ID ||\n                      companyInvSelected?.id ===\n                        process.env.REACT_APP_CUSTOM_SOREFAN_ID) && (\n                      <TableRow>\n                        <TableCell\n                          size=\"small\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          {companyInvSelected?.id ===\n                          process.env.REACT_APP_CUSTOM_SOREFAN_ID\n                            ? \"Storage Fee\"\n                            : \"Gate Pass / Storage Fee\"}\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <TextField\n                            variant=\"outlined\"\n                            name=\"invStorageFee\"\n                            id=\"invStorageFee\"\n                            type=\"text\"\n                            value={invStorageFee || \"\"}\n                            size=\"small\"\n                            onChange={(event) =>\n                              handleAdditionalFeesChange(\n                                event.target.value,\n                                \"invStorageFee\"\n                              )\n                            }\n                            fullWidth\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )}\n\n                  <TableRow>\n                    <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                      Scanning Fee\n                    </TableCell>\n                    <TableCell size=\"small\">\n                      <TextField\n                        variant=\"outlined\"\n                        name=\"invScanningFee\"\n                        id=\"invScanningFee\"\n                        type=\"text\"\n                        value={invScanningFee || \"\"}\n                        size=\"small\"\n                        onChange={(event) =>\n                          handleAdditionalFeesChange(\n                            event.target.value,\n                            \"invScanningFee\"\n                          )\n                        }\n                        fullWidth\n                      />\n                    </TableCell>\n                  </TableRow>\n\n                  {companyInvSelected?.data?.vatPercentage &&\n                  Number(companyInvSelected?.data?.vatPercentage) > 0 ? (\n                    <TableRow>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        15% VAT on Transport Fee\n                      </TableCell>\n                      <TableCell size=\"small\">\n                        <TextField\n                          variant=\"outlined\"\n                          name=\"invVatFee\"\n                          id=\"invVatFee\"\n                          type=\"number\"\n                          value={invVatFee ? Number(invVatFee).toFixed(2) : \"\"}\n                          size=\"small\"\n                          fullWidth\n                          disabled\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <TableRow>\n                    <TableCell size=\"small\">Total</TableCell>\n                    <TableCell size=\"small\">\n                      {(invTotal &&\n                        invTotal > 0 &&\n                        Number(invTotal).toFixed(2)) ||\n                        0}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Stack>\n        </Card>\n      </Grid>\n\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Stack spacing={3} direction=\"row\">\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            onClick={() => saveInvoice()}\n            fullWidth\n            disabled={!invTotal}\n          >\n            {action === \"add\"\n              ? \"Save invoice\"\n              : action === \"update\"\n              ? \"Update invoice\"\n              : \"\"}\n          </Button>\n\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            onClick={() => {\n              set_us_showViewInvoice({\n                showViewButton: false,\n                savedInvoice: null,\n              });\n\n              ref.current?.scrollIntoView({ behavior: \"smooth\" });\n            }}\n            fullWidth\n            style={{\n              display: us_showViewInvoice?.showViewButton ? \"\" : \"none\",\n            }}\n          >\n            Create new invoice\n          </Button>\n\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            onClick={() => {\n              set_us_actionChoice(\"view\");\n            }}\n            fullWidth\n            style={{\n              display: us_showViewInvoice?.showViewButton ? \"\" : \"none\",\n            }}\n          >\n            View invoice\n          </Button>\n        </Stack>\n      </Grid>\n\n      <Dialog open={us_openDialog} maxWidth={\"sm\"} fullWidth>\n        <DialogTitle>\n          {us_dlg_type === \"add\"\n            ? \"Add new particular\"\n            : us_dlg_type === \"update\"\n            ? \"Update particular\"\n            : \"\"}\n        </DialogTitle>\n        <DialogContent>\n          <br />\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <TextField\n                label=\"Order number\"\n                variant=\"outlined\"\n                name=\"newParticularOrderNum\"\n                id=\"newParticularOrderNum\"\n                type=\"text\"\n                value={\n                  us_newParticular_orderNum !== undefined &&\n                  Number(us_newParticular_orderNum)\n                    ? parseInt(us_newParticular_orderNum, 2)\n                    : 0\n                }\n                size=\"small\"\n                onChange={(event) => {\n                  if (event.target.value >= 0) {\n                    set_us_newParticular_orderNum(Number(event.target.value));\n                  }\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <TextField\n                label=\"New particular\"\n                variant=\"outlined\"\n                name=\"newParticular\"\n                id=\"newParticular\"\n                type=\"text\"\n                value={us_newParticular}\n                size=\"small\"\n                onChange={(event) => set_us_newParticular(event.target.value)}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <TableContainer>\n                <Stack direction={\"row\"} spacing={3} style={{ paddingTop: 5 }}>\n                  <TextField\n                    label=\"Particular description\"\n                    variant=\"outlined\"\n                    name=\"particularDetail\"\n                    id=\"particularDetail\"\n                    type=\"text\"\n                    value={us_particularDetail}\n                    size=\"small\"\n                    onChange={(event) =>\n                      set_us_particularDetail(event.target.value)\n                    }\n                    fullWidth\n                  />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => addParticularDetail()}\n                    disabled={!us_particularDetail}\n                    size=\"small\"\n                  >\n                    add\n                  </Button>\n                </Stack>\n                <br />\n\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\">Particular description</TableCell>\n                      <TableCell size=\"small\">Action</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_new_particularDetailList?.map((newDetail, index) => (\n                      <TableRow key={index}>\n                        <TableCell size=\"small\">\n                          <TextField\n                            label=\"Particular detail\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            name={`particularDetail${index}`}\n                            id={`particularDetail${index}`}\n                            type=\"text\"\n                            value={newDetail}\n                            size=\"small\"\n                            onChange={(event) =>\n                              handleParticularDetailChange(\n                                index,\n                                event.target.value\n                              )\n                            }\n                          />\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"error\"\n                            onClick={() => deleteNewParticularDetail(index)}\n                          >\n                            delete\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => submitChanges()}\n          >\n            {us_dlg_type === \"add\"\n              ? \"apply new particular\"\n              : \"update particular\"}\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => handleCloseDialog()}\n          >\n            cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n"],"sourceRoot":""}