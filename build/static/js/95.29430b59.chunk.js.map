{"version":3,"sources":["pages/dashboard/manage-company/CreateCompanyDialog.js"],"names":["useStyles","makeStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","selectAllText","fontWeight","selectedAll","backgroundColor","indeterminateColor","color","palette","primary","getStepContent","stepIndex","CreateCompanyDialog","openDialog","handleCloseDialog","companyDetails","setCompanyDetails","initializeCompanies","name","vatPercentage","imageName","imageSig","stampName","companyType","vatOrNonVatRegistered","tan","address","email","contactNumber","mobileNumber","brn","beneficiaryName","bankName","bankAccNo","bankIban","bankSwiftCode","MRATemplateFlag","displayMRAFiscalisationButton","documentTemplate","enqueueSnackbar","useSnackbar","classes","dispatch","useDispatch","user","useAuth","snackbar","useSelector","selectSnackbar","companyList","selectCompanyList","useState","activeStep","setActiveStep","steps","errorBool","errorMsg","error","setError","uploadedFile","setUploadedFile","uploadedSigFile","setUploadedSigFile","uploadedStampSigFile","setUploadedStampSigFile","init_comp_details_temp","useRef","useEffect","current","imageUrl","sigUrl","stampUrl","addCompany","a","id","setLoading","fileUrl","storageRef","firebaseApp","storage","ref","fileRef","child","put","getDownloadURL","fileSigUrl","fileSigRef","fileStampUrl","compDoc","db","collection","doc","compBigArrRef","invoiceRef","vat_invoiceRef","purchaseOrderRef","proformaRef","quotationRef","creditNoteRef","debitNoteRef","cashTransactionRef","paymentRef","EBSInvoiceCounterRef","a_new_comp_list","sort","dynamicSort","imageObject","batch","set","timestamp","firebase","firestore","FieldValue","serverTimestamp","companyIdArray","documentIndex","paymentCounter","invoiceCounter","commit","then","setSnackbar","counter","message","variant","getCompanies","a_comp","role","result","msg","setCompanyList","setCompanyInvSelected","undefined","setClientInvSelected","setCompanyIdSelected","setClientDocumentIdSelected","setClientDocumentObjectSelected","catch","err","onFileChange","e","type","preventDefault","target","files","length","file","fileSize","Number","size","fileType","includes","Math","round","style","maxWidth","fullWidth","open","onClose","height","container","display","flexDirection","justifyContent","alignItems","item","xs","sm","align","className","alternativeLabel","map","label","severity","margin","required","value","onChange","event","paddingTop","accept","native","placeholder","inputProps","ListboxProps","maxHeight","options","title","renderInput","params","reason","getOptionLabel","option","JSON","parse","process","onClick","disabled","prevActiveStep"],"mappings":"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","file":"static/js/95.29430b59.chunk.js","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Typography,\n  Stepper,\n  Step,\n  StepLabel,\n  Alert,\n  Autocomplete,\n} from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport db, { firebaseApp } from \"../../../firebase\";\nimport firebase from \"firebase/compat\";\n//import { makeStyles } from '@mui/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSnackbar, setSnackbar } from \"../../../features/snackbarSlice\";\nimport {\n  selectCompanyList,\n  setCompanyList,\n} from \"../../../features/companySlice\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport {\n  dynamicSort,\n  getCompanies,\n} from \"../../../components/core-functions/SelectionCoreFunctions\";\nimport {\n  setClientInvSelected,\n  setCompanyInvSelected,\n} from \"../../../features/invoiceSectionSlice\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  setClientDocumentIdSelected,\n  setClientDocumentObjectSelected,\n  setCompanyIdSelected,\n} from \"../../../features/documentSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  selectAllText: {\n    fontWeight: 500,\n  },\n  selectedAll: {\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, 0.08)\",\n    },\n  },\n  indeterminateColor: {\n    color: theme.palette.primary,\n  },\n}));\n\nfunction getSteps() {\n  return [\"Tell us\", \"Contact Info\", \"Save & Finish\"];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return \"Tell us about your business\";\n    case 1:\n      return \"Enter your business contact information\";\n    /* case 2:\n      return 'Enter absence quota that will be applied to all employees'; */\n    case 2:\n      return \"You are all done!\";\n    default:\n      return \"Unknown stepIndex\";\n  }\n}\n\nfunction CreateCompanyDialog({\n  openDialog,\n  handleCloseDialog,\n  companyDetails,\n  setCompanyDetails,\n  initializeCompanies,\n}) {\n  const {\n    name,\n    vatPercentage,\n    imageName,\n    imageSig,\n    stampName,\n    companyType,\n    // natureOfBusiness,\n    // incorDate,\n    // payeRegNo,\n    vatOrNonVatRegistered,\n    tan,\n    address,\n    // country,\n    email,\n    contactNumber,\n    mobileNumber,\n    brn,\n    // nic,\n    // absenceTariff,\n    beneficiaryName,\n    bankName,\n    bankAccNo,\n    bankIban,\n    bankSwiftCode,\n    MRATemplateFlag,\n    displayMRAFiscalisationButton,\n    documentTemplate,\n  } = companyDetails;\n\n  const { enqueueSnackbar } = useSnackbar();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const snackbar = useSelector(selectSnackbar);\n  const { companyList } = useSelector(selectCompanyList);\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n  const [error, setError] = useState({\n    errorBool: false,\n    errorMsg: \"\",\n  });\n  const { errorBool, errorMsg } = error;\n  const [uploadedFile, setUploadedFile] = useState(\"\");\n  const [uploadedSigFile, setUploadedSigFile] = useState(\"\");\n  const [uploadedStampSigFile, setUploadedStampSigFile] = useState(\"\");\n\n  const init_comp_details_temp = useRef();\n\n  useEffect(() => {\n    if (openDialog) {\n      init_comp_details_temp.current();\n    }\n  }, [openDialog]);\n\n  const initCompDetail = () => {\n    setCompanyDetails({\n      name: \"\",\n      vatPercentage: 0,\n      imageName: \"\",\n      imageUrl: \"\",\n      imageSig: \"\",\n      sigUrl: \"\",\n      stampName: \"\",\n      stampUrl: \"\",\n      companyType: \"\",\n      // natureOfBusiness: \"\",\n      // incorDate: \"\",\n      // payeRegNo: \"\",\n      vatOrNonVatRegistered: null,\n      tan: \"\",\n      address: \"\",\n      // country: \"\",\n      contactNumber: \"\",\n      mobileNumber: \"\",\n      email: \"\",\n      brn: \"\",\n      // nic: \"\",\n      beneficiaryName: \"\",\n      bankName: \"\",\n      bankAccNo: \"\",\n      bankIban: \"\",\n      bankSwiftCode: \"\",\n      MRATemplateFlag: null,\n      displayMRAFiscalisationButton: false,\n      documentTemplate: \"\",\n    });\n  };\n\n  init_comp_details_temp.current = initCompDetail;\n\n  const handleNext = () => {\n    if (activeStep === 0) {\n      if (name === \"\" /*  || companyType === \"\" || payeRegNo === \"\" */) {\n        setError({\n          errorBool: true,\n          errorMsg: \"Please enter a name\",\n        });\n      } else if (!vatOrNonVatRegistered) {\n        setError({\n          errorBool: true,\n          errorMsg: \"Please define if company is VAT registered or not\",\n        });\n      } else if (\n        vatOrNonVatRegistered?.id === \"VATR\" &&\n        (!tan || (tan && tan?.length !== 8))\n      ) {\n        setError({\n          errorBool: true,\n          errorMsg:\n            \"Please provide a Vat Registration Number and should be of 8 characters\",\n        });\n      } else {\n        setError({\n          errorBool: false,\n          errorMsg: \"\",\n        });\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      }\n    } else if (activeStep === 2) {\n      setError({\n        errorBool: false,\n        errorMsg: \"\",\n      });\n      addCompany();\n      setActiveStep(0);\n    } else {\n      setError({\n        errorBool: false,\n        errorMsg: \"\",\n      });\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const addCompany = async () => {\n    if (user?.id !== \"\") {\n      dispatch(setLoading(true));\n\n      //upload image if present\n      let fileUrl = \"\";\n      if (uploadedFile !== \"\") {\n        const storageRef = firebaseApp.storage().ref();\n        const fileRef = storageRef.child(\n          `/photo/companyLogo/${companyDetails?.name}/${uploadedFile.name}`\n        );\n        await fileRef.put(uploadedFile);\n        fileUrl = await fileRef.getDownloadURL();\n      }\n\n      //upload signature img if present\n      let fileSigUrl = \"\";\n      if (uploadedSigFile !== \"\") {\n        const storageRef = firebaseApp.storage().ref();\n        const fileSigRef = storageRef.child(\n          `/photo/companySignature/${companyDetails?.name}/${uploadedSigFile.name}`\n        );\n        await fileSigRef.put(uploadedSigFile);\n        fileSigUrl = await fileSigRef.getDownloadURL();\n      }\n\n      //upload signature img if present\n      let fileStampUrl = \"\";\n      if (uploadedStampSigFile !== \"\") {\n        const storageRef = firebaseApp.storage().ref();\n        const fileSigRef = storageRef.child(\n          `/photo/companyStamp/${companyDetails?.name}/${uploadedStampSigFile.name}`\n        );\n        await fileSigRef.put(uploadedStampSigFile);\n        fileStampUrl = await fileSigRef.getDownloadURL();\n      }\n\n      //create a ref id for a new company doc\n      const compDoc = db.collection(\"company\").doc();\n      //const compDocId = compDoc.id;\n      // const compDocRef = db.collection('company').doc(compDoc.id);\n      //create a ref to store the id and name of big array\n      const compBigArrRef = db.collection(\"company\").doc(\"companyIds\");\n\n      const invoiceRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"invoice\")\n        .doc(\"documentIndex\");\n\n      const vat_invoiceRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"vat_invoice\")\n        .doc(\"documentIndex\");\n\n      const purchaseOrderRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"purchase_order\")\n        .doc(\"documentIndex\");\n\n      const proformaRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"proforma\")\n        .doc(\"documentIndex\");\n\n      const quotationRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"quotation\")\n        .doc(\"documentIndex\");\n\n      const creditNoteRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"credit_note\")\n        .doc(\"documentIndex\");\n\n      const debitNoteRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"debit_note\")\n        .doc(\"documentIndex\");\n\n      const cashTransactionRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"cash_transaction\")\n        .doc(\"documentIndex\");\n\n      const paymentRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      // MRA customs\n      const EBSInvoiceCounterRef = db\n        .collection(\"company\")\n        .doc(compDoc.id)\n        .collection(\"EBSInvoiceCounter\")\n        .doc(\"invoiceCounter\");\n\n      //perform a batch\n      let a_new_comp_list = [...companyList, { id: compDoc.id, name: name }];\n      a_new_comp_list.sort(dynamicSort(\"name\"));\n\n      // prepare images object\n      let imageObject = {};\n\n      // add image logo if logo has been uploaded\n      if (fileUrl !== \"\") {\n        imageObject = {\n          ...imageObject,\n          imageName: imageName,\n          imageUrl: fileUrl,\n        };\n      }\n\n      // add image signature if logo has been uploaded\n      if (fileSigUrl !== \"\") {\n        imageObject = {\n          ...imageObject,\n          imageSig: imageSig,\n          sigUrl: fileSigUrl,\n        };\n      }\n\n      // add image stamp if logo has been uploaded\n      if (fileStampUrl !== \"\") {\n        imageObject = {\n          ...imageObject,\n          stampName: stampName,\n          stampUrl: fileStampUrl,\n        };\n      }\n\n      var batch = db.batch();\n      //set company details to the autogenerated company doc\n      batch.set(compDoc, {\n        name: name || \"\",\n        vatPercentage: vatPercentage || 0,\n        // imageName: imageName,\n        // imageUrl: fileUrl,\n        // imageSig: imageSig,\n        // sigUrl: fileSigUrl,\n        // stampName: stampName,\n        // stampUrl: fileStampUrl,\n        ...imageObject,\n        companyType: companyType || \"\",\n        vatOrNonVatRegistered: vatOrNonVatRegistered || null,\n        tan: tan || \"\",\n        address: address || \"\",\n        email: email || \"\",\n        contactNumber: contactNumber || \"\",\n        mobileNumber: mobileNumber || \"\",\n        brn: brn || \"\",\n        beneficiaryName: beneficiaryName || \"\",\n        bankName: bankName || \"\",\n        bankAccNo: bankAccNo || \"\",\n        bankIban: bankIban || \"\",\n        bankSwiftCode: bankSwiftCode || \"\",\n        documentTemplate: documentTemplate || \"\",\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\n        // flag to start new MRA template\n        MRATemplateFlag: MRATemplateFlag || null,\n        displayMRAFiscalisationButton: displayMRAFiscalisationButton || false,\n      });\n      //set id and name in big array\n      batch.set(compBigArrRef, {\n        companyIdArray: a_new_comp_list,\n      });\n      batch.set(invoiceRef, {\n        documentIndex: 0,\n      });\n      batch.set(vat_invoiceRef, {\n        documentIndex: 0,\n      });\n      batch.set(purchaseOrderRef, {\n        documentIndex: 0,\n      });\n      batch.set(proformaRef, {\n        documentIndex: 0,\n      });\n      batch.set(quotationRef, {\n        documentIndex: 0,\n      });\n      batch.set(creditNoteRef, {\n        documentIndex: 0,\n      });\n      batch.set(debitNoteRef, {\n        documentIndex: 0,\n      });\n      batch.set(cashTransactionRef, {\n        documentIndex: 0,\n      });\n      batch.set(paymentRef, {\n        paymentCounter: 0,\n      });\n      batch.set(EBSInvoiceCounterRef, {\n        invoiceCounter: 0,\n      });\n\n      // Commit the batch\n      batch\n        .commit()\n        .then(async function () {\n          dispatch(\n            setSnackbar({\n              counter: snackbar.counter + 1,\n              message: \"Company added successfully\",\n              variant: \"success\",\n            })\n          );\n\n          const result = await getCompanies(user?.id, user?.a_comp, user?.role);\n\n          if (result.error) {\n            enqueueSnackbar(result.msg || \"\", { variant: result.variant });\n          } else {\n            dispatch(setCompanyList(result));\n          }\n\n          //reset home fields to initialise new options by user\n          dispatch(setCompanyInvSelected(undefined));\n          dispatch(setClientInvSelected(undefined));\n\n          setCompanyDetails({\n            name: \"\",\n            vatPercentage: 0,\n            imageName: \"\",\n            imageUrl: \"\",\n            imageSig: \"\",\n            sigUrl: \"\",\n            stampName: \"\",\n            stampUrl: \"\",\n            companyType: \"\",\n            // natureOfBusiness: \"\",\n            // incorDate: \"\",\n            // payeRegNo: \"\",\n            vatOrNonVatRegistered: null,\n            tan: \"\",\n            address: \"\",\n            // country: \"\",\n            contactNumber: \"\",\n            mobileNumber: \"\",\n            email: \"\",\n            brn: \"\",\n            // nic: \"\",\n            // absenceTariff: [],\n            beneficiaryName: \"\",\n            bankName: \"\",\n            bankAccNo: \"\",\n            bankIban: \"\",\n            bankSwiftCode: \"\",\n            MRATemplateFlag: null,\n            displayMRAFiscalisationButton: false,\n            documentTemplate: \"\",\n          });\n          handleCloseDialog();\n\n          if (initializeCompanies) {\n            initializeCompanies();\n          }\n\n          // reset company id\n          dispatch(setCompanyIdSelected(undefined));\n\n          dispatch(setClientDocumentIdSelected(undefined));\n\n          dispatch(setClientDocumentObjectSelected(undefined));\n\n          dispatch(setLoading(false));\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while creating new company: ${err.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else {\n      enqueueSnackbar(\n        \"Your session has been terminated due to greater than 30 minutes of inactivity. Please log in again.\",\n        { variant: \"error\" }\n      );\n    }\n  };\n\n  const onFileChange = (e, type) => {\n    e.preventDefault();\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0];\n      let fileSize = Number(file.size) / 1000; //to get size in kb\n\n      //check for valid image type\n      const fileType = file[\"type\"];\n      const validImageTypes = [\"image/jpeg\", \"image/png\"];\n      if (!validImageTypes.includes(fileType)) {\n        // invalid file type\n        dispatch(\n          setSnackbar({\n            counter: snackbar.counter + 1,\n            message:\n              \"Sorry you should upload only images with type image/jpeg and image/png\",\n            variant: \"error\",\n          })\n        );\n      } else if (Math.round(fileSize) > 25) {\n        dispatch(\n          setSnackbar({\n            counter: snackbar.counter + 1,\n            message:\n              \"Sorry the image you uploaded exceed 25 KB, size of image uploaded: \" +\n              Math.round(fileSize) +\n              \" KB\",\n            variant: \"error\",\n          })\n        );\n      } else {\n        if (type === \"logo\") {\n          setUploadedFile(file);\n          setCompanyDetails({\n            ...companyDetails,\n            imageName: file.name,\n          });\n        } else if (type === \"signature\") {\n          setUploadedSigFile(file);\n          setCompanyDetails({\n            ...companyDetails,\n            imageSig: file.name,\n          });\n        } else if (type === \"stamp\") {\n          setUploadedStampSigFile(file);\n          setCompanyDetails({\n            ...companyDetails,\n            stampName: file.name,\n          });\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <Dialog\n        style={{ width: \"100%\" }}\n        maxWidth=\"lg\"\n        fullWidth\n        open={openDialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle id=\"alert-dialog-title\">Create a company</DialogTitle>\n        <DialogContent style={{ height: \"auto\" }}>\n          <Grid\n            container\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                {getStepContent(activeStep)}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <div className={classes.root}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                  {steps.map((label) => (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n              </div>\n            </Grid>\n          </Grid>\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            style={{ display: errorBool ? \"\" : \"none\" }}\n          >\n            {errorMsg}\n          </Alert>\n          <div style={{ display: activeStep === 0 ? \"\" : \"none\" }}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              id=\"name\"\n              size=\"small\"\n              value={name || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  name: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"vatPercentage\"\n              label=\"VAT Percentage\"\n              type=\"number\"\n              id=\"vatPercentage\"\n              size=\"small\"\n              value={vatPercentage || 0}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  vatPercentage: event.target.value,\n                });\n              }}\n            />\n\n            <div style={{ paddingTop: \"1rem\" }}></div>\n            <Typography>\n              Upload Image Logo{\" \"}\n              <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n            </Typography>\n            <TextField\n              className=\"uploadInput\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              name=\"image\"\n              type=\"file\"\n              id=\"image\"\n              accept=\".png,.jpeg\"\n              onChange={(event) => onFileChange(event, \"logo\")}\n            />\n\n            <div style={{ paddingTop: \"1rem\" }}></div>\n            <Typography>\n              Upload Signature Image{\" \"}\n              <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              name=\"imageSig\"\n              type=\"file\"\n              id=\"imageSig\"\n              accept=\".png,.jpeg\"\n              onChange={(event) => onFileChange(event, \"signature\")}\n            />\n\n            <div style={{ paddingTop: \"1rem\" }}></div>\n            <Typography>\n              Upload Stamp Image{\" \"}\n              <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              name=\"stampName\"\n              type=\"file\"\n              id=\"stampName\"\n              accept=\".png,.jpeg\"\n              onChange={(event) => onFileChange(event, \"stamp\")}\n            />\n\n            <FormControl\n              size=\"small\"\n              variant=\"outlined\"\n              fullWidth\n              style={{ marginTop: \"1em\" }}\n            >\n              <Select\n                size=\"small\"\n                native\n                //label=\"Company Type\"\n                placeholder=\"Please choose a company type\"\n                value={companyType || \"\"}\n                required\n                onChange={(event) => {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    companyType: event.target.value,\n                  });\n                }}\n                inputProps={{\n                  name: \"companyType\",\n                  id: \"companyType\",\n                }}\n              >\n                <option value=\"\">Please choose a Company Type *</option>\n                <option value=\"Individual\">Individual</option>\n                <option value=\"Company\">Company</option>\n                <option value=\"Other\">Other</option>\n              </Select>\n            </FormControl>\n\n            <div style={{ paddingTop: \"1rem\" }}></div>\n            {/*   <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"incorDate\"\n              label=\"Date Of Incorporation\"\n              id=\"incorDate\"\n              type=\"date\"\n              value={incorDate || \"\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  incorDate: event.target.value,\n                });\n              }}\n              size=\"small\"\n            /> */}\n\n            {/*  <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              size=\"small\"\n              required\n              fullWidth\n              name=\"payeRegNo\"\n              label=\"PAYE Reg No\"\n              type=\"text\"\n              id=\"payeRegNo\"\n              value={payeRegNo || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  payeRegNo: event.target.value,\n                });\n              }}\n            /> */}\n\n            <Autocomplete\n              ListboxProps={{\n                style: { maxHeight: \"70vh\", marginTop: \"1.5em\" },\n              }}\n              size=\"small\"\n              label=\"Apply MRA Template\"\n              id=\"mra-template-application-drop-down\"\n              options={[\n                {\n                  value: true,\n                  title: \"Apply\",\n                },\n                {\n                  value: false,\n                  title: \"Do not apply\",\n                },\n              ]}\n              value={MRATemplateFlag}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Apply MRA Template\" />\n              )}\n              required\n              onChange={(e, value, reason) => {\n                e.preventDefault();\n                if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    MRATemplateFlag: value,\n                  });\n                } else if (reason === \"removeOption\" || reason === \"clear\") {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    MRATemplateFlag: null,\n                  });\n                }\n              }}\n              getOptionLabel={(option) => option?.title || \"\"}\n              fullWidth\n            />\n            <br />\n\n            <Autocomplete\n              ListboxProps={{\n                style: { maxHeight: \"70vh\", marginTop: \"1.5em\" },\n              }}\n              size=\"small\"\n              label=\"Show MRA send for Fiscalisation button\"\n              id=\"fiscalisation-button-display\"\n              options={[true, false]}\n              value={displayMRAFiscalisationButton}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Show MRA send for Fiscalisation button\"\n                />\n              )}\n              required\n              onChange={(e, value, reason) => {\n                e.preventDefault();\n                if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    displayMRAFiscalisationButton: value,\n                  });\n                } else if (reason === \"removeOption\" || reason === \"clear\") {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    displayMRAFiscalisationButton: false,\n                  });\n                }\n              }}\n              getOptionLabel={(option) =>\n                option === true ? \"Show\" : \"Do not show\"\n              }\n              fullWidth\n            />\n            <br />\n\n            {user && user?.role === \"super-admin\" ? (\n              <>\n                <Autocomplete\n                  ListboxProps={{\n                    style: { maxHeight: \"70vh\", marginTop: \"1.5em\" },\n                  }}\n                  size=\"small\"\n                  label=\"Document template\"\n                  id=\"document-template-drop-down\"\n                  options={\n                    process.env.REACT_APP_DOCUMENT_TEMPLATES\n                      ? JSON.parse(process.env.REACT_APP_DOCUMENT_TEMPLATES)\n                      : []\n                  }\n                  value={documentTemplate}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Document template\" />\n                  )}\n                  required\n                  onChange={(e, value, reason) => {\n                    e.preventDefault();\n                    if (\n                      reason !== \"removeOption\" &&\n                      reason !== \"clear\" &&\n                      value\n                    ) {\n                      setCompanyDetails({\n                        ...companyDetails,\n                        documentTemplate: value,\n                      });\n                    } else if (\n                      reason === \"removeOption\" ||\n                      reason === \"clear\"\n                    ) {\n                      setCompanyDetails({\n                        ...companyDetails,\n                        documentTemplate: null,\n                      });\n                    }\n                  }}\n                  getOptionLabel={(option) => option || \"\"}\n                  fullWidth\n                />\n                <br />\n              </>\n            ) : (\n              <></>\n            )}\n\n            <Autocomplete\n              ListboxProps={{\n                style: { maxHeight: \"70vh\", marginTop: \"1.5em\" },\n              }}\n              size=\"small\"\n              label=\"VAT/Non VAT Registered\"\n              id=\"transaction-type-drop-down\"\n              options={\n                process.env.REACT_APP_EBS_VAT_OR_NON_VAT_REGISTERED_VALUES\n                  ? JSON.parse(\n                      process.env.REACT_APP_EBS_VAT_OR_NON_VAT_REGISTERED_VALUES\n                    )\n                  : []\n              }\n              value={vatOrNonVatRegistered}\n              renderInput={(params) => (\n                <TextField {...params} label=\"VAT/Non VAT Registered\" />\n              )}\n              required\n              onChange={(e, value, reason) => {\n                e.preventDefault();\n                if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    vatOrNonVatRegistered: value,\n                  });\n                } else if (reason === \"removeOption\" || reason === \"clear\") {\n                  setCompanyDetails({\n                    ...companyDetails,\n                    vatOrNonVatRegistered: null,\n                  });\n                }\n              }}\n              getOptionLabel={(option) => option?.title || \"\"}\n              fullWidth\n            />\n\n            <TextField\n              style={{ marginTop: \"1.5em\" }}\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"tan\"\n              label=\"VAT\"\n              type=\"number\"\n              id=\"tan\"\n              value={tan || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  tan: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              margin=\"normal\"\n              fullWidth\n              name=\"brn\"\n              label=\"BRN\"\n              type=\"text\"\n              id=\"brn\"\n              value={brn || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  brn: event.target.value,\n                });\n              }}\n            />\n\n            {/*      <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              margin=\"normal\"\n              fullWidth\n              name=\"nic\"\n              label=\"NIC\"\n              type=\"text\"\n              id=\"nic\"\n              value={nic || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  nic: event.target.value,\n                });\n              }}\n            /> */}\n          </div>\n          <div style={{ display: activeStep === 1 ? \"\" : \"none\" }}>\n            {/*   <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"natureOfBusiness\"\n              label=\"Nature Of Business\"\n              type=\"text\"\n              id=\"natureOfBusiness\"\n              value={natureOfBusiness || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  natureOfBusiness: event.target.value,\n                });\n              }}\n            /> */}\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"address\"\n              label=\"Address\"\n              type=\"text\"\n              id=\"address\"\n              value={address || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  address: event.target.value,\n                });\n              }}\n            />\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"contactNumber\"\n              label=\"Contact Number\"\n              type=\"text\"\n              id=\"contactNumber\"\n              value={contactNumber || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  contactNumber: event.target.value,\n                });\n              }}\n            />\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"mobileNumber\"\n              label=\"Mobile Number\"\n              type=\"text\"\n              id=\"mobileNumber\"\n              value={mobileNumber || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  mobileNumber: event.target.value,\n                });\n              }}\n            />\n            {/*   <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"country\"\n              label=\"Country\"\n              type=\"text\"\n              id=\"country\"\n              value={country || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  country: event.target.value,\n                });\n              }}\n            /> */}\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"email\"\n              label=\"Email\"\n              type=\"text\"\n              id=\"email\"\n              value={email || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  email: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"beneficiaryName\"\n              label=\"Beneficiary name\"\n              type=\"text\"\n              id=\"beneficiaryName\"\n              value={beneficiaryName || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  beneficiaryName: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"bankName\"\n              label=\"Bank name\"\n              type=\"text\"\n              id=\"bankName\"\n              value={bankName || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  bankName: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"bankAccNo\"\n              label=\"Bank Acc No\"\n              type=\"text\"\n              id=\"bankAccNo\"\n              value={bankAccNo || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  bankAccNo: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"bankIban\"\n              label=\"Bank IABN\"\n              type=\"text\"\n              id=\"bankIban\"\n              value={bankIban || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  bankIban: event.target.value,\n                });\n              }}\n            />\n\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"bankSwiftCode\"\n              label=\"Bank Swift Code\"\n              type=\"text\"\n              id=\"bankSwiftCode\"\n              value={bankSwiftCode || \"\"}\n              onChange={(event) => {\n                setCompanyDetails({\n                  ...companyDetails,\n                  bankSwiftCode: event.target.value,\n                });\n              }}\n            />\n          </div>\n          {/*  <div style={{ display: activeStep === 2 ? '' : 'none' }}>\n            <TableContainer>\n              <Typography>The total number will be applicable after 1 year of employment.</Typography>\n              <Table border={1}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Absence type</TableCell>\n                    <TableCell>Total number</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {absenceTariff?.map((o_abc, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{o_abc?.txt}</TableCell>\n                      <TableCell>\n                        <TextField\n                          size=\"small\"\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          name=\"absc\"\n                          label=\"Quantity\"\n                          type=\"number\"\n                          id={o_abc?.id}\n                          value={o_abc?.qty}\n                          onChange={(event) => {\n                            let a_abscence = [...absenceTariff];\n                            let a_new_absc = [];\n                            a_abscence.forEach((o_absc) => {\n                              if (o_absc?.id === o_abc?.id) {\n                                a_new_absc.push({ ...o_abc, qty: event.target.value });\n                              } else {\n                                a_new_absc.push({ ...o_absc });\n                              }\n                            });\n                            setCompanyDetails({ ...companyDetails, absenceTariff: a_new_absc });\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div> */}\n          <div\n            style={{\n              display: activeStep === 2 ? \"\" : \"none\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          >\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>Name:</TableCell>\n                  <TableCell>{name || \"\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Company Type:</TableCell>\n                  <TableCell>{companyType || \"\"}</TableCell>\n                </TableRow>\n                {/* <TableRow>\n                  <TableCell>PAYE Reg No:</TableCell>\n                  <TableCell>{payeRegNo}</TableCell>\n                </TableRow> */}\n                <TableRow>\n                  <TableCell>Is VAT Registered:</TableCell>\n                  <TableCell>\n                    {vatOrNonVatRegistered?.id === \"VATR\" ? \"Yes\" : \"No\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>VAT:</TableCell>\n                  <TableCell>{tan || \"\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>BRN:</TableCell>\n                  <TableCell>{brn || \"\"}</TableCell>\n                </TableRow>\n                {/* <TableRow>\n                  <TableCell>NIC:</TableCell>\n                  <TableCell>{nic}</TableCell>\n                </TableRow> */}\n                <TableRow>\n                  <TableCell>Address:</TableCell>\n                  <TableCell>{address || \"\"}</TableCell>\n                </TableRow>\n                {/* <TableRow>\n                  <TableCell>Country:</TableCell>\n                  <TableCell>{country}</TableCell>\n                </TableRow> */}\n                <TableRow>\n                  <TableCell>Contact Number:</TableCell>\n                  <TableCell>{contactNumber || \"\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mobile Number:</TableCell>\n                  <TableCell>{mobileNumber || \"\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Email:</TableCell>\n                  <TableCell>{email || \"\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <div>\n            {activeStep === steps.length ? (\n              <div>\n                <Typography className={classes.instructions}>\n                  All steps completed\n                </Typography>\n                <Button onClick={handleReset}>Reset</Button>\n              </div>\n            ) : (\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.backButton}\n                  variant=\"outlined\"\n                >\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.backButton}\n                >\n                  {activeStep === steps.length - 1 ? \"Save\" : \"Next\"}\n                </Button>\n              </div>\n            )}\n          </div>\n          <Button onClick={handleCloseDialog} color=\"error\" variant=\"outlined\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default CreateCompanyDialog;\n"],"sourceRoot":""}