{"version":3,"sources":["pages/dashboard/bugsBeGone-custom-checkbox-management/CreateOrUpdateCheckboxDialog.js"],"names":["CreateOrUpdateCheckboxDialog","dialogType","openDialog","handleCloseDialog","rowDetail","setRowDetail","fetchRows","title","collectionName","companyId","dispatch","useDispatch","enqueueSnackbar","useSnackbar","a","setLoading","db","collection","doc","add","name","then","catch","error","message","variant","id","set","merge","fullWidth","maxWidth","open","container","spacing","item","xs","md","label","type","value","size","onChange","event","previous","target","color","onClick","addRow","updateRow"],"mappings":"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","file":"static/js/82.d990cff2.chunk.js","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  TextField,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport db from \"src/firebase\";\n\nexport default function CreateOrUpdateCheckboxDialog({\n  dialogType,\n  openDialog,\n  handleCloseDialog,\n  rowDetail,\n  setRowDetail,\n  fetchRows,\n  title,\n  collectionName,\n  companyId,\n}) {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  async function addRow() {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(companyId)\n      .collection(collectionName)\n      .add({\n        title: rowDetail?.title || \"\",\n        name: rowDetail?.name || \"\",\n      })\n      .then(() => {\n        fetchRows();\n        enqueueSnackbar(\"Changes saved successfully\");\n        dispatch(setLoading(false));\n        handleCloseDialog();\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Error occured while saving row: ${error?.message}`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function updateRow() {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(companyId)\n      .collection(collectionName)\n      .doc(rowDetail?.id)\n      .set(\n        {\n          title: rowDetail?.title || \"\",\n          name: rowDetail?.name || \"\",\n        },\n        { merge: true }\n      )\n      .then(() => {\n        fetchRows();\n        enqueueSnackbar(\"Changes updated successfully\");\n        dispatch(setLoading(false));\n        handleCloseDialog();\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Error occured while updating row: ${error?.message}`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      });\n  }\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={openDialog}>\n      <DialogTitle>{`${\n        dialogType === \"update\" ? \"Update\" : \"Add new\"\n      } ${title}`}</DialogTitle>\n      <DialogContent>\n        <Divider />\n        <br />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <TextField\n              variant=\"outlined\"\n              name=\"title\"\n              label=\"Title\"\n              id=\"title\"\n              type=\"text\"\n              value={rowDetail?.title || \"\"}\n              size=\"small\"\n              fullWidth\n              onChange={(event) => {\n                setRowDetail((previous) => {\n                  return {\n                    ...previous,\n                    title: event.target.value,\n                  };\n                });\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <TextField\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"Name Id\"\n              id=\"name\"\n              type=\"text\"\n              value={rowDetail?.name || \"\"}\n              size=\"small\"\n              fullWidth\n              onChange={(event) => {\n                setRowDetail((previous) => {\n                  return {\n                    ...previous,\n                    name: event.target.value,\n                  };\n                });\n              }}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (dialogType === \"add\") {\n              addRow();\n            } else if (dialogType === \"update\") {\n              updateRow();\n            }\n          }}\n        >\n          {dialogType === \"add\"\n            ? \"Submit changes\"\n            : dialogType === \"update\"\n            ? \"Update form\"\n            : \"\"}\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={() => handleCloseDialog()}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"sourceRoot":""}