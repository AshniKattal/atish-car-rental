{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","components/table/TableCRUDTemplate.js","../node_modules/@mui/icons-material/Visibility.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","styled","name","overridesResolver","props","styles","root","width","overflowX","TableContainer","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableHeadUtilityClass","TableHeadRoot","display","tablelvl2","variant","defaultComponent","TableHead","Tablelvl2Context","Provider","children","role","useStyles","makeStyles","table","minWidth","tableTitle","fontWeight","tableBtnOption","cursor","tableRow","tableCell","whiteSpace","textOverflow","overflow","tableCellLeft","borderTopLeftRadius","borderBottomLeftRadius","tableCellRight","borderTopRightRadius","borderBottomRightRadius","StyledHeaderTableRow","TableRow","theme","backgroundColor","palette","mode","primary","light","dark","StyledTableRow","lighter","darker","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","headers","onRequestSort","style","headCell","label","undefined","align","sortDirection","id","active","direction","onClick","property","event","TableCRUDTemplate","companyId","type","aCollection","viewOption","viewBtnFunc","addBtnDisplay","addBtnLabel","addBtnFunc","emptyColMsg","updateBtnDisplay","updateBtnFunc","deleteBtnDisplay","deleteBtnFunc","documentType","logo","companyDetails","fetchClientSurvey","useTheme","dispatch","useDispatch","user","useAuth","enqueueSnackbar","useSnackbar","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","deleteId","setDeleteId","deleteData","setDeleteData","openDel","setOpenDel","us_b_openAbsenceTarifDlg","set_us_b_openAbsenceTarifDlg","us_a_absenceTariff","set_us_a_absenceTariff","Math","min","length","paddingBottom","startIcon","color","disabled","permissions","createClientChk","assignedCompanyId","includes","createAdminChk","sx","mt","p","padding","fontSize","border","size","numSelected","onSelectAllClick","target","checked","newSelecteds","n","rowCount","slice","object","arr","i","push","viewCompChk","tabIndex","title","data","updateClientChk","updateCompChk","updateAdminChk","deleteClientChk","deleteCompChk","deleteAdminChk","obj","indexSec","dateTimeCreated","moment","toDate","format","spacing","alignItems","justifyContent","featuredImage","image","px","disabledEffect","alt","src","downloadURL","height","borderRadius","main","background","emailAlreadySent","setLoading","handleMailCustomSurvey","mailResponse","error","message","handleViewDownloadCustomSurvey","icon","minHeight","round","Number","displayType","thousandSeparator","JSON","parse","category","serviceName","rowsPerPageOptions","count","onPageChange","e","onRowsPerPageChange","parseInt","open","keepMounted","onClose","maxWidth","fullWidth","o_abc","txt","qty"],"mappings":"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","file":"static/js/37.e3faaf12.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import { Fragment, useState } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\n// import { makeStyles, withStyles } from '@mui/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  TableSortLabel,\n  TablePagination,\n  Typography,\n  Tooltip,\n  IconButton,\n  Card,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Box,\n  useTheme,\n} from \"@mui/material\";\nimport Scrollbar from \"../Scrollbar\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { styled } from \"@mui/material/styles\";\nimport useAuth from \"../../hooks/useAuth\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport Label from \"../Label\";\nimport Iconify from \"../Iconify\";\nimport {\n  handleMailCustomSurvey,\n  handleViewDownloadCustomSurvey,\n} from \"../core-functions/SelectionCoreFunctions\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport Image from \"../Image\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableTitle: {\n    fontWeight: \"bold\",\n  },\n  tableBtnOption: {\n    cursor: \"pointer\",\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableCell: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n  },\n  tableCellLeft: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n  },\n  tableCellRight: {\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n  },\n});\n\nconst StyledHeaderTableRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor:\n    theme?.palette?.mode === \"light\"\n      ? theme?.palette?.primary.light\n      : theme?.palette?.mode === \"dark\"\n      ? theme.palette.primary.dark\n      : \"transparent\",\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(even)\": {\n    backgroundColor:\n      theme?.palette?.mode === \"light\"\n        ? theme?.palette?.primary.lighter\n        : theme?.palette?.mode === \"dark\"\n        ? theme.palette.primary.darker\n        : \"transparent\",\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { headers, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{ width: \"100%\" }}>\n      <StyledHeaderTableRow>\n        {headers &&\n          headers.map((headCell, index) => (\n            <TableCell\n              style={{\n                whiteSpace: \"nowrap\",\n                width:\n                  headCell.label === \"List\" ||\n                  headCell.label === \"View\" ||\n                  headCell.label === \"Update\" ||\n                  headCell.label === \"Delete\"\n                    ? 75\n                    : undefined,\n              }}\n              key={index}\n              align={headCell.label === \"Delete\" ? \"right\" : \"center\"}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              {headCell.label === \"List\" ||\n              headCell.label === \"View\" ||\n              headCell.label === \"Update\" ||\n              headCell.label === \"Delete\" ? (\n                headCell.label\n              ) : (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : \"asc\"}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n      </StyledHeaderTableRow>\n    </TableHead>\n  );\n}\n\nconst TableCRUDTemplate = ({\n  companyId,\n  type,\n  headers,\n  aCollection,\n  viewOption,\n  viewBtnFunc,\n  addBtnDisplay,\n  addBtnLabel,\n  addBtnFunc,\n  emptyColMsg,\n  updateBtnDisplay,\n  updateBtnFunc,\n  deleteBtnDisplay,\n  deleteBtnFunc,\n  documentType,\n  logo,\n  companyDetails,\n  fetchClientSurvey,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { user } = useAuth();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({});\n  const [openDel, setOpenDel] = useState(false);\n\n  const [us_b_openAbsenceTarifDlg, set_us_b_openAbsenceTarifDlg] =\n    useState(false);\n  const [us_a_absenceTariff, set_us_a_absenceTariff] = useState([]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = aCollection.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, aCollection.length - page * rowsPerPage);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div\n        style={{\n          display: addBtnDisplay ? \"\" : \"none\",\n          width: \"100%\",\n          paddingBottom: \"2rem\",\n        }}\n      >\n        <Button\n          startIcon={<AddIcon />}\n          onClick={() => addBtnFunc()}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={\n            type === \"client\" &&\n            user?.permissions?.createClientChk?.assignedCompanyId.includes(\n              companyId\n            )\n              ? false\n              : type === \"company\" /* &&\n                user?.permissions?.createCompChk?.assignedCompanyId.includes(\n                  companyId\n                ) */\n              ? false\n              : type === \"admin\" &&\n                user?.permissions?.createAdminChk?.assignedCompanyId.includes(\n                  companyId\n                )\n              ? false\n              : type === \"survey\" ||\n                type === \"vehicles\" ||\n                type === \"inventory\" ||\n                type === \"category\" ||\n                type === \"bugsBeGoneCustomCheckboxManagement\"\n              ? false\n              : true\n          }\n        >\n          {addBtnLabel}\n        </Button>\n      </div>\n\n      <div className={classes.root}>\n        <Card>\n          <Stack sx={{ mt: 1.5, p: 1.5 }}>\n            {aCollection && aCollection.length === 0 ? (\n              <>\n                <div style={{ width: \"100%\", padding: \"2em\" }}>\n                  <Typography\n                    variant=\"h6\"\n                    component=\"h4\"\n                    style={{ fontSize: \"1.2em\", color: \"red\" }}\n                    color=\"secondary\"\n                  >\n                    {emptyColMsg}\n                  </Typography>\n                </div>\n              </>\n            ) : (\n              <Scrollbar>\n                <TableContainer>\n                  <Table\n                    border={1}\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size=\"medium\"\n                    aria-label=\"enhanced table\"\n                  >\n                    <EnhancedTableHead\n                      classes={classes}\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={handleSelectAllClick}\n                      onRequestSort={handleRequestSort}\n                      rowCount={aCollection.length}\n                      headers={headers}\n                    />\n                    <TableBody>\n                      {aCollection &&\n                        aCollection.length !== 0 &&\n                        stableSort(aCollection, getComparator(order, orderBy))\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((object, index) => {\n                            let arr = [];\n                            for (const property in object) {\n                              for (let i = 0; i < headers.length; i++) {\n                                if (headers[i].id === property) {\n                                  arr.push({\n                                    id: headers[i].id,\n                                    value: `${object[property]}`,\n                                  });\n                                  break;\n                                }\n                              }\n                            }\n\n                            if (\n                              type !== \"company\" ||\n                              (type === \"company\" &&\n                                user?.permissions?.viewCompChk?.assignedCompanyId.includes(\n                                  object.id\n                                ))\n                            ) {\n                              return (\n                                <Fragment key={index}>\n                                  <StyledTableRow tabIndex={-1}>\n                                    {type !== \"company\" ? (\n                                      <TableCell\n                                        className={classes.tableCellLeft}\n                                        align=\"center\"\n                                        size=\"small\"\n                                      >\n                                        {index + 1 + \")\"}\n                                      </TableCell>\n                                    ) : (\n                                      <></>\n                                    )}\n\n                                    {viewOption ? (\n                                      <TableCell align=\"center\" size=\"small\">\n                                        <Tooltip title=\"View\">\n                                          <IconButton color=\"primary\">\n                                            <VisibilityIcon\n                                              onClick={() =>\n                                                viewBtnFunc(\n                                                  object.id,\n                                                  object.data\n                                                )\n                                              }\n                                            />\n                                          </IconButton>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      <></>\n                                    )}\n\n                                    {updateBtnDisplay ? (\n                                      <TableCell align=\"center\" size=\"small\">\n                                        <Tooltip title=\"Update\">\n                                          <span>\n                                            <IconButton\n                                              color=\"primary\"\n                                              disabled={\n                                                type === \"client\" &&\n                                                user?.permissions?.updateClientChk?.assignedCompanyId.includes(\n                                                  companyId\n                                                )\n                                                  ? false\n                                                  : type === \"company\" &&\n                                                    user?.permissions?.updateCompChk?.assignedCompanyId.includes(\n                                                      object.id\n                                                    )\n                                                  ? false\n                                                  : type === \"admin\" &&\n                                                    user?.permissions?.updateAdminChk?.assignedCompanyId.includes(\n                                                      companyId\n                                                    )\n                                                  ? false\n                                                  : type === \"survey\" ||\n                                                    type === \"vehicles\" ||\n                                                    type === \"inventory\" ||\n                                                    type === \"category\" ||\n                                                    type ===\n                                                      \"bugsBeGoneCustomCheckboxManagement\"\n                                                  ? false\n                                                  : true\n                                              }\n                                              onClick={() =>\n                                                updateBtnFunc(\n                                                  object.id,\n                                                  object.data\n                                                )\n                                              }\n                                            >\n                                              <EditIcon\n                                                className={\n                                                  classes.tableBtnOption\n                                                }\n                                              />\n                                            </IconButton>\n                                          </span>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      \"\"\n                                    )}\n                                    {deleteBtnDisplay ? (\n                                      <TableCell\n                                        className={classes.tableCellRight}\n                                        align=\"right\"\n                                        size=\"small\"\n                                      >\n                                        <Tooltip title=\"Delete\">\n                                          <span>\n                                            <IconButton\n                                              color=\"error\"\n                                              disabled={\n                                                type === \"client\" &&\n                                                user?.permissions?.deleteClientChk?.assignedCompanyId.includes(\n                                                  companyId\n                                                )\n                                                  ? false\n                                                  : type === \"company\" &&\n                                                    user?.permissions?.deleteCompChk?.assignedCompanyId.includes(\n                                                      object.id\n                                                    )\n                                                  ? false\n                                                  : type === \"admin\" &&\n                                                    user?.permissions?.deleteAdminChk?.assignedCompanyId.includes(\n                                                      companyId\n                                                    )\n                                                  ? false\n                                                  : type === \"survey\" ||\n                                                    type === \"vehicles\" ||\n                                                    type === \"inventory\" ||\n                                                    type === \"category\" ||\n                                                    type ===\n                                                      \"bugsBeGoneCustomCheckboxManagement\"\n                                                  ? false\n                                                  : true\n                                              }\n                                              onClick={() => {\n                                                setDeleteId(object?.id);\n                                                setDeleteData(object?.data);\n                                                setOpenDel(true);\n                                              }}\n                                            >\n                                              <DeleteIcon\n                                                className={\n                                                  classes.tableBtnOption\n                                                }\n                                              />\n                                            </IconButton>\n                                          </span>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      \"\"\n                                    )}\n\n                                    {arr &&\n                                      arr?.map((obj, indexSec) => {\n                                        if (obj?.id === \"dateTimeCreated\") {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {object?.data?.dateTimeCreated\n                                                ? moment(\n                                                    object?.data?.dateTimeCreated.toDate()\n                                                  ).format(\n                                                    \"DD-MM-YYYY HH:mm:ss\"\n                                                  ) || \"\"\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj?.id === \"featuredImage\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Stack\n                                                spacing={1}\n                                                direction={\"row\"}\n                                                alignItems={\"center\"}\n                                                justifyContent={\"center\"}\n                                              >\n                                                {object?.data &&\n                                                object?.data?.featuredImage\n                                                  ?.length > 0\n                                                  ? object?.data?.featuredImage.map(\n                                                      (image, index) => (\n                                                        <>\n                                                          <Box\n                                                            key={index}\n                                                            sx={{\n                                                              px: 0.2,\n                                                              overflowX:\n                                                                \"scroll\",\n                                                            }}\n                                                          >\n                                                            <Image\n                                                              disabledEffect\n                                                              alt=\"thumb image\"\n                                                              src={\n                                                                image?.downloadURL\n                                                              }\n                                                              sx={{\n                                                                width: 50,\n                                                                height: 50,\n                                                                borderRadius: 1.5,\n                                                                border: `solid 2px ${theme.palette.primary.main}`,\n                                                              }}\n                                                            />\n                                                          </Box>\n                                                        </>\n                                                      )\n                                                    )\n                                                  : \"\"}\n                                              </Stack>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"sendEmail\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                              style={{\n                                                whiteSpace: \"nowrap\",\n                                                background:\n                                                  object?.data\n                                                    ?.emailAlreadySent === true\n                                                    ? \"#befed5\"\n                                                    : \"transparent\",\n                                              }}\n                                            >\n                                              <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={async () => {\n                                                  dispatch(setLoading(true));\n                                                  let mailResponse =\n                                                    await handleMailCustomSurvey(\n                                                      companyDetails,\n                                                      \"sendEmail\",\n                                                      object?.data,\n                                                      documentType?.id,\n                                                      logo\n                                                    );\n\n                                                  if (mailResponse?.error) {\n                                                    enqueueSnackbar(\n                                                      mailResponse?.message,\n                                                      { variant: \"error\" }\n                                                    );\n                                                    dispatch(setLoading(false));\n                                                  } else if (\n                                                    !mailResponse?.error\n                                                  ) {\n                                                    enqueueSnackbar(\n                                                      mailResponse?.message,\n                                                      { variant: \"success\" }\n                                                    );\n\n                                                    await fetchClientSurvey(\n                                                      companyDetails?.id,\n                                                      documentType?.id\n                                                    );\n                                                    dispatch(setLoading(false));\n                                                  }\n                                                }}\n                                              >\n                                                Send Email\n                                              </Button>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"viewDownloadPdf\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Stack\n                                                spacing={2}\n                                                direction={\"row\"}\n                                                alignItems={\"center\"}\n                                              >\n                                                <IconButton\n                                                  color=\"primary\"\n                                                  onClick={() =>\n                                                    handleViewDownloadCustomSurvey(\n                                                      companyDetails,\n                                                      \"view\",\n                                                      {\n                                                        ...object?.data,\n                                                        id: object?.id,\n                                                      },\n                                                      documentType?.id,\n                                                      logo\n                                                    )\n                                                  }\n                                                >\n                                                  <Iconify\n                                                    icon={\"carbon:view\"}\n                                                  />\n                                                </IconButton>\n\n                                                <IconButton\n                                                  color=\"primary\"\n                                                  onClick={() =>\n                                                    handleViewDownloadCustomSurvey(\n                                                      companyDetails,\n                                                      \"download\",\n                                                      {\n                                                        ...object?.data,\n                                                        id: object?.id,\n                                                      },\n                                                      documentType?.id,\n                                                      logo\n                                                    )\n                                                  }\n                                                >\n                                                  <Iconify\n                                                    icon={\"eva:download-fill\"}\n                                                  />\n                                                </IconButton>\n                                              </Stack>\n                                            </TableCell>\n                                          );\n                                        } else if (obj && obj.id === \"status\") {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Label\n                                                variant=\"filled\"\n                                                sx={{\n                                                  minWidth: 100,\n                                                  minHeight: 30,\n                                                }}\n                                                color={\n                                                  obj.value === \"Pending\"\n                                                    ? \"warning\"\n                                                    : obj.value === \"Confirmed\"\n                                                    ? \"success\"\n                                                    : obj.value === \"Rejected\"\n                                                    ? \"error\"\n                                                    : \"default\"\n                                                }\n                                              >\n                                                {obj.value}\n                                              </Label>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"actualBasicSalary\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              obj.value === undefined ? (\n                                                \"\"\n                                              ) : obj && obj.value ? (\n                                                <CurrencyFormat\n                                                  value={Math.round(\n                                                    Number(obj.value)\n                                                  )}\n                                                  displayType={\"text\"}\n                                                  thousandSeparator={true}\n                                                />\n                                              ) : (\n                                                \"\"\n                                              )}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          (obj.id === \"vatOrNonVatRegistered\" ||\n                                            obj.id === \"buyerType\")\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              JSON.parse(obj?.value) !== null\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"Not yet defined\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"MRATemplateFlag\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && JSON.parse(obj?.value)\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"Not yet defined\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          type === \"inventory\" &&\n                                          obj?.id === \"category\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && JSON.parse(obj?.value)\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj?.id === \"categoryDisplay\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              JSON.parse(obj?.value) &&\n                                              JSON.parse(obj?.value)?.length > 0\n                                                ? JSON.parse(obj?.value)?.map(\n                                                    (category) =>\n                                                      category?.serviceName +\n                                                      \", \"\n                                                  )\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && obj.value === undefined\n                                                ? \"\"\n                                                : obj && obj.value\n                                                ? obj.value\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        }\n                                      })}\n                                  </StyledTableRow>\n                                </Fragment>\n                              );\n                            } else return <></>;\n                          })}\n                      {/*  {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                          <TableCell colSpan={16} />\n                        </TableRow>\n                      )} */}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                {aCollection && aCollection.length >= 1 ? (\n                  <TablePagination\n                    rowsPerPageOptions={[50, 100, 150]}\n                    component=\"div\"\n                    count={aCollection?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={(e, page) => setPage(page)}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </Scrollbar>\n            )}\n          </Stack>\n        </Card>\n      </div>\n\n      <>\n        <Dialog\n          open={us_b_openAbsenceTarifDlg}\n          keepMounted\n          onClose={() => set_us_b_openAbsenceTarifDlg(false)}\n          aria-labelledby=\"delete\"\n          aria-describedby=\"delete\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"deleteConfirm\" align=\"center\">\n            <Typography>Absence total summary</Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }} align=\"center\">\n            <br />\n            <Typography>\n              Quantity applicable for all employees after 1 year of employment\n            </Typography>\n            <br />\n\n            {us_a_absenceTariff?.length > 0 ? (\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Absence type</TableCell>\n                      <TableCell>Total number</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_a_absenceTariff?.map((o_abc, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{o_abc?.txt}</TableCell>\n                        <TableCell>{o_abc?.qty}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            ) : (\n              <Typography>\n                You have not yet provided any details about absences. Please\n                update company to provide absence details.\n              </Typography>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                set_us_b_openAbsenceTarifDlg(false);\n                set_us_a_absenceTariff([]);\n              }}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n\n      <>\n        <Dialog\n          open={openDel}\n          keepMounted\n          onClose={() => setOpenDel(false)}\n          aria-labelledby=\"delete\"\n          aria-describedby=\"delete\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"deleteConfirm\" align=\"center\">\n            <Typography>\n              <b>Delete confirmation</b>\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }} align=\"center\">\n            <br />\n            <Typography>Are you sure you want to delete this data ?</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                deleteBtnFunc(deleteId, deleteData);\n                setDeleteId(\"\");\n                setDeleteData({});\n                setOpenDel(false);\n              }}\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"error\"\n              variant=\"outlined\"\n              onClick={() => {\n                setOpenDel(false);\n                setDeleteId(\"\");\n              }}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    </div>\n  );\n};\n\nexport default TableCRUDTemplate;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"sourceRoot":""}