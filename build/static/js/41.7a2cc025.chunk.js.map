{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/ManageSearch.js","components/document/DocumentTableStandard.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","DocumentTableStandard","companyDetails","documentDetails","setDocumentDetails","documentType","savedDescriptions","set_us_openDialog","set_us_openDialogSKUCodeSearch","set_us_openDialogContractAgreementSearch","handleInputChange","handleOrderChange","handleIsVatableChange","deleteParticular","setSelectedRowIndex","companyMRATemplateFlag","displayDiscountColumns","set_displayDiscountColumns","defaultParticularOptions","docParticulars","useAuth","user","item","xs","md","style","width","sx","padding","variant","color","onClick","border","size","align","whiteSpace","minWidth","data","documentTemplate","length","map","particular","index","name","id","type","rowOrder","onChange","event","target","fullWidth","spacing","direction","rowDescription","newValue","inputValue","onInputChange","newInputValue","options","renderInput","params","multiline","minRows","process","REACT_APP_CUSTOM_SMART_PROMOTE_ID","title","REACT_APP_CUSTOM_BUGSBEGONE_ID","display","ListboxProps","maxHeight","label","JSON","parse","rowNature","required","e","reason","preventDefault","getOptionLabel","option","rowTaxCode","rowQty","rowUnitPrice","inputProps","rowAmount","rowDiscountAmount","rowDiscountedAmount","alignItems","justifyContent","checked","undefined","rowIsVatable","disabled","rowVatCheckBoxDisabled","rowVatAmount","rowTotalAmount","newDocParticulars","push","addNewRow"],"mappings":"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","file":"static/js/41.7a2cc025.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 9H2V7h5zm0 3H2v2h5zm13.59 7-3.83-3.83c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L22 17.59zM17 11c0-1.65-1.35-3-3-3s-3 1.35-3 3 1.35 3 3 3 3-1.35 3-3M2 19h10v-2H2z\"\n}), 'ManageSearch');","import {\n  Autocomplete,\n  Button,\n  Card,\n  Checkbox,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport Scrollbar from \"../Scrollbar\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ManageSearchIcon from \"@mui/icons-material/ManageSearch\";\nimport useAuth from \"src/hooks/useAuth\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nexport default function DocumentTableStandard({\n  companyDetails,\n  documentDetails,\n  setDocumentDetails,\n  documentType,\n  savedDescriptions,\n  set_us_openDialog,\n  set_us_openDialogSKUCodeSearch,\n  set_us_openDialogContractAgreementSearch,\n  handleInputChange,\n  handleOrderChange,\n  handleIsVatableChange,\n  deleteParticular,\n  setSelectedRowIndex,\n  companyMRATemplateFlag,\n  displayDiscountColumns,\n  set_displayDiscountColumns,\n  defaultParticularOptions,\n}) {\n  /**\n   * check if company chosen require old or new table template\n   * template may alter depending on action -> add or update\n   * if action === add -> check if company's MRATemplateFlag is true to apply new template or not\n   * if action === update -> check if MRATemplateApplied to verify if the updated invoice has been saved with new template\n   */\n\n  const { user } = useAuth();\n\n  const { docParticulars } = documentDetails;\n\n  function addNewRow() {\n    // add new row -> increment order number\n    let newDocParticulars = [...docParticulars];\n    newDocParticulars.push({\n      rowOrder: docParticulars?.length + 1,\n      rowQty: \"\",\n      rowDescription: \"\",\n      rowUnitPrice: \"\",\n      rowAmount: \"\",\n      rowDiscountAmount: \"\",\n      rowDiscountedAmount: \"\",\n      rowIsVatable: documentType?.id === \"invoice\" ? false : true,\n      rowVatAmount: \"\",\n      rowTotalAmount: \"\",\n      rowTaxCode: null,\n      rowNature: null,\n      rowVatCheckBoxDisabled: false,\n    });\n    setDocumentDetails({\n      ...documentDetails,\n      docParticulars: newDocParticulars,\n    });\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Card style={{ width: \"100%\" }}>\n          <Stack sx={{ padding: \"20px\", width: \"100%\" }}>\n            {companyMRATemplateFlag ? (\n              <>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() =>\n                    set_displayDiscountColumns(!displayDiscountColumns)\n                  }\n                  style={{ width: \"300px\" }}\n                >\n                  {displayDiscountColumns\n                    ? \"Hide discount columns\"\n                    : \"Show discount columns\"}\n                </Button>\n                <br />\n              </>\n            ) : (\n              <></>\n            )}\n\n            <Scrollbar>\n              <TableContainer>\n                <Table style={{ width: \"100%\" }} border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"20px\", whiteSpace: \"nowrap\" }}\n                      />\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"20px\", whiteSpace: \"nowrap\" }}\n                      >\n                        Order\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\", minWidth: \"300px\" }}\n                      >\n                        Description\n                      </TableCell>\n\n                      {companyMRATemplateFlag ? (\n                        <>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\", minWidth: \"200px\" }}\n                          >\n                            Nature\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\", minWidth: \"200px\" }}\n                          >\n                            Tax Code\n                          </TableCell>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                      <TableCell\n                        size=\"small\"\n                        style={{\n                          whiteSpace: \"nowrap\",\n                          minWidth: \"100px\",\n                        }}\n                        align=\"center\"\n                      >\n                        Quantity\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{\n                          whiteSpace: \"nowrap\",\n                          minWidth: \"150px\",\n                        }}\n                      >\n                        Unit Price\n                      </TableCell>\n\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{\n                          whiteSpace: \"nowrap\",\n                          minWidth: \"150px\",\n                        }}\n                      >\n                        Amount\n                      </TableCell>\n\n                      {companyDetails?.data?.documentTemplate ===\n                      \"smart_promote\" ? (\n                        <>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              minWidth: \"150px\",\n                            }}\n                          >\n                            Discount\n                          </TableCell>\n\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              minWidth: \"150px\",\n                            }}\n                          >\n                            Discounted Amt\n                          </TableCell>\n                        </>\n                      ) : companyMRATemplateFlag ? (\n                        <>\n                          {displayDiscountColumns ? (\n                            <>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                  minWidth: \"150px\",\n                                }}\n                              >\n                                Discount\n                              </TableCell>\n\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                  minWidth: \"150px\",\n                                }}\n                              >\n                                Discounted Amt\n                              </TableCell>\n                            </>\n                          ) : (\n                            <></>\n                          )}\n\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\", minWidth: \"150px\" }}\n                          >\n                            Vat\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\", minWidth: \"150px\" }}\n                          >\n                            Total MUR\n                          </TableCell>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {docParticulars &&\n                      docParticulars?.length > 0 &&\n                      docParticulars?.map((particular, index) => (\n                        <TableRow key={index}>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <IconButton\n                              color=\"error\"\n                              onClick={() => deleteParticular(index)}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"orderNum\"\n                              id=\"orderNum\"\n                              type=\"number\"\n                              value={particular?.rowOrder || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleOrderChange(event.target.value, index)\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Stack spacing={1} direction=\"row\">\n                              {companyDetails?.data?.documentTemplate ===\n                              \"flexitrans\" ? (\n                                <Autocomplete\n                                  size=\"small\"\n                                  fullWidth\n                                  value={particular?.rowDescription || null}\n                                  onChange={(event, newValue) => {\n                                    handleInputChange(\n                                      newValue,\n                                      index,\n                                      \"rowDescription\"\n                                    );\n                                  }}\n                                  inputValue={particular?.rowDescription || \"\"}\n                                  onInputChange={(event, newInputValue) => {\n                                    handleInputChange(\n                                      newInputValue,\n                                      index,\n                                      \"rowDescription\"\n                                    );\n                                  }}\n                                  options={defaultParticularOptions || []}\n                                  renderInput={(params) => (\n                                    <TextField\n                                      {...params}\n                                      variant=\"outlined\"\n                                      multiline\n                                      minRows={1}\n                                    />\n                                  )}\n                                />\n                              ) : (\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"rowDescription\"\n                                  id=\"rowDescription\"\n                                  type=\"text\"\n                                  value={particular?.rowDescription || \"\"}\n                                  onChange={(event) =>\n                                    handleInputChange(\n                                      event.target.value,\n                                      index,\n                                      \"rowDescription\"\n                                    )\n                                  }\n                                  size=\"small\"\n                                  fullWidth\n                                  multiline\n                                  minRows={1}\n                                />\n                              )}\n\n                              {companyDetails?.id ===\n                              process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID ? (\n                                <Tooltip title=\"Search SKU Code\">\n                                  <IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                      setSelectedRowIndex(index);\n                                      set_us_openDialogSKUCodeSearch(true);\n                                    }}\n                                  >\n                                    <SearchIcon />\n                                  </IconButton>\n                                </Tooltip>\n                              ) : companyDetails?.id ===\n                                process.env.REACT_APP_CUSTOM_BUGSBEGONE_ID ? (\n                                <Tooltip title=\"Search Contract Agreement\">\n                                  <IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                      setSelectedRowIndex(index);\n                                      set_us_openDialogContractAgreementSearch(\n                                        true\n                                      );\n                                    }}\n                                  >\n                                    <SearchIcon />\n                                  </IconButton>\n                                </Tooltip>\n                              ) : (\n                                <></>\n                              )}\n\n                              <Tooltip title=\"Search already used description\">\n                                <IconButton\n                                  color=\"primary\"\n                                  size=\"small\"\n                                  onClick={() => {\n                                    setSelectedRowIndex(index);\n                                    set_us_openDialog(true);\n                                  }}\n                                  style={{\n                                    display:\n                                      savedDescriptions &&\n                                      savedDescriptions?.length > 0\n                                        ? \"\"\n                                        : \"none\",\n                                  }}\n                                >\n                                  <ManageSearchIcon />\n                                </IconButton>\n                              </Tooltip>\n                            </Stack>\n                          </TableCell>\n\n                          {companyMRATemplateFlag ? (\n                            <>\n                              <TableCell size=\"small\" align=\"center\">\n                                <Autocomplete\n                                  ListboxProps={{\n                                    style: { maxHeight: \"70vh\" },\n                                  }}\n                                  size=\"small\"\n                                  label=\"Nature\"\n                                  id=\"nature-drop-down\"\n                                  options={\n                                    process.env.REACT_APP_EBS_NATURE_VALUES\n                                      ? JSON.parse(\n                                          process.env\n                                            .REACT_APP_EBS_NATURE_VALUES\n                                        )\n                                      : []\n                                  }\n                                  value={particular?.rowNature || null}\n                                  renderInput={(params) => (\n                                    <TextField {...params} label=\"Nature\" />\n                                  )}\n                                  required\n                                  onChange={(e, value, reason) => {\n                                    e.preventDefault();\n                                    if (\n                                      reason !== \"removeOption\" &&\n                                      reason !== \"clear\" &&\n                                      value\n                                    ) {\n                                      handleInputChange(\n                                        value,\n                                        index,\n                                        \"rowNature\"\n                                      );\n                                    } else if (\n                                      reason === \"removeOption\" ||\n                                      reason === \"clear\"\n                                    ) {\n                                      handleInputChange(\n                                        null,\n                                        index,\n                                        \"rowNature\"\n                                      );\n                                    }\n                                  }}\n                                  getOptionLabel={(option) =>\n                                    option?.title || \"\"\n                                  }\n                                  fullWidth\n                                />\n                              </TableCell>\n                              <TableCell size=\"small\" align=\"center\">\n                                <Autocomplete\n                                  ListboxProps={{\n                                    style: { maxHeight: \"70vh\" },\n                                  }}\n                                  size=\"small\"\n                                  label=\"Tax Code\"\n                                  id=\"tax-code-drop-down\"\n                                  options={\n                                    process.env.REACT_APP_EBS_TAX_CODE_VALUES\n                                      ? JSON.parse(\n                                          process.env\n                                            .REACT_APP_EBS_TAX_CODE_VALUES\n                                        )\n                                      : []\n                                  }\n                                  value={particular?.rowTaxCode || null}\n                                  renderInput={(params) => (\n                                    <TextField {...params} label=\"Tax Code\" />\n                                  )}\n                                  required\n                                  onChange={(e, value, reason) => {\n                                    e.preventDefault();\n                                    if (\n                                      reason !== \"removeOption\" &&\n                                      reason !== \"clear\" &&\n                                      value\n                                    ) {\n                                      handleInputChange(\n                                        value,\n                                        index,\n                                        \"rowTaxCode\"\n                                      );\n                                    } else if (\n                                      reason === \"removeOption\" ||\n                                      reason === \"clear\"\n                                    ) {\n                                      handleInputChange(\n                                        null,\n                                        index,\n                                        \"rowTaxCode\"\n                                      );\n                                    }\n                                  }}\n                                  getOptionLabel={(option) =>\n                                    option?.title || \"\"\n                                  }\n                                  fullWidth\n                                />\n                              </TableCell>\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"qty\"\n                              id=\"qty\"\n                              type=\"text\"\n                              value={particular?.rowQty || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleInputChange(\n                                  event.target.value,\n                                  index,\n                                  \"rowQty\"\n                                )\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n\n                          <TableCell size=\"small\" align=\"center\">\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"unitPrice\"\n                              id=\"unitPrice\"\n                              type=\"text\"\n                              value={particular?.rowUnitPrice || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleInputChange(\n                                  event.target.value,\n                                  index,\n                                  \"rowUnitPrice\"\n                                )\n                              }\n                              fullWidth\n                              inputProps={{ style: { width: \"100%\" } }}\n                            />\n                          </TableCell>\n\n                          <TableCell size=\"small\" align=\"center\">\n                            <Typography>\n                              {particular?.rowAmount || \"\"}\n                            </Typography>\n                          </TableCell>\n\n                          {companyDetails?.data?.documentTemplate ===\n                          \"smart_promote\" ? (\n                            <>\n                              <TableCell size=\"small\" align=\"center\">\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"rowDiscountAmount\"\n                                  id=\"rowDiscountAmount\"\n                                  type=\"text\"\n                                  value={particular?.rowDiscountAmount || \"\"}\n                                  size=\"small\"\n                                  onChange={(event) =>\n                                    handleInputChange(\n                                      event.target.value,\n                                      index,\n                                      \"rowDiscountAmount\"\n                                    )\n                                  }\n                                  fullWidth\n                                />\n                              </TableCell>\n\n                              <TableCell size=\"small\" align=\"center\">\n                                <Typography>\n                                  {particular?.rowDiscountedAmount || \"\"}\n                                </Typography>\n                              </TableCell>\n                            </>\n                          ) : companyMRATemplateFlag ? (\n                            <>\n                              {displayDiscountColumns ? (\n                                <>\n                                  <TableCell size=\"small\" align=\"center\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      name=\"rowDiscountAmount\"\n                                      id=\"rowDiscountAmount\"\n                                      type=\"number\"\n                                      value={\n                                        particular?.rowDiscountAmount || \"\"\n                                      }\n                                      size=\"small\"\n                                      onChange={(event) =>\n                                        handleInputChange(\n                                          event.target.value,\n                                          index,\n                                          \"rowDiscountAmount\"\n                                        )\n                                      }\n                                      fullWidth\n                                    />\n                                  </TableCell>\n\n                                  <TableCell size=\"small\" align=\"center\">\n                                    <Typography>\n                                      {particular?.rowDiscountedAmount || \"\"}\n                                    </Typography>\n                                  </TableCell>\n                                </>\n                              ) : (\n                                <></>\n                              )}\n\n                              <TableCell size=\"small\" align=\"center\">\n                                <Stack\n                                  spacing={1}\n                                  direction=\"row\"\n                                  alignItems={\"center\"}\n                                  justifyContent={\"center\"}\n                                >\n                                  <Tooltip title=\"Apply or remove Vat\">\n                                    <Checkbox\n                                      checked={\n                                        particular?.rowIsVatable === undefined\n                                          ? true\n                                          : particular?.rowIsVatable\n                                      }\n                                      onChange={(event) =>\n                                        handleIsVatableChange(\n                                          index,\n                                          event.target.checked\n                                        )\n                                      }\n                                      disabled={\n                                        particular?.rowVatCheckBoxDisabled ||\n                                        false\n                                      }\n                                    />\n                                  </Tooltip>\n\n                                  <Typography>\n                                    {particular?.rowVatAmount || \"\"}\n                                  </Typography>\n                                </Stack>\n                              </TableCell>\n\n                              <TableCell size=\"small\" align=\"center\">\n                                <Typography>\n                                  {particular?.rowTotalAmount || \"\"}\n                                </Typography>\n                              </TableCell>\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => addNewRow()}\n              >\n                Add new row\n              </Button>\n            </Scrollbar>\n          </Stack>\n        </Card>\n      </Grid>\n    </>\n  );\n}\n"],"sourceRoot":""}