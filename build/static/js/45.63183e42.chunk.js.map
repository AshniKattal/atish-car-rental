{"version":3,"sources":["../node_modules/@mui/icons-material/KeyboardBackspace.js","../node_modules/@linways/table-to-excel/dist sync","pages/dashboard/report/ReportExcel.js","pages/dashboard/report/ReportIndex.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","webpackEmptyContext","req","e","Error","code","keys","resolve","module","id","ReportExcel","companyName","us_invoicelist","us_total","totalSubtotalAmount","totalInvoiceAmount","totalPaymentMadeAmount","totalAmountDue","colSpan","map","invoice","index","data","bookingId","clientName","moment","dateCreated","toDate","format","Number","docSubTotal","toFixed","displayType","thousandSeparator","bookingTotalAmount","attachedPaymentNumber","length","payment","paymentDate","paymentNumberString","paymentType","paymentAmount","ReportTable","lazy","ReportIndex","navigate","useNavigate","themeStretch","useSettings","isDesktop","useResponsive","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","selectDocument","documents","companyDetails","clientList","clientDocumentObjectSelected","reportDocType","useState","logo","sigImage","temp_fetch_invoice_ref","useRef","temp_refresh_report_ref","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","set_us_invoicelist","totalStorage","totalScanning","totalVat","set_us_total","a","variant","setLoading","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","where","firebase","firestore","Timestamp","fromDate","get","then","querySnapshot","docs","performData","totalStorageCal","totalScanningCal","catch","err","message","clientDataList","invoiceArray","totalSubtotalAmountCal","totalInvoiceAmountCal","totalPaymentMadeAmountCal","totalAmountDueCal","forEach","invoiceDoc","isVoid","deleted","totalPaymentDone","push","invStorageFee","invScanningFee","sort","dynamicSortNumber","useEffect","current","setCompanyIdSelected","undefined","setCompanyDetails","setClientDocumentIdSelected","setClientDocumentObjectSelected","setClientList","setReportDocType","Page","title","Container","maxWidth","Grid","container","spacing","item","xs","md","Stack","direction","alignItems","Button","startIcon","color","onClick","PATH_DASHBOARD","general","app1","Typography","DatePicker","label","onChange","newValue","renderInput","params","TextField","size","inputFormat","style","display","date_from","date_to","table","document","getElementById","TableToExcel","convert","name","downloadexcel","width","fallback","companyDetail","Alert","severity","border"],"mappings":"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","file":"static/js/45.63183e42.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z\"\n}), 'KeyboardBackspace');","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1564;","import React, { Fragment } from \"react\";\nimport moment from \"moment\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction ReportExcel({ companyName, us_invoicelist, us_total }) {\n  const {\n    totalSubtotalAmount,\n    totalInvoiceAmount,\n    totalPaymentMadeAmount,\n    totalAmountDue,\n  } = us_total;\n\n  return (\n    <>\n      <thead>\n        <tr>\n          <th\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            colSpan={12}\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            {companyName || \"\"}\n          </th>\n        </tr>\n        <tr>\n          <th\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            colSpan={5}\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            Vehicle Booking\n          </th>\n\n          <th data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></th>\n          <th\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            colSpan={4}\n            data-f-bold={true}\n            data-f-color=\"FFFF0000\"\n            data-a-h=\"center\"\n          >\n            PAYMENT\n          </th>\n          <th data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></th>\n          <th data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></th>\n        </tr>\n      </thead>\n      {/** ------------------------------------------------------------ */}\n      <tbody>\n        <tr>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            BOOKING NUMBER\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            CUSTOMER\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            DATE\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            AMOUNT\n          </td>\n\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n          >\n            TOTAL\n          </td>\n\n          <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-f-color=\"FFFF0000\"\n            data-a-h=\"center\"\n          >\n            DATE\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-f-color=\"FFFF0000\"\n            data-a-h=\"center\"\n          >\n            PAYMENT NO:\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-f-color=\"FFFF0000\"\n            data-a-h=\"center\"\n          >\n            TYPE\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-f-color=\"FFFF0000\"\n            data-a-h=\"center\"\n          >\n            AMOUNT\n          </td>\n          <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-f-color=\"FF00B0F0\"\n            data-a-h=\"center\"\n          >\n            TOTAL AMOUNT DUE\n          </td>\n        </tr>\n        {/** ------------------------------------------------------------ */}\n        {us_invoicelist?.map((invoice, index) => (\n          <tr key={index}>\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\" data-a-h=\"center\">\n              {invoice?.data?.bookingId || \"\"}\n            </td>\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\" data-a-h=\"center\">\n              {invoice?.data?.clientName || \"\"}\n            </td>\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\" data-a-h=\"center\">\n              {moment(invoice?.data?.dateCreated.toDate()).format(\n                \"DD-MM-YYYY\"\n              ) || \"\"}\n            </td>\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\" data-a-h=\"center\">\n              <CurrencyFormat\n                value={Number(invoice?.data?.docSubTotal || 0).toFixed(2)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </td>\n\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\" data-a-h=\"center\">\n              <CurrencyFormat\n                value={Number(invoice?.data?.bookingTotalAmount || 0).toFixed(\n                  2\n                )}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </td>\n\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></td>\n            <td\n              data-b-a-s=\"thin\"\n              data-b-a-c=\"00000000\"\n              data-f-color=\"FFFF0000\"\n              data-a-h=\"center\"\n            >\n              {invoice?.data?.attachedPaymentNumber &&\n              invoice?.data?.attachedPaymentNumber?.length > 0\n                ? invoice?.data?.attachedPaymentNumber?.map(\n                    (payment, index) => (\n                      <Fragment key={index}>\n                        {payment?.paymentDate || \"\"}\n                        <br />\n                      </Fragment>\n                    )\n                  )\n                : \"-\"}\n            </td>\n            <td\n              data-b-a-s=\"thin\"\n              data-b-a-c=\"00000000\"\n              data-f-color=\"FFFF0000\"\n              data-a-h=\"center\"\n              data-a-wrap={false}\n            >\n              {invoice?.data?.attachedPaymentNumber &&\n              invoice?.data?.attachedPaymentNumber?.length > 0\n                ? invoice?.data?.attachedPaymentNumber?.map(\n                    (payment, index) => (\n                      <Fragment key={index}>\n                        {`${payment?.paymentNumberString || \"\"}`}\n                        <br />\n                      </Fragment>\n                    )\n                  )\n                : \"-\"}\n            </td>\n            <td\n              data-b-a-s=\"thin\"\n              data-b-a-c=\"00000000\"\n              data-f-color=\"FFFF0000\"\n              data-a-h=\"center\"\n              data-a-wrap={false}\n            >\n              {invoice?.data?.attachedPaymentNumber &&\n              invoice?.data?.attachedPaymentNumber?.length > 0\n                ? invoice?.data?.attachedPaymentNumber?.map(\n                    (payment, index) => (\n                      <Fragment key={index}>\n                        {payment?.paymentType || \"\"}\n                        <br />\n                      </Fragment>\n                    )\n                  )\n                : \"-\"}\n            </td>\n            <td\n              data-b-a-s=\"thin\"\n              data-b-a-c=\"00000000\"\n              data-f-color=\"FFFF0000\"\n              data-a-h=\"center\"\n              data-a-wrap={false}\n            >\n              {invoice?.data?.attachedPaymentNumber &&\n              invoice?.data?.attachedPaymentNumber?.length > 0\n                ? invoice?.data?.attachedPaymentNumber?.map(\n                    (payment, index) => (\n                      <Fragment key={index}>\n                        <CurrencyFormat\n                          value={Number(payment?.paymentAmount || 0).toFixed(2)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                        <br />\n                      </Fragment>\n                    )\n                  )\n                : \"-\"}\n            </td>\n            <td data-b-a-s=\"thin\" data-b-a-c=\"00000000\"></td>\n            <td\n              data-b-a-s=\"thin\"\n              data-b-a-c=\"00000000\"\n              data-f-color=\"FF00B0F0\"\n              data-a-h=\"center\"\n            >\n              <CurrencyFormat\n                value={Number(invoice?.data?.totalAmountDue || 0).toFixed(2)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </td>\n          </tr>\n        ))}\n\n        <tr>\n          <td colSpan={12} />\n        </tr>\n\n        <tr>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={6}\n          >\n            Total Amount (Sub-total)\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={5}\n          >\n            <CurrencyFormat\n              value={Number(totalSubtotalAmount || 0).toFixed(2)}\n              displayType={\"text\"}\n              thousandSeparator={true}\n            />\n          </td>\n        </tr>\n\n        <tr>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={6}\n          >\n            Total\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={5}\n          >\n            <CurrencyFormat\n              value={Number(totalInvoiceAmount || 0).toFixed(2)}\n              displayType={\"text\"}\n              thousandSeparator={true}\n            />\n          </td>\n        </tr>\n\n        <tr>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={6}\n          >\n            Total payment made\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={5}\n          >\n            <CurrencyFormat\n              value={Number(totalPaymentMadeAmount || 0).toFixed(2)}\n              displayType={\"text\"}\n              thousandSeparator={true}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={6}\n          >\n            Total amount due\n          </td>\n          <td\n            data-b-a-s=\"thin\"\n            data-b-a-c=\"00000000\"\n            data-f-bold={true}\n            data-a-h=\"center\"\n            colSpan={5}\n          >\n            <CurrencyFormat\n              value={Number(totalAmountDue || 0).toFixed(2)}\n              displayType={\"text\"}\n              thousandSeparator={true}\n            />\n          </td>\n        </tr>\n      </tbody>\n    </>\n  );\n}\n\nexport default ReportExcel;\n","import { lazy, Suspense, useRef, useState, useEffect } from \"react\";\n// @mui\nimport {\n  Alert,\n  Button,\n  Container,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n// hooks\nimport useSettings from \"../../../hooks/useSettings\";\n// components\nimport Page from \"../../../components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport db from \"../../../firebase\";\nimport firebase from \"firebase/compat\";\nimport { useNavigate } from \"react-router\";\nimport { PATH_DASHBOARD } from \"../../../routes/paths\";\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\nimport TableToExcel from \"@linways/table-to-excel\";\nimport ReportExcel from \"./ReportExcel\";\nimport useResponsive from \"../../../hooks/useResponsive\";\nimport { DatePicker } from \"@mui/lab\";\nimport {\n  selectDocument,\n  setClientDocumentIdSelected,\n  setClientDocumentObjectSelected,\n  setClientList,\n  setCompanyDetails,\n  setCompanyIdSelected,\n  setReportDocType,\n} from \"../../../features/documentSlice\";\n\nimport { dynamicSortNumber } from \"src/components/core-functions/SelectionCoreFunctions\";\n\nconst ReportTable = lazy(() => import(\"./ReportTable\"));\n\nexport default function ReportIndex() {\n  const navigate = useNavigate();\n\n  const { themeStretch } = useSettings();\n\n  const isDesktop = useResponsive(\"up\", \"sm\");\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const {\n    documents,\n    companyDetails,\n    clientList,\n    clientDocumentObjectSelected,\n    reportDocType,\n  } = useSelector(selectDocument);\n\n  const [logo, setLogo] = useState(\"\");\n\n  const [sigImage, setSigImage] = useState(\"\");\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  const temp_fetch_invoice_ref = useRef();\n\n  const temp_refresh_report_ref = useRef();\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [us_invoicelist, set_us_invoicelist] = useState([]);\n\n  const actionType = \"report\";\n\n  const [us_total, set_us_total] = useState({\n    totalSubtotalAmount: 0,\n    totalStorage: 0,\n    totalScanning: 0,\n    totalVat: 0,\n    totalInvoiceAmount: 0,\n    totalPaymentMadeAmount: 0,\n    totalAmountDue: 0,\n  });\n\n  const {\n    totalSubtotalAmount,\n    totalStorage,\n    totalScanning,\n    totalVat,\n    totalInvoiceAmount,\n    totalPaymentMadeAmount,\n    totalAmountDue,\n  } = us_total;\n\n  useEffect(() => {\n    temp_refresh_report_ref.current();\n  }, []);\n\n  useEffect(() => {\n    temp_fetch_invoice_ref.current();\n  }, [\n    us_fromDate,\n    us_ToDate,\n    clientDocumentObjectSelected,\n    clientList,\n    reportDocType,\n  ]);\n\n  function refreshReportSection() {\n    dispatch(setCompanyIdSelected(undefined));\n    dispatch(setCompanyDetails(null));\n    dispatch(setClientDocumentIdSelected(undefined));\n    dispatch(setClientDocumentObjectSelected(null));\n    dispatch(setClientList([]));\n    dispatch(setReportDocType(\"\"));\n    set_us_fromDate(new Date());\n    set_us_ToDate(new Date());\n    set_us_invoicelist([]);\n  }\n\n  temp_refresh_report_ref.current = refreshReportSection;\n\n  async function fetchInvoice() {\n    if (us_fromDate && us_ToDate) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"vehiclebooking\")\n          .where(\n            \"dateCreated\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"dateCreated\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then(async (querySnapshot) => {\n            if (querySnapshot?.docs?.length > 0) {\n              if (actionType === \"report\") {\n                performData([], querySnapshot);\n              }\n            } else {\n              set_us_total({\n                totalSubtotalAmount: 0,\n                totalStorageCal: 0,\n                totalScanningCal: 0,\n                totalVat: 0,\n                totalInvoiceAmount: 0,\n                totalPaymentMadeAmount: 0,\n                totalAmountDue: 0,\n              });\n              set_us_invoicelist([]);\n              dispatch(setLoading(false));\n            }\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching Bookings: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_invoice_ref.current = fetchInvoice;\n\n  function performData(clientDataList, querySnapshot) {\n    let invoiceArray = [];\n    let totalSubtotalAmountCal = 0;\n    let totalStorageCal = 0;\n    let totalScanningCal = 0;\n    let totalVatCal = 0;\n\n    let totalInvoiceAmountCal = 0;\n    let totalPaymentMadeAmountCal = 0;\n    let totalAmountDueCal = 0;\n\n    querySnapshot?.docs.forEach((invoiceDoc) => {\n      if (!invoiceDoc?.data()?.isVoid && !invoiceDoc?.data()?.deleted) {\n        let totalAmountDue = 0;\n        if (\n          invoiceDoc?.data()?.attachedPaymentNumber &&\n          invoiceDoc?.data()?.attachedPaymentNumber?.length > 0\n        ) {\n          let totalPaymentDone = 0;\n          invoiceDoc?.data()?.attachedPaymentNumber.forEach((payment) => {\n            totalPaymentDone =\n              totalPaymentDone + Number(payment?.paymentAmount);\n          });\n\n          totalAmountDue =\n            Number(invoiceDoc?.data()?.bookingTotalAmount) - totalPaymentDone;\n\n          totalPaymentMadeAmountCal =\n            totalPaymentMadeAmountCal + Number(totalPaymentDone);\n        } else {\n          totalAmountDue = Number(invoiceDoc?.data()?.bookingTotalAmount);\n        }\n\n        invoiceArray.push({\n          id: invoiceDoc?.id,\n          data: {\n            ...invoiceDoc?.data(),\n            totalAmountDue: totalAmountDue,\n          },\n        });\n\n        totalSubtotalAmountCal =\n          totalSubtotalAmountCal +\n          Number(invoiceDoc?.data()?.bookingTotalAmount);\n\n        totalStorageCal =\n          totalStorageCal + Number(invoiceDoc?.data()?.invStorageFee);\n\n        totalScanningCal =\n          totalScanningCal + Number(invoiceDoc?.data()?.invScanningFee);\n\n        totalInvoiceAmountCal =\n          totalInvoiceAmountCal +\n          Number(invoiceDoc?.data()?.bookingTotalAmount);\n\n        totalAmountDueCal = totalAmountDueCal + Number(totalAmountDue);\n      }\n    });\n    set_us_total({\n      totalSubtotalAmount: totalSubtotalAmountCal,\n      totalStorage: totalStorageCal,\n      totalScanning: totalScanningCal,\n      totalVat: totalVatCal || 0,\n      totalInvoiceAmount: totalInvoiceAmountCal,\n      totalPaymentMadeAmount: totalPaymentMadeAmountCal,\n      totalAmountDue: totalAmountDueCal,\n    });\n\n    invoiceArray.sort(dynamicSortNumber(\"id\"));\n\n    set_us_invoicelist(invoiceArray);\n    dispatch(setLoading(false));\n  }\n\n  const downloadexcel = (id) => {\n    let date_from = moment(us_fromDate).format(\"DD-MM-YYYY\");\n    let date_to = moment(us_ToDate).format(\"DD-MM-YYYY\");\n\n    if (id === \"idStatementTable\") {\n      let table = document.getElementById(id);\n      TableToExcel.convert(table, {\n        name: `SOA_${clientDocumentObjectSelected?.name}_${date_from}_TO_${date_to}.xlsx`,\n      });\n    } else if (id === \"idReportTable\") {\n      let table = document.getElementById(id);\n      TableToExcel.convert(table, {\n        name: `REPORT_${date_from}_TO_${date_to}.xlsx`,\n      });\n    } else if (id === \"idIncomeReportTable\") {\n      let table = document.getElementById(id);\n      TableToExcel.convert(table, {\n        name: `Income_report_${date_from}_TO_${date_to}.xlsx`,\n      });\n    } else if (id === \"idSummaryIncomeReportTable\") {\n      let table = document.getElementById(id);\n      TableToExcel.convert(table, {\n        name: `Summary_income_${date_from}_TO_${date_to}.xlsx`,\n      });\n    }\n  };\n\n  return (\n    <Page title=\"Report\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Stack spacing={3} direction=\"row\" alignItems={\"center\"}>\n              <Button\n                startIcon={<KeyboardBackspaceIcon />}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => navigate(PATH_DASHBOARD.general.app1)}\n              >\n                Back\n              </Button>\n              <Typography variant=\"h3\">Report section</Typography>\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <Stack spacing={3}>\n              <hr />\n\n              <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n                <DatePicker\n                  label=\"From\"\n                  value={us_fromDate || \"\"}\n                  onChange={(newValue) => {\n                    set_us_fromDate(newValue);\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" />\n                  )}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n                <DatePicker\n                  label=\"To\"\n                  value={us_ToDate || \"\"}\n                  onChange={(newValue) => {\n                    set_us_ToDate(newValue);\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" />\n                  )}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n              </Stack>\n            </Stack>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{\n              display:\n                us_invoicelist &&\n                us_invoicelist?.length > 0 &&\n                us_fromDate &&\n                us_ToDate &&\n                actionType === \"report\"\n                  ? \"\"\n                  : \"none\",\n            }}\n          >\n            <Stack spacing={3}>\n              <Stack direction={\"row\"} spacing={3}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => downloadexcel(\"idReportTable\")}\n                  style={{ width: isDesktop ? \"200px\" : \"100%\" }}\n                >\n                  Download as excel\n                </Button>\n              </Stack>\n\n              <Suspense fallback={<></>}>\n                <ReportTable\n                  logo={logo}\n                  sigImage={sigImage}\n                  companyDetails={companyDetails}\n                  clientDocumentObjectSelected={clientDocumentObjectSelected}\n                  documents={documents}\n                  reportDocType={reportDocType}\n                  companyDetail={companyDetails}\n                  us_invoicelist={us_invoicelist || []}\n                  totalSubtotalAmount={totalSubtotalAmount || 0}\n                  totalStorage={totalStorage || 0}\n                  totalScanning={totalScanning || 0}\n                  totalVat={totalVat || 0}\n                  totalInvoiceAmount={totalInvoiceAmount || 0}\n                  totalPaymentMadeAmount={totalPaymentMadeAmount || 0}\n                  totalAmountDue={totalAmountDue || 0}\n                  clientList={clientList}\n                />\n              </Suspense>\n            </Stack>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            md={12}\n            style={{\n              display:\n                !us_fromDate || !us_ToDate\n                  ? \"none\"\n                  : companyDetails &&\n                    (!us_invoicelist || us_invoicelist?.length === 0)\n                  ? \"\"\n                  : \"none\",\n            }}\n          >\n            <Alert severity={\"warning\"}>\n              {`No Bookings found for the chosen date`}\n            </Alert>\n          </Grid>\n        </Grid>\n\n        <table\n          id=\"idReportTable\"\n          border=\"1\"\n          style={{ display: \"none\" }}\n          data-cols-width={\"20,20,20,20,20,10,20,20,20,20,10,20\"}\n        >\n          <ReportExcel\n            companyDetails={companyDetails}\n            documents={documents}\n            reportDocType={reportDocType}\n            companyName={companyDetails?.name || \"\"}\n            us_invoicelist={us_invoicelist || []}\n            us_total={us_total || 0}\n          />\n        </table>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}