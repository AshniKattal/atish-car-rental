{"version":3,"sources":["components/document/DocumentSummaryTotal.js"],"names":["InvViewDetails","lazy","DocumentSummaryTotal","documentType","documentDetails","companyMRATemplateFlag","action","companyId","documentMRATemplateApplied","setDocumentDetails","documentTemplate","displayDiscountColumns","calculateTotal","discountTotalAmount","discountedTotalAmount","docSubTotal","docVatFee","docTotal","docSalesTransaction","invScanningFee","invGatePassFee","invStorageFee","invApplyVat","transportFees","useState","openInvoiceSearchDialog","set_openInvoiceSearchDialog","handleAdditionalFeesChange","value","fee","Number","item","xs","md","style","width","display","flexDirection","alignItems","container","justifyContent","sx","padding","id","size","colSpan","ListboxProps","maxHeight","label","options","JSON","parse","process","renderInput","params","multiline","minRows","required","onChange","e","reason","preventDefault","getOptionLabel","option","title","fullWidth","whiteSpace","toFixed","REACT_APP_CUSTOM_SOREFAN_ID","variant","name","type","event","target","includes","align","direction","checked","previous","invApplyVatValue","vatFee","onHandleTransportFeeChange","disabled","subTotalAmt","onHandleApplyVATChange","newDocParticulars","docParticulars","forEach","row","rowDiscountedAmount","rowAmount","push","rowDiscountAmount","previousState","originalTotal","percentageDiscount","customSmartPromoteDiscount","maxWidth","open","onClose","fallback","viewOnly","searchAndChoose","chooseDocument","doc","data","downPayment","downPaymentInvoiceNumber","docString","color","onClick"],"mappings":"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","file":"static/js/66.e6a3cdc1.chunk.js","sourcesContent":["import {\n  Autocomplete,\n  Button,\n  Card,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nimport { Suspense, lazy, useState } from \"react\";\n\nconst InvViewDetails = lazy(() =>\n  import(\"../invoice-view-details/InvViewDetails\")\n);\n\nexport default function DocumentSummaryTotal({\n  documentType,\n  documentDetails,\n  action,\n  companyMRATemplateFlag,\n  documentMRATemplateApplied,\n  companyId,\n  setDocumentDetails,\n  documentTemplate,\n  displayDiscountColumns,\n  calculateTotal,\n}) {\n  const {\n    // downPayment,\n    // downPaymentInvoiceNumber,\n    discountTotalAmount,\n    discountedTotalAmount,\n    docSubTotal,\n    docVatFee,\n    docTotal,\n    docSalesTransaction,\n    invScanningFee,\n    invGatePassFee,\n    invStorageFee,\n    invApplyVat,\n    transportFees,\n  } = documentDetails;\n\n  const [openInvoiceSearchDialog, set_openInvoiceSearchDialog] =\n    useState(false);\n\n  const chooseDocument = (doc) => {\n    if (doc && doc?.data) {\n      setDocumentDetails({\n        ...documentDetails,\n        downPayment: doc?.data?.docTotal,\n        downPaymentInvoiceNumber: doc?.data?.docString,\n      });\n\n      set_openInvoiceSearchDialog(false);\n    }\n  };\n\n  function handleAdditionalFeesChange(value, fee) {\n    if (Number(value) >= 0) {\n      setDocumentDetails({ ...documentDetails, [fee]: value });\n    }\n  }\n\n  function onHandleTransportFeeChange(invApplyVatValue, value) {\n    if (Number(value) >= 0) {\n      if (invApplyVatValue) {\n        let vatFee = 0;\n        vatFee = 0.15 * Number(value);\n\n        setDocumentDetails((previous) => {\n          return {\n            ...previous,\n            docVatFee: vatFee,\n          };\n        });\n      }\n    } else {\n      setDocumentDetails((previous) => {\n        return {\n          ...previous,\n          docVatFee: 0,\n        };\n      });\n    }\n  }\n\n  function onHandleApplyVATChange(invApplyVatValue, value) {\n    if (Number(value) >= 0) {\n      if (invApplyVatValue) {\n        let vatFee = 0;\n        let subTotalAmt = Number(docSubTotal || 0);\n        vatFee = 0.15 * subTotalAmt;\n\n        setDocumentDetails((previous) => {\n          return {\n            ...previous,\n            docVatFee: vatFee,\n          };\n        });\n      }\n    } else {\n      setDocumentDetails((previous) => {\n        return {\n          ...previous,\n          docVatFee: 0,\n        };\n      });\n    }\n  }\n\n  function customSmartPromoteDiscount(value) {\n    if (Number(value) <= 0) {\n      let newDocParticulars = [];\n\n      documentDetails?.docParticulars.forEach((row) => {\n        let rowDiscountAmount = 0;\n        let rowDiscountedAmount = Number(row?.rowAmount) - rowDiscountAmount;\n        newDocParticulars.push({\n          ...row,\n          rowDiscountAmount: rowDiscountAmount,\n          rowDiscountedAmount: rowDiscountedAmount,\n        });\n      });\n\n      setDocumentDetails((previousState) => {\n        return {\n          ...previousState,\n          discountTotalAmount: 0,\n          docParticulars: newDocParticulars,\n        };\n      });\n\n      calculateTotal();\n    } else {\n      let originalTotal = 0;\n      documentDetails?.docParticulars.forEach((row) => {\n        originalTotal = originalTotal + Number(row?.rowAmount || 0);\n      });\n      originalTotal = originalTotal * 1.15;\n\n      let percentageDiscount = Number(value) / originalTotal;\n\n      let newDocParticulars = [];\n\n      documentDetails?.docParticulars.forEach((row) => {\n        let rowDiscountAmount = percentageDiscount * Number(row?.rowAmount);\n        rowDiscountAmount = Number(rowDiscountAmount).toFixed(2);\n        let rowDiscountedAmount =\n          Number(row?.rowAmount) - Number(rowDiscountAmount);\n\n        newDocParticulars.push({\n          ...row,\n          rowDiscountAmount: Number(rowDiscountAmount),\n          rowDiscountedAmount: rowDiscountedAmount,\n        });\n      });\n\n      setDocumentDetails((previousState) => {\n        return {\n          ...previousState,\n          discountTotalAmount: value,\n          docParticulars: newDocParticulars,\n        };\n      });\n\n      calculateTotal();\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <Grid container justifyContent={\"flex-end\"}>\n          <Grid item xs={12} md={5}>\n            <Card>\n              <Stack sx={{ padding: \"20px\", width: \"100%\" }}>\n                <TableContainer>\n                  <Typography>Total Summary</Typography>\n                  <Table>\n                    <TableBody>\n                      {documentType?.id === \"vat_invoice\" &&\n                      companyMRATemplateFlag ? (\n                        <TableRow>\n                          <TableCell size=\"small\" colSpan={2}>\n                            <Autocomplete\n                              ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n                              size=\"small\"\n                              label=\"Choose Sales Transaction\"\n                              id=\"sales-transaction-drop-down\"\n                              options={\n                                process.env\n                                  .REACT_APP_EBS_SALES_TRANSACTION_VALUES\n                                  ? JSON.parse(\n                                      process.env\n                                        .REACT_APP_EBS_SALES_TRANSACTION_VALUES\n                                    )\n                                  : []\n                              }\n                              value={docSalesTransaction || null}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Choose Sales Transaction\"\n                                  multiline\n                                  minRows={1}\n                                />\n                              )}\n                              required\n                              onChange={(e, value, reason) => {\n                                e.preventDefault();\n                                if (\n                                  reason !== \"removeOption\" &&\n                                  reason !== \"clear\" &&\n                                  value\n                                ) {\n                                  setDocumentDetails({\n                                    ...documentDetails,\n                                    docSalesTransaction: value,\n                                  });\n                                } else if (\n                                  reason === \"removeOption\" ||\n                                  reason === \"clear\"\n                                ) {\n                                  setDocumentDetails({\n                                    ...documentDetails,\n                                    docSalesTransaction: null,\n                                  });\n                                }\n                              }}\n                              getOptionLabel={(option) => option?.title || \"\"}\n                              fullWidth\n                            />\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <></>\n                      )}\n\n                      {documentTemplate === \"transport\" ? (\n                        <>\n                          <TableRow>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <Typography>Transport fee</Typography>\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              <Typography>\n                                {(transportFees &&\n                                  Number(transportFees) > 0 &&\n                                  Number(transportFees).toFixed(2)) ||\n                                  0}\n                              </Typography>\n                            </TableCell>\n                          </TableRow>\n\n                          <TableRow>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <Typography>\n                                {companyId &&\n                                companyId ===\n                                  process.env.REACT_APP_CUSTOM_SOREFAN_ID\n                                  ? \"Storage Fee\"\n                                  : \"Gate Pass / Storage Fee\"}\n                              </Typography>\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"invStorageFee\"\n                                id=\"invStorageFee\"\n                                type=\"text\"\n                                value={invStorageFee || \"\"}\n                                size=\"small\"\n                                onChange={(event) =>\n                                  handleAdditionalFeesChange(\n                                    event.target.value,\n                                    \"invStorageFee\"\n                                  )\n                                }\n                                fullWidth\n                              />\n                            </TableCell>\n                          </TableRow>\n\n                          {companyId &&\n                          companyId ===\n                            process.env.REACT_APP_CUSTOM_SOREFAN_ID ? (\n                            <TableRow>\n                              <TableCell\n                                size=\"small\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                <Typography>Gate Pass Fee</Typography>\n                              </TableCell>\n                              <TableCell size=\"small\">\n                                <TextField\n                                  variant=\"outlined\"\n                                  name=\"invGatePassFee\"\n                                  id=\"invGatePassFee\"\n                                  type=\"text\"\n                                  value={invGatePassFee || \"\"}\n                                  size=\"small\"\n                                  onChange={(event) =>\n                                    handleAdditionalFeesChange(\n                                      event.target.value,\n                                      \"invGatePassFee\"\n                                    )\n                                  }\n                                  fullWidth\n                                />\n                              </TableCell>\n                            </TableRow>\n                          ) : (\n                            <></>\n                          )}\n\n                          <TableRow>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <Typography>Scanning Fee</Typography>\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"invScanningFee\"\n                                id=\"invScanningFee\"\n                                type=\"text\"\n                                value={invScanningFee || \"\"}\n                                size=\"small\"\n                                onChange={(event) =>\n                                  handleAdditionalFeesChange(\n                                    event.target.value,\n                                    \"invScanningFee\"\n                                  )\n                                }\n                                fullWidth\n                              />\n                            </TableCell>\n                          </TableRow>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n\n                      {(documentTemplate && documentTemplate !== \"transport\") ||\n                      (process.env\n                        .REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n                        companyId &&\n                        process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n                          companyId\n                        )) ? (\n                        <TableRow>\n                          <TableCell size=\"small\">\n                            <Typography>Sub total</Typography>\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"right\">\n                            {(docSubTotal &&\n                              Number(docSubTotal) > 0 &&\n                              Number(docSubTotal).toFixed(2)) ||\n                              0}\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <></>\n                      )}\n\n                      {companyMRATemplateFlag && displayDiscountColumns ? (\n                        <>\n                          <TableRow>\n                            <TableCell size=\"small\">\n                              <Typography>Total discount</Typography>\n                            </TableCell>\n                            <TableCell size=\"small\" align=\"right\">\n                              {(discountTotalAmount &&\n                                Number(discountTotalAmount) > 0 &&\n                                Number(discountTotalAmount).toFixed(2)) ||\n                                0}\n                            </TableCell>\n                          </TableRow>\n\n                          <TableRow>\n                            <TableCell size=\"small\">\n                              <Typography>Discounted amount</Typography>\n                            </TableCell>\n                            <TableCell size=\"small\" align=\"right\">\n                              {(discountedTotalAmount &&\n                                Number(discountedTotalAmount) > 0 &&\n                                Number(discountedTotalAmount).toFixed(2)) ||\n                                0}\n                            </TableCell>\n                          </TableRow>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n\n                      {documentTemplate && documentTemplate === \"transport\" ? (\n                        <TableRow>\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Stack direction=\"row\" alignItems={\"center\"}>\n                              <Checkbox\n                                checked={invApplyVat}\n                                onChange={(e) => {\n                                  let value = e.target.checked;\n\n                                  if (value) {\n                                    setDocumentDetails((previous) => {\n                                      return {\n                                        ...previous,\n                                        invApplyVat: e.target.checked,\n                                      };\n                                    });\n\n                                    onHandleTransportFeeChange(\n                                      e.target.checked,\n                                      transportFees\n                                    );\n                                  } else {\n                                    setDocumentDetails((previous) => {\n                                      return {\n                                        ...previous,\n                                        invApplyVat: e.target.checked,\n                                        docVatFee: value ? docVatFee : 0,\n                                      };\n                                    });\n                                  }\n                                }}\n                              />\n                              <Typography>15% VAT on Transport Fee</Typography>\n                            </Stack>\n                          </TableCell>\n                          <TableCell size=\"small\">\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"docVatFee\"\n                              id=\"docVatFee\"\n                              type=\"text\"\n                              value={\n                                docVatFee ? Number(docVatFee).toFixed(2) : \"\"\n                              }\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                            />\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <>\n                          {documentType?.id &&\n                          documentType?.id === \"vat_invoice\" ? (\n                            <TableRow>\n                              <TableCell size=\"small\">\n                                <Typography>Total VAT</Typography>\n                              </TableCell>\n                              <TableCell size=\"small\" align=\"right\">\n                                {docVatFee ? Number(docVatFee).toFixed(2) : 0}\n                              </TableCell>\n                            </TableRow>\n                          ) : documentType?.id &&\n                            documentType?.id !== \"invoice\" ? (\n                            <TableRow>\n                              <TableCell\n                                size=\"small\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                <Stack direction=\"row\" alignItems={\"center\"}>\n                                  <Checkbox\n                                    checked={invApplyVat}\n                                    onChange={(e) => {\n                                      let value = e.target.checked;\n\n                                      if (value) {\n                                        setDocumentDetails((previous) => {\n                                          return {\n                                            ...previous,\n                                            invApplyVat: e.target.checked,\n                                          };\n                                        });\n\n                                        onHandleApplyVATChange(\n                                          e.target.checked\n                                        );\n                                      } else {\n                                        setDocumentDetails((previous) => {\n                                          return {\n                                            ...previous,\n                                            invApplyVat: e.target.checked,\n                                            docVatFee: value ? docVatFee : 0,\n                                          };\n                                        });\n                                      }\n                                    }}\n                                  />\n\n                                  <Typography>15% VAT</Typography>\n                                </Stack>\n                              </TableCell>\n                              <TableCell size=\"small\" align=\"right\">\n                                {docVatFee ? Number(docVatFee).toFixed(2) : 0}\n                              </TableCell>\n                            </TableRow>\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      )}\n\n                      <TableRow>\n                        <TableCell size=\"small\">\n                          <Typography>Total</Typography>\n                        </TableCell>\n                        <TableCell size=\"small\" align=\"right\">\n                          {(docTotal &&\n                            Number(docTotal) > 0 &&\n                            Number(docTotal).toFixed(2)) ||\n                            0}\n                        </TableCell>\n                      </TableRow>\n\n                      {documentTemplate === \"smart_promote\" ? (\n                        <TableRow>\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Typography>Discount applied</Typography>\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"right\">\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"discountTotalAmount\"\n                              id=\"discountTotalAmount\"\n                              type=\"text\"\n                              value={\n                                discountTotalAmount\n                                  ? Number(discountTotalAmount)\n                                  : \"\"\n                              }\n                              size=\"small\"\n                              fullWidth\n                              onChange={(event) =>\n                                customSmartPromoteDiscount(event.target.value)\n                              }\n                            />\n                          </TableCell>\n                        </TableRow>\n                      ) : (\n                        <></>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {openInvoiceSearchDialog ? (\n        <>\n          <Dialog\n            maxWidth=\"xl\"\n            fullWidth\n            open={openInvoiceSearchDialog}\n            onClose={() => set_openInvoiceSearchDialog(false)}\n          >\n            <DialogTitle>Search invoice/vat invoice number</DialogTitle>\n\n            <br />\n            <DialogContent>\n              <Suspense fallback={<></>}>\n                <InvViewDetails\n                  viewOnly={true}\n                  searchAndChoose={true}\n                  chooseDocument={chooseDocument}\n                />\n              </Suspense>\n            </DialogContent>\n\n            <DialogActions>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => set_openInvoiceSearchDialog(false)}\n              >\n                close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}