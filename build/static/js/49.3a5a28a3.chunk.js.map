{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","components/document/DocumentTableTransport.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","DocumentTableTransport","action","classes","companyDetails","companyIdSelected","documentDetails","setDocumentDetails","deleteParticular","originalDocParticulars","enqueueSnackbar","useSnackbar","dispatch","useDispatch","docParticulars","invVehicleNo","invJobRef","invApplyVat","transportDesc","transportFees","useState","us_newParticular","set_us_newParticular","us_particularDetail","set_us_particularDetail","us_openDialog","set_us_openDialog","us_dlg_type","set_us_dlg_type","us_new_particularDetailList","set_us_new_particularDetailList","us_newParticular_orderNum","set_us_newParticular_orderNum","us_update_id","set_us_update_id","temp_retrieveDefaultValueListRef","useRef","handleCloseDialog","useEffect","current","retrieveDefaultValueList","a","length","particularsDefaultValue","data","documentTemplate","getParticularsDefaultValue","id","newDocParticulars","forEach","particular","defaultParticular","find","defaultPart","push","valueList","prev","undefined","setLoading","uniqueValueList","Set","sort","db","collection","doc","add","orderNum","title","customDetail","selectedValue","then","docRef","newInvParticularsList","isChecked","amount","dynamicSort","invParticulars","catch","err","message","variant","set","merge","newList","handleInputChange","name","i","item","xs","md","label","process","REACT_APP_CUSTOM_SOREFAN_ID","type","size","onChange","event","target","fullWidth","InputProps","className","input","color","onClick","style","width","sx","padding","border","align","whiteSpace","checked","invApplyVatValue","Number","vatFee","invVatFee","docVatFee","onHandleTransportFeeChange","map","index","spacing","direction","alignItems","handleOrderChange","e","handleChkChange","required","labelId","detail","open","onClose","maxWidth","container","paddingTop","addParticularDetail","disabled","newDetail","handleParticularDetailChange","deleteNewParticularDetail","submitChanges"],"mappings":"kJAGA,IAAIA,EAAyBC,EAAQ,IACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAClB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAChDO,EAAcP,EAAQ,GACXG,EAAQE,SAAU,EAAIC,EAAeD,UAAuB,EAAIE,EAAYC,KAAK,OAAQ,CACtGC,EAAG,6EACD,W,kCCTJ,IAAIV,EAAyBC,EAAQ,IACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAClB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAChDO,EAAcP,EAAQ,GACXG,EAAQE,SAAU,EAAIC,EAAeD,UAAuB,EAAIE,EAAYC,KAAK,OAAQ,CACtGC,EAAG,uIACD,S,gcCwBW,SAASC,EAAT,GASX,IARFC,EAQC,EARDA,OACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,eACAC,EAKC,EALDA,kBACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,mBACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,uBASQC,EAAoBC,cAApBD,gBAEFE,EAAWC,cAGfC,EAMER,EANFQ,eACAC,EAKET,EALFS,aACAC,EAIEV,EAJFU,UACAC,EAGEX,EAHFW,YACAC,EAEEZ,EAFFY,cACAC,EACEb,EADFa,cAGF,GAAiDC,mBAAS,IAA1D,qBAAOC,GAAP,MAAyBC,GAAzB,MAEA,GAAuDF,mBAAS,IAAhE,qBAAOG,GAAP,MAA4BC,GAA5B,MAEA,GAA2CJ,oBAAS,GAApD,qBAAOK,GAAP,MAAsBC,GAAtB,MAEA,GAAuCN,mBAAS,IAAhD,qBAAOO,GAAP,MAAoBC,GAApB,MAEA,GACER,mBAAS,IADX,qBAAOS,GAAP,MAAoCC,GAApC,MAGA,GACEV,mBAAS,IADX,qBAAOW,GAAP,MAAkCC,GAAlC,MAGA,GAAyCZ,mBAAS,IAAlD,qBAAOa,GAAP,MAAqBC,GAArB,MAEMC,GAAmCC,mBAEnCC,GAAoB,WACxBX,IAAkB,GAClBE,GAAgB,IAChBM,GAAiB,KAGnBI,qBAAU,WAERH,GAAiCI,YAChC,CAACrC,EAAQO,IAEZ,IAAM+B,GAAwB,uCAAG,kCAAAC,EAAA,2DAChB,WAAXvC,IAA6C,OAAtBO,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBiC,QAAS,GAD7B,mBAEzBC,EAA0B,GACiB,eAA7B,OAAdvC,QAAc,IAAdA,GAAA,UAAAA,EAAgBwC,YAAhB,eAAsBC,kBAHG,gCAIKC,YAA0B,OACxD1C,QADwD,IACxDA,OADwD,EACxDA,EAAgB2C,GADwC,OAExD3C,QAFwD,IAExDA,GAFwD,UAExDA,EAAgBwC,YAFwC,aAExD,EAAsBC,kBANG,OAI3BF,EAJ2B,OASvBK,EAAoB,GACxBvC,EAAuBwC,SAAQ,SAACC,GAC9B,IAAIC,EAAoBR,EAAwBS,MAC9C,SAACC,GAAD,OAAiBA,EAAYN,KAAOG,EAAWH,MAEjDC,EAAkBM,KAAlB,2BACKJ,GADL,IAEEK,UAAS,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAmBI,gBAIlChD,GAAmB,SAACiD,GAClB,OAAO,2BACFA,GADL,IAEE1C,eAAgBkC,OAvBO,2CAAH,qDAlD7B,8CAwGD,8BAAAP,EAAA,8DAC2BgB,IAArBpC,IAAuD,KAArBA,GADxC,oBAEIT,EAAS8C,aAAW,IAEA,QAAhB/B,GAJR,uBAKUgC,EALV,YAKgC,IAAIC,IAAIrC,MAClBsC,OANtB,SAQYC,IACHC,WAAW,WACXC,IAAI3D,GACJ0D,WAAW,eACXE,IAAI,CACHC,SAAUnC,GACVoC,MAAO9C,GACP+C,aAAc7C,GACd8C,cAAe,GACfd,UAAWI,IAEZW,MAAK,SAACC,GACL7D,EAAgB,iCAEhB,IAAI8D,EAAqB,sBAEpB1D,GAFoB,CAGvB,CACEiC,GAAE,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAQxB,GACZ0B,WAAW,EACXN,MAAO9C,GACP+C,aAAc7C,GACd2C,SAAUnC,GACVwB,UAAWI,EACXe,OAAQ,KAIZF,EAAsBX,KAAKc,YAAY,aAMvCpE,EAAmB,2BACdD,GADa,IAEhBsE,eAAgBJ,EAChB1D,eAAgB0D,KAGlBhD,GAAwB,IACxBF,GAAqB,IACrBU,GAA8B,IAC9BF,GAAgC,IAEhCO,KACAzB,EAAS8C,aAAW,OAErBmB,OAAM,SAACC,GACNpE,EAAgB,8CAAD,QAER,OAAHoE,QAAG,IAAHA,OAAA,EAAAA,EAAKC,UAAW,IAElB,CAAEC,QAAS,UAEbpE,EAAS8C,aAAW,OA/D9B,iCAiE+B,WAAhB/B,GAjEf,wBAkEUgC,EAlEV,YAkEgC,IAAIC,IAAI/B,MAClBgC,OAnEtB,UAqEYC,IACHC,WAAW,WACXC,IAAI3D,GACJ0D,WAAW,eACXC,IAAI/B,IACJgD,IACC,CACEd,MAAO9C,GACPkC,UAAWI,GAEb,CAAEuB,OAAO,IAEVZ,MAAK,WACJ5D,EAAgB,mCAEhB,IAAIyE,EAAU,IAEI,OAAdrE,QAAc,IAAdA,OAAA,EAAAA,EAAgB4B,QAAS,GAC3B5B,EAAemC,SAAQ,SAACC,IACR,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYH,MAAOd,GACrBkD,EAAQ7B,KAAR,2BACKJ,GADL,IAEEiB,MAAO9C,GACPkC,UAAWI,KAGbwB,EAAQ7B,KAAR,eAAkBJ,OASxB3C,EAAmB,2BACdD,GADa,IAEhBsE,eAAgBO,EAChBrE,eAAgBqE,KAGlB3D,GAAwB,IACxBF,GAAqB,IACrBQ,GAAgC,IAEhCO,KACAzB,EAAS8C,aAAW,OAErBmB,OAAM,SAACC,GACNpE,EAAgB,8CAAD,QAER,OAAHoE,QAAG,IAAHA,OAAA,EAAAA,EAAKC,UAAW,IAElB,CAAEC,QAAS,UAEbpE,EAAS8C,aAAW,OA5H9B,6CAxGC,sBAoSD,SAAS0B,GAAkBzF,EAAOoD,EAAIsC,GACpC,IAAkB,OAAdvE,QAAc,IAAdA,OAAA,EAAAA,EAAgB4B,QAAS,EAAG,CAE9B,IADA,IAAIyC,EAAU,GACLG,EAAI,EAAGA,GAAC,OAAGxE,QAAH,IAAGA,OAAH,EAAGA,EAAgB4B,QAAQ4C,IACtCxE,EAAewE,GAAGvC,KAAOA,EAC3BoC,EAAQ7B,KAAR,2BAAkBxC,EAAewE,IAAjC,kBAAsCD,EAAO1F,KAE7CwF,EAAQ7B,KAAKxC,EAAewE,IAGhC/E,EAAmB,2BACdD,GADa,IAEhBQ,eAAgBqE,MAyBtB,OAzPAhD,GAAiCI,QAAUC,GA0PzC,qCACE,cAAC,IAAD,CAAM+C,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACET,QAAQ,WACRK,KAAK,eACLK,MACErF,GACAA,IAAsBsF,+sIAAYC,4BAC9B,eACA,iBAEN7C,GAAG,eACH8C,KAAK,OACLlG,MAAOoB,GAAgB,GACvB+E,KAAK,QACLC,SAAU,SAACC,GAAD,OACRzF,EAAmB,2BACdD,GADa,IAEhBS,aAAciF,EAAMC,OAAOtG,UAG/BuG,WAAS,EACTC,WAAY,CAAEC,UAAWjG,EAAQkG,WAIpChG,GACCA,IAAsBsF,+sIAAYC,6BAChC,cAAC,IAAD,CAAML,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACET,QAAQ,WACRK,KAAK,YACLK,MAAM,UACN3C,GAAG,YACH8C,KAAK,OACLlG,MAAOqB,GAAa,GACpB8E,KAAK,QACLC,SAAU,SAACC,GAAD,OACRzF,EAAmB,2BACdD,GADa,IAEhBU,UAAWgF,EAAMC,OAAOtG,UAG5BuG,WAAS,EACTC,WAAY,CAAEC,UAAWjG,EAAQkG,WAKzC,cAAC,IAAD,CAAMd,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACET,QAAQ,YACRsB,MAAM,UACNC,QAAS,WACP7E,IAAkB,GAClBE,GAAgB,OAChBM,GAAiB,KANrB,kCAaF,cAAC,IAAD,CAAMqD,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIe,MAAO,CAAEC,MAAO,QAA3C,SACE,cAAC,IAAD,CAAMD,MAAO,CAAEC,MAAO,QAAtB,SACE,cAAC,IAAD,CAAOC,GAAI,CAAEC,QAAS,OAAQF,MAAO,QAArC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOD,MAAO,CAAEC,MAAO,QAAUG,OAAQ,EAAzC,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEd,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEC,MAAO,KAAMK,WAAY,YAEpC,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEC,MAAO,KAAMK,WAAY,UAHpC,mBAOA,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEC,MAAO,MAHlB,oBAOA,cAAC,IAAD,CACEX,KAAK,QACLU,MAAO,CAAEC,MAAO,MAAOK,WAAY,UAFrC,yBAMA,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEC,MAAO,MAAOK,WAAY,UAHrC,yBAOA,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEC,MAAO,MAAOK,WAAY,UAHrC,8BASJ,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,YAEvB,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,mBAOA,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,cAAC,IAAD,CAAUC,SAAS,MAErB,cAAC,IAAD,CAAWjB,KAAK,QAAQU,MAAO,CAAEM,WAAY,UAA7C,4BAGA,cAAC,IAAD,CACEhB,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,cAAC,IAAD,CACE9B,QAAQ,WACRK,KAAK,gBACLtC,GAAG,gBACH8C,KAAK,OACLlG,MAAOuB,GAAiB,GACxB4E,KAAK,QACLC,SAAU,SAACC,GACTzF,EAAmB,2BACdD,GADa,IAEhBY,cAAe8E,EAAMC,OAAOtG,UAGhCuG,WAAS,MAGb,cAAC,IAAD,CACEJ,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,cAAC,IAAD,CACE9B,QAAQ,WACRK,KAAK,gBACLtC,GAAG,gBACH8C,KAAK,OACLlG,MAAOwB,GAAiB,GACxB2E,KAAK,QACLC,SAAU,SAACC,GAAD,OAjalC,SAAoCgB,EAAkBrH,GACpD,GAAIsH,OAAOtH,IAAU,EAEnB,GAAIqH,EAAkB,CACpB,IAAIE,EACJA,EAAS,IAAOD,OAAOtH,GAEvBY,EAAmB,2BACdD,GADa,IAEhB6G,UAAWD,EACXE,UAAWF,EACX/F,cAAexB,UAGjBY,EAAmB,2BACdD,GADa,IAEhBa,cAAexB,KAkZG0H,CACEpG,EACA+E,EAAMC,OAAOtG,QAGjBuG,WAAS,SAKdpF,IACe,OAAdA,QAAc,IAAdA,OAAA,EAAAA,EAAgB4B,QAAS,IAD1B,OAEC5B,QAFD,IAECA,OAFD,EAECA,EAAgBwG,KAAI,SAACpE,EAAYqE,GAAb,eAClB,eAAC,IAAD,WACE,cAAC,IAAD,CACEzB,KAAK,QACLe,MAAM,SACNL,MAAO,CACLM,WAAY,UAJhB,SAOE,eAAC,IAAD,CACEU,QAAS,EACTC,UAAW,MACXC,WAAY,SAHd,UAKE,cAAC,IAAD,CACEnB,QAAS,WACP3E,GAAgB,UAChBM,IAA2B,OAAVgB,QAAU,IAAVA,OAAA,EAAAA,EAAYH,KAAM,IACnCzB,IAA+B,OAAV4B,QAAU,IAAVA,OAAA,EAAAA,EAAYiB,QAAS,IAC1CrC,IACY,OAAVoB,QAAU,IAAVA,OAAA,EAAAA,EAAYK,YAAa,IAE3BvB,IACY,OAAVkB,QAAU,IAAVA,OAAA,EAAAA,EAAYgB,WAAY,IAE1BxC,IAAkB,IAXtB,SAcE,cAAC,IAAD,CAAU4E,MAAM,cAElB,cAAC,IAAD,CACEA,MAAM,QACNC,QAAS,kBAAM/F,EAAgB,OAAC0C,QAAD,IAACA,OAAD,EAACA,EAAYH,KAF9C,SAIE,cAAC,IAAD,WAIN,cAAC,IAAD,CACE+C,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,cAAC,IAAD,CACE9B,QAAQ,WACRK,KAAK,WACLtC,GAAG,WACH8C,KAAK,SACLlG,OAAiB,OAAVuD,QAAU,IAAVA,OAAA,EAAAA,EAAYgB,WAAY,GAC/B4B,KAAK,QACLC,SAAU,SAACC,GAAD,OA7PtC,SAA2BrG,EAAOoD,GAChC,IAAkB,OAAdjC,QAAc,IAAdA,OAAA,EAAAA,EAAgB4B,QAAS,EAAG,CAE9B,IADA,IAAIyC,EAAU,GACLG,EAAI,EAAGA,GAAC,OAAGxE,QAAH,IAAGA,OAAH,EAAGA,EAAgB4B,QAAQ4C,IACtCxE,EAAewE,GAAGvC,KAAOA,EAC3BoC,EAAQ7B,KAAR,2BAAkBxC,EAAewE,IAAjC,IAAqCpB,SAAU+C,OAAOtH,MAEtDwF,EAAQ7B,KAAKxC,EAAewE,IAIhCH,EAAQtB,KAAKc,YAAY,aAEzBpE,EAAmB,2BACdD,GADa,IAEhBQ,eAAgBqE,MA+OQwC,CACE3B,EAAMC,OAAOtG,MADE,OAEfuD,QAFe,IAEfA,OAFe,EAEfA,EAAYH,KAGhBmD,WAAS,MAGb,cAAC,IAAD,CACEJ,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,cAAC,IAAD,CACEC,SAAmB,OAAV7D,QAAU,IAAVA,OAAA,EAAAA,EAAYuB,aAAa,EAClCsB,SAAU,SAAC6B,GAAD,OAhTtC,SAAyBjI,EAAOoD,GAC9B,IAAkB,OAAdjC,QAAc,IAAdA,OAAA,EAAAA,EAAgB4B,QAAS,EAAG,CAE9B,IADA,IAAIyC,EAAU,GACLG,EAAI,EAAGA,GAAC,OAAGxE,QAAH,IAAGA,OAAH,EAAGA,EAAgB4B,QAAQ4C,IACtCxE,EAAewE,GAAGvC,KAAOA,EAC3BoC,EAAQ7B,KAAR,2BAAkBxC,EAAewE,IAAjC,IAAqCb,UAAW9E,KAEhDwF,EAAQ7B,KAAKxC,EAAewE,IAIhC/E,EAAmB,2BACdD,GADa,IAEhBQ,eAAgBqE,MAoSQ0C,CACED,EAAE3B,OAAOc,QADI,OAEb7D,QAFa,IAEbA,OAFa,EAEbA,EAAYH,SAKpB,cAAC,IAAD,CACE+C,KAAK,QACLU,MAAO,CAAEM,WAAY,UAFvB,SAIE,cAAC,IAAD,CACE9B,QAAQ,WACRK,KAAK,QACLtC,GAAG,QACH8C,KAAK,OACLlG,OAAiB,OAAVuD,QAAU,IAAVA,OAAA,EAAAA,EAAYiB,QAAS,GAC5B2B,KAAK,QACLC,SAAU,SAACC,GAAD,OACRZ,GACEY,EAAMC,OAAOtG,MADE,OAEfuD,QAFe,IAEfA,OAFe,EAEfA,EAAYH,GACZ,UAGJmD,WAAS,MAGb,cAAC,IAAD,CACEJ,KAAK,QACLe,MAAM,SACNL,MAAO,CAAEM,WAAY,UAHvB,SAKE,eAAC,IAAD,CAAOU,QAAS,EAAGC,UAAU,MAA7B,UACE,cAAC,IAAD,CACEzC,QAAQ,WACRK,KAAK,eACLtC,GAAG,eACH8C,KAAK,OACLlG,OAAiB,OAAVuD,QAAU,IAAVA,OAAA,EAAAA,EAAYkB,eAAgB,GACnC0B,KAAK,QACLC,SAAU,SAACC,GAAD,OACRZ,GACEY,EAAMC,OAAOtG,MADE,OAEfuD,QAFe,IAEfA,OAFe,EAEfA,EAAYH,GACZ,iBAGJmD,WAAS,KAGA,OAAVhD,QAAU,IAAVA,OAAA,EAAAA,EAAYK,aACD,OAAVL,QAAU,IAAVA,GAAA,UAAAA,EAAYK,iBAAZ,eAAuBb,QAAS,GAC9B,eAAC,IAAD,CACEwD,WAAS,EACTlB,QAAQ,WACRc,KAAK,QAHP,UAKE,cAAC,IAAD,CACE/C,GAAG,0BACH+E,UAAQ,EAFV,wCAMA,eAAC,IAAD,CACEpC,MAAM,6BACNqC,QAAQ,0BACRpI,OAAiB,OAAVuD,QAAU,IAAVA,OAAA,EAAAA,EAAYmB,gBAAiB,GACpC0B,SAAU,SAACC,GAAD,OACRZ,GACEY,EAAMC,OAAOtG,MADE,OAEfuD,QAFe,IAEfA,OAFe,EAEfA,EAAYH,GACZ,kBARN,UAYE,cAAC,IAAD,CAAUpD,MAAO,GAAjB,4CAGW,OAAVuD,QAAU,IAAVA,OAAA,EAAAA,EAAYK,aAAZ,OACCL,QADD,IACCA,GADD,UACCA,EAAYK,iBADb,aACC,EAAuB+D,KACrB,SAACU,EAAQT,GAAT,OACE,cAAC,IAAD,CACE5H,MAAOqI,EADT,SAIGA,GAFIT,kBAYzB,cAAC,IAAD,CAAWzB,KAAK,QAAQe,MAAM,aAlKjBU,uBA6KhC9F,GACC,mCACE,eAAC,IAAD,CACEwG,KAAMxG,GACNyG,QAAS7F,GACT8F,SAAU,KACVjC,WAAS,EAJX,UAME,cAAC,IAAD,UACmB,QAAhBvE,GACG,qBACgB,WAAhBA,GACA,oBACA,KAEN,eAAC,IAAD,WACE,uBACA,eAAC,IAAD,CAAMyG,WAAS,EAACZ,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMjC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACEC,MAAM,eACNV,QAAQ,WACRK,KAAK,wBACLtC,GAAG,wBACH8C,KAAK,OACLlG,MAAOoC,IAA6B,GACpC+D,KAAK,QACLC,SAAU,SAACC,GACThE,GAA8BiF,OAAOjB,EAAMC,OAAOtG,SAEpDuG,WAAS,MAGb,cAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACEC,MAAM,iBACNV,QAAQ,WACRK,KAAK,gBACLtC,GAAG,gBACH8C,KAAK,OACLlG,MAAO0B,GACPyE,KAAK,QACLC,SAAU,SAACC,GAAD,OACR1E,GAAqB0E,EAAMC,OAAOtG,QAEpCuG,WAAS,MAGb,cAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CACEgC,UAAW,MACXD,QAAS,EACThB,MAAO,CAAE6B,WAAY,GAHvB,UAKE,cAAC,IAAD,CACE3C,MAAM,yBACNV,QAAQ,WACRK,KAAK,mBACLtC,GAAG,mBACH8C,KAAK,OACLlG,MAAO4B,GACPuE,KAAK,QACLC,SAAU,SAACC,GAAD,OACRxE,GAAwBwE,EAAMC,OAAOtG,QAEvCuG,WAAS,IAEX,cAAC,IAAD,CACElB,QAAQ,YACRsB,MAAM,UACNC,QAAS,kBA3gB/B,WACE,GAAIhF,IAA+C,KAAxBA,GAA4B,CACrD,IAAI4D,EAAO,YAAOtD,IAClBsD,EAAQ7B,KAAK/B,IACbO,GAAgCqD,GAEhC3D,GAAwB,KAqgBS8G,IACfC,UAAWhH,GACXuE,KAAK,QALP,oBAUF,uBAEA,eAAC,IAAD,CAAOc,OAAQ,EAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWd,KAAK,QAAhB,oCAGA,cAAC,IAAD,CAAWA,KAAK,QAAQe,MAAM,SAA9B,yBAKJ,cAAC,IAAD,iBACGhF,SADH,IACGA,QADH,EACGA,GAA6ByF,KAC5B,SAACkB,EAAWjB,GAAZ,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWzB,KAAK,QAAhB,SACE,cAAC,IAAD,CACEd,QAAQ,WACRK,KAAI,0BAAqBkC,GACzBxE,GAAE,0BAAqBwE,GACvB1B,KAAK,OACLlG,MAAO6I,EACP1C,KAAK,QACLC,SAAU,SAACC,GAAD,OAjiB1C,SAAsCuB,EAAO5H,GAC3C,IAA+B,OAA3BkC,SAA2B,IAA3BA,QAAA,EAAAA,GAA6Ba,QAAS,EAAG,CAE3C,IADA,IAAIyC,EAAU,GACLG,EAAI,EAAGA,GAAC,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAA6Ba,QAAQ4C,IACnDA,IAAMiC,EACRpC,EAAQ7B,KAAK3D,GAEbwF,EAAQ7B,KAAKzB,GAA4ByD,IAG7CxD,GAAgCqD,IAwhBFsD,CACElB,EACAvB,EAAMC,OAAOtG,YAKrB,cAAC,IAAD,CAAWmG,KAAK,QAAQe,MAAM,SAA9B,SACE,cAAC,IAAD,CACE7B,QAAQ,YACRsB,MAAM,QACNC,QAAS,kBA/hBzC,SAAmCgB,GACjC,IAA+B,OAA3B1F,SAA2B,IAA3BA,QAAA,EAAAA,GAA6Ba,QAAS,EACxC,GAA4C,KAAb,OAA3Bb,SAA2B,IAA3BA,QAAA,EAAAA,GAA6Ba,QAC/BZ,GAAgC,QAC3B,CAEL,IADA,IAAIqD,EAAU,GACLG,EAAI,EAAGA,GAAC,OAAGzD,SAAH,IAAGA,QAAH,EAAGA,GAA6Ba,QAAQ4C,IACnDA,IAAMiC,GACRpC,EAAQ7B,KAAKzB,GAA4ByD,IAG7CxD,GAAgCqD,IAqhBJuD,CAA0BnB,IAJ9B,wBAlBWA,sBAqC/B,eAAC,IAAD,WACE,cAAC,IAAD,CACEvC,QAAQ,YACRsB,MAAM,UACNC,QAAS,kBArzBtB,2CAqzB4BoC,IAHjB,SAKmB,QAAhBhH,GACG,uBACA,sBAEN,cAAC,IAAD,CACEqD,QAAQ,YACRsB,MAAM,QACNC,QAAS,kBAAMlE,MAHjB,4BAWN","file":"static/js/49.3a5a28a3.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import {\n  Button,\n  Card,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@mui/material\";\nimport Scrollbar from \"../Scrollbar\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from \"react-redux\";\nimport db from \"../../firebase\";\nimport {\n  dynamicSort,\n  getParticularsDefaultValue,\n} from \"../core-functions/SelectionCoreFunctions\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nexport default function DocumentTableTransport({\n  action,\n  classes,\n  companyDetails,\n  companyIdSelected,\n  documentDetails,\n  setDocumentDetails,\n  deleteParticular,\n  originalDocParticulars,\n}) {\n  /**\n   * check if company chosen require old or new table template\n   * template may alter depending on action -> add or update\n   * if action === add -> check if company's MRATemplateFlag is true to apply new template or not\n   * if action === update -> check if MRATemplateApplied to verify if the updated invoice has been saved with new template\n   */\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const {\n    docParticulars,\n    invVehicleNo,\n    invJobRef,\n    invApplyVat,\n    transportDesc,\n    transportFees,\n  } = documentDetails;\n\n  const [us_newParticular, set_us_newParticular] = useState(\"\");\n\n  const [us_particularDetail, set_us_particularDetail] = useState(\"\");\n\n  const [us_openDialog, set_us_openDialog] = useState(false);\n\n  const [us_dlg_type, set_us_dlg_type] = useState(\"\");\n\n  const [us_new_particularDetailList, set_us_new_particularDetailList] =\n    useState([]);\n\n  const [us_newParticular_orderNum, set_us_newParticular_orderNum] =\n    useState(\"\");\n\n  const [us_update_id, set_us_update_id] = useState(\"\");\n\n  const temp_retrieveDefaultValueListRef = useRef();\n\n  const handleCloseDialog = () => {\n    set_us_openDialog(false);\n    set_us_dlg_type(\"\");\n    set_us_update_id(\"\");\n  };\n\n  useEffect(() => {\n    // get default value list for transport template only\n    temp_retrieveDefaultValueListRef.current();\n  }, [action, originalDocParticulars]);\n\n  const retrieveDefaultValueList = async () => {\n    if (action === \"update\" && originalDocParticulars?.length > 0) {\n      let particularsDefaultValue = [];\n      if (companyDetails?.data?.documentTemplate === \"transport\") {\n        particularsDefaultValue = await getParticularsDefaultValue(\n          companyDetails?.id,\n          companyDetails?.data?.documentTemplate\n        );\n\n        let newDocParticulars = [];\n        originalDocParticulars.forEach((particular) => {\n          let defaultParticular = particularsDefaultValue.find(\n            (defaultPart) => defaultPart.id === particular.id\n          );\n          newDocParticulars.push({\n            ...particular,\n            valueList: defaultParticular?.valueList,\n          });\n        });\n\n        setDocumentDetails((prev) => {\n          return {\n            ...prev,\n            docParticulars: newDocParticulars,\n          };\n        });\n      }\n    }\n  };\n\n  temp_retrieveDefaultValueListRef.current = retrieveDefaultValueList;\n\n  function onHandleTransportFeeChange(invApplyVatValue, value) {\n    if (Number(value) >= 0) {\n      // calculate vat on transport if vat percentage is not zero\n      if (invApplyVatValue) {\n        let vatFee = 0;\n        vatFee = 0.15 * Number(value);\n\n        setDocumentDetails({\n          ...documentDetails,\n          invVatFee: vatFee,\n          docVatFee: vatFee,\n          transportFees: value,\n        });\n      } else {\n        setDocumentDetails({\n          ...documentDetails,\n          transportFees: value,\n        });\n      }\n    }\n  }\n\n  async function submitChanges() {\n    if (us_newParticular !== undefined && us_newParticular !== \"\") {\n      dispatch(setLoading(true));\n\n      if (us_dlg_type === \"add\") {\n        let uniqueValueList = [...new Set(us_particularDetail)];\n        uniqueValueList.sort();\n\n        await db\n          .collection(\"company\")\n          .doc(companyIdSelected)\n          .collection(\"particulars\")\n          .add({\n            orderNum: us_newParticular_orderNum,\n            title: us_newParticular,\n            customDetail: us_particularDetail,\n            selectedValue: \"\",\n            valueList: uniqueValueList,\n          })\n          .then((docRef) => {\n            enqueueSnackbar(\"Particular added successfully\");\n\n            let newInvParticularsList = [\n              // ...invDetails?.invParticulars,\n              ...docParticulars,\n              {\n                id: docRef?.id,\n                isChecked: false,\n                title: us_newParticular,\n                customDetail: us_particularDetail,\n                orderNum: us_newParticular_orderNum,\n                valueList: uniqueValueList,\n                amount: 0,\n              },\n            ];\n\n            newInvParticularsList.sort(dynamicSort(\"orderNum\"));\n\n            /* setInvDetails({\n              ...invDetails,\n              invParticulars: newInvParticularsList,\n            }); */\n            setDocumentDetails({\n              ...documentDetails,\n              invParticulars: newInvParticularsList,\n              docParticulars: newInvParticularsList,\n            });\n\n            set_us_particularDetail(\"\");\n            set_us_newParticular(\"\");\n            set_us_newParticular_orderNum(\"\");\n            set_us_new_particularDetailList([]);\n\n            handleCloseDialog();\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while adding new particular: ${\n                err?.message || \"\"\n              }`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      } else if (us_dlg_type === \"update\") {\n        let uniqueValueList = [...new Set(us_new_particularDetailList)];\n        uniqueValueList.sort();\n\n        await db\n          .collection(\"company\")\n          .doc(companyIdSelected)\n          .collection(\"particulars\")\n          .doc(us_update_id)\n          .set(\n            {\n              title: us_newParticular,\n              valueList: uniqueValueList,\n            },\n            { merge: true }\n          )\n          .then(() => {\n            enqueueSnackbar(\"Particular updated successfully\");\n\n            let newList = [];\n            // if (invDetails?.invParticulars?.length > 0) {\n            if (docParticulars?.length > 0) {\n              docParticulars.forEach((particular) => {\n                if (particular?.id === us_update_id) {\n                  newList.push({\n                    ...particular,\n                    title: us_newParticular,\n                    valueList: uniqueValueList,\n                  });\n                } else {\n                  newList.push({ ...particular });\n                }\n              });\n            }\n\n            /* setInvDetails({\n              ...invDetails,\n              invParticulars: newList,\n            }); */\n            setDocumentDetails({\n              ...documentDetails,\n              invParticulars: newList,\n              docParticulars: newList,\n            });\n\n            set_us_particularDetail(\"\");\n            set_us_newParticular(\"\");\n            set_us_new_particularDetailList([]);\n\n            handleCloseDialog();\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while adding new particular: ${\n                err?.message || \"\"\n              }`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    }\n  }\n\n  function addParticularDetail() {\n    if (us_particularDetail && us_particularDetail !== \"\") {\n      let newList = [...us_new_particularDetailList];\n      newList.push(us_particularDetail);\n      set_us_new_particularDetailList(newList);\n\n      set_us_particularDetail(\"\");\n    }\n  }\n\n  function handleParticularDetailChange(index, value) {\n    if (us_new_particularDetailList?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < us_new_particularDetailList?.length; i++) {\n        if (i === index) {\n          newList.push(value);\n        } else {\n          newList.push(us_new_particularDetailList[i]);\n        }\n      }\n      set_us_new_particularDetailList(newList);\n    }\n  }\n\n  function deleteNewParticularDetail(index) {\n    if (us_new_particularDetailList?.length > 0) {\n      if (us_new_particularDetailList?.length === 1) {\n        set_us_new_particularDetailList([]);\n      } else {\n        let newList = [];\n        for (var i = 0; i < us_new_particularDetailList?.length; i++) {\n          if (i !== index) {\n            newList.push(us_new_particularDetailList[i]);\n          }\n        }\n        set_us_new_particularDetailList(newList);\n      }\n    }\n  }\n\n  function handleChkChange(value, id) {\n    if (docParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < docParticulars?.length; i++) {\n        if (docParticulars[i].id === id) {\n          newList.push({ ...docParticulars[i], isChecked: value });\n        } else {\n          newList.push(docParticulars[i]);\n        }\n      }\n\n      setDocumentDetails({\n        ...documentDetails,\n        docParticulars: newList,\n      });\n    }\n  }\n\n  function handleInputChange(value, id, name) {\n    if (docParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < docParticulars?.length; i++) {\n        if (docParticulars[i].id === id) {\n          newList.push({ ...docParticulars[i], [name]: value });\n        } else {\n          newList.push(docParticulars[i]);\n        }\n      }\n      setDocumentDetails({\n        ...documentDetails,\n        docParticulars: newList,\n      });\n    }\n  }\n\n  function handleOrderChange(value, id) {\n    if (docParticulars?.length > 0) {\n      let newList = [];\n      for (var i = 0; i < docParticulars?.length; i++) {\n        if (docParticulars[i].id === id) {\n          newList.push({ ...docParticulars[i], orderNum: Number(value) });\n        } else {\n          newList.push(docParticulars[i]);\n        }\n      }\n\n      newList.sort(dynamicSort(\"orderNum\"));\n\n      setDocumentDetails({\n        ...documentDetails,\n        docParticulars: newList,\n      });\n    }\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={4}>\n        <TextField\n          variant=\"outlined\"\n          name=\"invVehicleNo\"\n          label={\n            companyIdSelected &&\n            companyIdSelected === process.env.REACT_APP_CUSTOM_SOREFAN_ID\n              ? \"Lorry number\"\n              : \"Vehicle number\"\n          }\n          id=\"invVehicleNo\"\n          type=\"text\"\n          value={invVehicleNo || \"\"}\n          size=\"small\"\n          onChange={(event) =>\n            setDocumentDetails({\n              ...documentDetails,\n              invVehicleNo: event.target.value,\n            })\n          }\n          fullWidth\n          InputProps={{ className: classes.input }}\n        />\n      </Grid>\n\n      {companyIdSelected &&\n        companyIdSelected !== process.env.REACT_APP_CUSTOM_SOREFAN_ID && (\n          <Grid item xs={12} md={4}>\n            <TextField\n              variant=\"outlined\"\n              name=\"invJobRef\"\n              label=\"Job Ref\"\n              id=\"invJobRef\"\n              type=\"text\"\n              value={invJobRef || \"\"}\n              size=\"small\"\n              onChange={(event) =>\n                setDocumentDetails({\n                  ...documentDetails,\n                  invJobRef: event.target.value,\n                })\n              }\n              fullWidth\n              InputProps={{ className: classes.input }}\n            />\n          </Grid>\n        )}\n\n      <Grid item xs={12} md={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            set_us_openDialog(true);\n            set_us_dlg_type(\"add\");\n            set_us_update_id(\"\");\n          }}\n        >\n          Add new particular\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Card style={{ width: \"100%\" }}>\n          <Stack sx={{ padding: \"20px\", width: \"100%\" }}>\n            <Scrollbar>\n              <TableContainer>\n                <Table style={{ width: \"100%\" }} border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\", whiteSpace: \"nowrap\" }}\n                      />\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Order\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"5%\" }}\n                      >\n                        Select\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        style={{ width: \"20%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Particulars\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"45%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Description\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ width: \"20%\", whiteSpace: \"nowrap\" }}\n                      >\n                        Amount (Rs)\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      />\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        Fixed\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        <Checkbox checked={true} />\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Transport fees\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          name=\"transportDesc\"\n                          id=\"transportDesc\"\n                          type=\"text\"\n                          value={transportDesc || \"\"}\n                          size=\"small\"\n                          onChange={(event) => {\n                            setDocumentDetails({\n                              ...documentDetails,\n                              transportDesc: event.target.value,\n                            });\n                          }}\n                          fullWidth\n                        />\n                      </TableCell>\n                      <TableCell\n                        size=\"small\"\n                        align=\"center\"\n                        style={{ whiteSpace: \"nowrap\" }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          name=\"transportFees\"\n                          id=\"transportFees\"\n                          type=\"text\"\n                          value={transportFees || \"\"}\n                          size=\"small\"\n                          onChange={(event) =>\n                            onHandleTransportFeeChange(\n                              invApplyVat,\n                              event.target.value\n                            )\n                          }\n                          fullWidth\n                        />\n                      </TableCell>\n                    </TableRow>\n\n                    {docParticulars &&\n                      docParticulars?.length > 0 &&\n                      docParticulars?.map((particular, index) => (\n                        <TableRow key={index}>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <Stack\n                              spacing={1}\n                              direction={\"row\"}\n                              alignItems={\"center\"}\n                            >\n                              <IconButton\n                                onClick={() => {\n                                  set_us_dlg_type(\"update\");\n                                  set_us_update_id(particular?.id || \"\");\n                                  set_us_newParticular(particular?.title || \"\");\n                                  set_us_new_particularDetailList(\n                                    particular?.valueList || []\n                                  );\n                                  set_us_newParticular_orderNum(\n                                    particular?.orderNum || \"\"\n                                  );\n                                  set_us_openDialog(true);\n                                }}\n                              >\n                                <EditIcon color=\"primary\" />\n                              </IconButton>\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => deleteParticular(particular?.id)}\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            </Stack>\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"orderNum\"\n                              id=\"orderNum\"\n                              type=\"number\"\n                              value={particular?.orderNum || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleOrderChange(\n                                  event.target.value,\n                                  particular?.id\n                                )\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Checkbox\n                              checked={particular?.isChecked || false}\n                              onChange={(e) =>\n                                handleChkChange(\n                                  e.target.checked,\n                                  particular?.id\n                                )\n                              }\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <TextField\n                              variant=\"outlined\"\n                              name=\"title\"\n                              id=\"title\"\n                              type=\"text\"\n                              value={particular?.title || \"\"}\n                              size=\"small\"\n                              onChange={(event) =>\n                                handleInputChange(\n                                  event.target.value,\n                                  particular?.id,\n                                  \"title\"\n                                )\n                              }\n                              fullWidth\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <Stack spacing={3} direction=\"row\">\n                              <TextField\n                                variant=\"outlined\"\n                                name=\"customDetail\"\n                                id=\"customDetail\"\n                                type=\"text\"\n                                value={particular?.customDetail || \"\"}\n                                size=\"small\"\n                                onChange={(event) =>\n                                  handleInputChange(\n                                    event.target.value,\n                                    particular?.id,\n                                    \"customDetail\"\n                                  )\n                                }\n                                fullWidth\n                              />\n\n                              {particular?.valueList &&\n                                particular?.valueList?.length > 0 && (\n                                  <FormControl\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                  >\n                                    <InputLabel\n                                      id=\"particular-detail-label\"\n                                      required\n                                    >\n                                      Previous particular detail\n                                    </InputLabel>\n                                    <Select\n                                      label=\"Previous particular detail\"\n                                      labelId=\"particular-detail-label\"\n                                      value={particular?.selectedValue || \"\"}\n                                      onChange={(event) =>\n                                        handleInputChange(\n                                          event.target.value,\n                                          particular?.id,\n                                          \"selectedValue\"\n                                        )\n                                      }\n                                    >\n                                      <MenuItem value={\"\"}>\n                                        Please choose previous detail\n                                      </MenuItem>\n                                      {particular?.valueList &&\n                                        particular?.valueList?.map(\n                                          (detail, index) => (\n                                            <MenuItem\n                                              value={detail}\n                                              key={index}\n                                            >\n                                              {detail}\n                                            </MenuItem>\n                                          )\n                                        )}\n                                    </Select>\n                                  </FormControl>\n                                )}\n                            </Stack>\n                          </TableCell>\n\n                          <TableCell size=\"small\" align=\"center\"></TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n          </Stack>\n        </Card>\n      </Grid>\n\n      {us_openDialog ? (\n        <>\n          <Dialog\n            open={us_openDialog}\n            onClose={handleCloseDialog}\n            maxWidth={\"sm\"}\n            fullWidth\n          >\n            <DialogTitle>\n              {us_dlg_type === \"add\"\n                ? \"Add new particular\"\n                : us_dlg_type === \"update\"\n                ? \"Update particular\"\n                : \"\"}\n            </DialogTitle>\n            <DialogContent>\n              <br />\n              <Grid container spacing={3}>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    label=\"Order number\"\n                    variant=\"outlined\"\n                    name=\"newParticularOrderNum\"\n                    id=\"newParticularOrderNum\"\n                    type=\"text\"\n                    value={us_newParticular_orderNum || \"\"}\n                    size=\"small\"\n                    onChange={(event) => {\n                      set_us_newParticular_orderNum(Number(event.target.value));\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TextField\n                    label=\"New particular\"\n                    variant=\"outlined\"\n                    name=\"newParticular\"\n                    id=\"newParticular\"\n                    type=\"text\"\n                    value={us_newParticular}\n                    size=\"small\"\n                    onChange={(event) =>\n                      set_us_newParticular(event.target.value)\n                    }\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} md={12}>\n                  <TableContainer>\n                    <Stack\n                      direction={\"row\"}\n                      spacing={3}\n                      style={{ paddingTop: 5 }}\n                    >\n                      <TextField\n                        label=\"Particular description\"\n                        variant=\"outlined\"\n                        name=\"particularDetail\"\n                        id=\"particularDetail\"\n                        type=\"text\"\n                        value={us_particularDetail}\n                        size=\"small\"\n                        onChange={(event) =>\n                          set_us_particularDetail(event.target.value)\n                        }\n                        fullWidth\n                      />\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => addParticularDetail()}\n                        disabled={!us_particularDetail}\n                        size=\"small\"\n                      >\n                        add\n                      </Button>\n                    </Stack>\n                    <br />\n\n                    <Table border={1}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell size=\"small\">\n                            Particular description\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"center\">\n                            Action\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {us_new_particularDetailList?.map(\n                          (newDetail, index) => (\n                            <TableRow key={index}>\n                              <TableCell size=\"small\">\n                                <TextField\n                                  variant=\"outlined\"\n                                  name={`particularDetail${index}`}\n                                  id={`particularDetail${index}`}\n                                  type=\"text\"\n                                  value={newDetail}\n                                  size=\"small\"\n                                  onChange={(event) =>\n                                    handleParticularDetailChange(\n                                      index,\n                                      event.target.value\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell size=\"small\" align=\"center\">\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"error\"\n                                  onClick={() =>\n                                    deleteNewParticularDetail(index)\n                                  }\n                                >\n                                  delete\n                                </Button>\n                              </TableCell>\n                            </TableRow>\n                          )\n                        )}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => submitChanges()}\n              >\n                {us_dlg_type === \"add\"\n                  ? \"apply new particular\"\n                  : \"update particular\"}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => handleCloseDialog()}\n              >\n                cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}