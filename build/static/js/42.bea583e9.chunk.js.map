{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","components/invoice-view-details/InvViewDetails.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","getAlertUtilityClass","slot","generateUtilityClass","_CloseIcon","alertClasses","generateUtilityClasses","createSvgIcon","_jsx","_excluded","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","display","padding","light","icon","main","border","fontWeight","fontWeightMedium","dark","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","Alert","React","inProps","ref","useThemeProps","children","className","closeText","iconMapping","onClose","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","elevation","clsx","IconButton","size","title","onClick","CloseIcon","CCDialog","lazy","InvViewDetails","viewOnly","searchAndChoose","chooseDocument","useState","navigator","onLine","isOnline","setIsOnline","user","useAuth","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","selectDocument","documentType","companyIdSelected","companyDetails","clientDocumentObjectSelected","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","logo","setLogo","sigImage","setSigImage","us_documentlist","set_us_documentlist","temp_logo_image_ref","useRef","temp_signature_image_ref","temp_fetch_document_ref","openUpdateDialog","setOpenUpdateDialog","us_open_convertTo_dialog","set_us_open_convertTo_dialog","conversionValue","set_conversionValue","selectedProformaDoc","set_selectedProformaDoc","selectedProformaFilter","set_selectedProformaFilter","open","type","us_openCCDialog","set_us_openCCDialog","fetchDocument","a","undefined","id","setLoading","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","doc","where","firebase","firestore","Timestamp","fromDate","get","then","querySnapshot","docArray","docs","length","forEach","document","data","clientId","deleted","valid","isProformaConverted","push","checked","catch","err","imageUrl","toDataUrl","logoImage","sigUrl","url","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","console","log","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","current","handleCloseUpdateDialog","isUpdateDone","setUpdateDocumentData","invoiceDocumentData","createdFromProfroma","previousProformaDocId","documentDocRef","runTransaction","transaction","sfDoc","exists","update","documentIndex","newDocumentNumber","Number","documentNumber","toString","documentTitle","find","newDocumentData","docString","docTitle","docType","docDate","convertedByUserId","convertedByUserEmail","email","convertedByUserTime","process","REACT_APP_CUSTOM_SMART_PROMOTE_ID","docParticulars","row","inventoryItemData","itemData","allInventoryItemTransactions","newAllInventoryItemTransactions","proformaIndex","findIndex","set","merge","applyPayment","conversionDocId","conversionDocTitle","deleteDocument","documentId","deletedCollectionName","allInventoryItemTransactionsData","isDocFoundIndex","totalQtySold","qtySold","totalQtyRemaining","qtyRemaining","newTotalAmountReceivedWithoutVAT","totalAmountReceivedWithoutVAT","newTotalAmountReceivedWithVAT","totalAmountReceivedWithVAT","OldQtySold","itemQtySold","rowDiscountedAmount","rowAmount","rowAmountWithVAT","toFixed","add","deletedByUserId","deletedByUserEmail","deletedByUserTime","delete","uploadToMRA","invoiceData","transactionType","vatOrNonVatRegistered","docIssuedDateTime","invoiceTypeDesc","invoiceRefIdentifier","checkedInvoices","functions","httpsCallable","submitMultipleInvoicesToMra","JSON","stringify","invoices","brn","filter","errorFound","applyVoid","voidBool","invoiceId","isVoid","invoiceSelected","paymentType","paymentCounterDocRef","paymentCounter","executePayment","paymentNumberDoc","remainingAmount","paymentAmount","paymentStatus","docTotal","batch","paymentdocRefId","paymentDocRef","invoiceDocRef","invoiceList","paymentDate","moment","format","dateCreated","docRemainingPaymentAmt","attachedPaymentNumber","paymentNumber","paymentNumberString","paymentRemainingAmount","commit","item","xs","md","style","width","direction","spacing","label","onChange","newValue","renderInput","params","inputFormat","displayMRAFiscalisationButton","submitMultipleInvoiceToMRA","disabled","sendEmail","invoice","container","ListboxProps","maxHeight","options","e","reason","getOptionLabel","option","fullWidth","MRATemplateFlag","align","whiteSpace","REACT_APP_CUSTOM_ASHLEY_ID","REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS","includes","documentTemplate","map","index","displayBool","docQuoteNumber","docPurchaseOrderNumber","docPurchaseOrderNumbe","background","event","newDocumentlist","target","permissions","deletePermission","assignedCompanyId","documentTypeId","documentTypeTitle","keywords","updatePermission","toDate","particular","customDetail","invJobRef","emailAlreadySent","invoiceContent","justifyContent","handleViewDownload","viewPermission","mraCompliantStatus","mraCompliantMessage","docVatFee","displayType","thousandSeparator","docSubTotal","maxWidth","control","confirmConversion","fallback","close","sendMultipleEmail","ccField","serviceKey","templateKey","selectedInvoices","promises","content","companyChosenObj","clientChosenObj","invDetails","docBillTo","docShipTo","docTermsAndCondition","invDate","invParticulars","invTotal","invoiceString","invVatFee","invSubTotal","docBLNumber","docSupplier","docContainerNumber","docPackages","docDescription","docGrossWeight","docVolume","docPortOfLoading","docETA","docVesselName","docRoE","docPlaceOfLanding","discountTotalAmount","discountedTotalAmount","invStorageFee","invScanningFee","invGatePassFee","invVehicleNo","transportFees","transportDesc","invApplyVat","docShipper","docMarkNos","docCommodity","docHbl","docDepot","qrCodeUri","mraFinalisationData","fiscalisedInvoices","qrCode","dataUri","documentPdfComponent","customTemplate1","newTemplate","MRATemplateApplied","pdf","toBlob","blobPDF","base64String","sFormat","blobResponse","all","allPdfs","invoiceNumberList","invoiceNumberSubjectList","invoice_number_customerName","customerName","particulars","customerParticular","toEmail","email2","email3","email4","emailParameters","from_name","to_name","from_email","to_email","reply_to","fileName","invoiceNumber","subject","invoice_number","seperatedByCommas","newCC","i","emailjs","send","promisesEmailSent","resolveEmailSent","text"],"mappings":"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","file":"static/js/42.bea583e9.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import { Suspense, useEffect, useRef, useState, lazy } from \"react\";\n// @mui\nimport {\n  Alert,\n  Autocomplete,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db, { functions } from \"../../firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport firebase from \"firebase/compat\";\nimport moment from \"moment\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { DatePicker } from \"@mui/lab\";\nimport {\n  selectDocument,\n  setUpdateDocumentData,\n} from \"../../features/documentSlice\";\nimport DocumentInputDetails from \"../document/DocumentInputDetails\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Iconify from \"../Iconify\";\nimport CurrencyFormat from \"react-currency-format\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { handleViewDownload } from \"../core-functions/SelectionCoreFunctions\";\nimport emailjs from \"@emailjs/browser\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport InvTransportTemplatePdf from \"../invoice-pdf/transport-custom/InvTransportTemplatePdf\";\nimport InvPdf from \"../invoice-pdf/InvPdf\";\n\nconst CCDialog = lazy(() => import(\"./CCDialog\"));\n\n/* const PdfDialog = lazy(() => import(\"./pdf-dialog/PdfDialog\")); */\n\n// ----------------------------------------------------------------------\n\nexport default function InvViewDetails({\n  viewOnly,\n  searchAndChoose,\n  chooseDocument,\n}) {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  const { user } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const {\n    documentType,\n    companyIdSelected,\n    companyDetails,\n    clientDocumentObjectSelected,\n  } = useSelector(selectDocument);\n\n  /*   const [openPdf, set_openPdf] = useState(false); */\n\n  /*   const [pdfContent, set_pdfContent] = useState(null);\n\n  const [downloadPdf, set_downloadPdf] = useState(false); */\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [logo, setLogo] = useState(\"\");\n\n  const [sigImage, setSigImage] = useState(\"\");\n\n  const [us_documentlist, set_us_documentlist] = useState([]);\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  const temp_fetch_document_ref = useRef();\n\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n\n  const [us_open_convertTo_dialog, set_us_open_convertTo_dialog] =\n    useState(false);\n\n  const [conversionValue, set_conversionValue] = useState(\"vat_invoice\");\n\n  const [selectedProformaDoc, set_selectedProformaDoc] = useState(null);\n\n  const [selectedProformaFilter, set_selectedProformaFilter] = useState(null);\n\n  const [us_openCCDialog, set_us_openCCDialog] = useState({\n    open: false,\n    type: \"\",\n  });\n\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  useEffect(() => {\n    // convert logo image to adaptable react-pdf image\n    temp_logo_image_ref.current();\n    // convert signature image to adaptable react-pdf image\n    temp_signature_image_ref.current();\n  }, [companyDetails]);\n\n  useEffect(() => {\n    temp_fetch_document_ref.current();\n  }, [\n    documentType,\n    us_fromDate,\n    us_ToDate,\n    companyDetails,\n    clientDocumentObjectSelected,\n  ]);\n\n  async function fetchDocument() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\" &&\n      documentType?.id &&\n      documentType?.id !== \"\"\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else if (\n        companyDetails !== undefined &&\n        clientDocumentObjectSelected !== undefined\n      ) {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(documentType?.id)\n          .where(\n            \"docDate\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"docDate\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let docArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((document) => {\n                // filter by client selected\n                if (\n                  document?.data()?.clientId ===\n                    clientDocumentObjectSelected?.id &&\n                  !document?.data()?.deleted\n                ) {\n                  let valid = true;\n                  if (\n                    documentType?.id === \"proforma\" &&\n                    document?.data()?.isProformaConverted\n                  ) {\n                    valid = false;\n                  }\n\n                  if (valid) {\n                    docArray.push({\n                      id: document?.id,\n                      data: document?.data(),\n                      checked: false,\n                    });\n                  }\n                }\n              });\n              set_us_documentlist(docArray);\n            } else {\n              set_us_documentlist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching ${documentType?.title} documents: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_document_ref.current = fetchDocument;\n\n  async function getLogoImage() {\n    if (\n      companyDetails?.data?.imageUrl &&\n      companyDetails?.data?.imageUrl !== \"\"\n    ) {\n      dispatch(setLoading(true));\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      setLogo(logoImage);\n    }\n  }\n\n  temp_logo_image_ref.current = getLogoImage;\n\n  async function getSignatureImage() {\n    if (companyDetails?.data?.sigUrl && companyDetails?.data?.sigUrl !== \"\") {\n      dispatch(setLoading(true));\n      let sigImage = await toDataUrl(companyDetails?.data?.sigUrl);\n      setSigImage(sigImage);\n    }\n  }\n\n  temp_signature_image_ref.current = getSignatureImage;\n\n  async function toDataUrl(url) {\n    if (url === \"\") {\n      return \"\";\n    } else {\n      try {\n        const data = await fetch(url);\n        const blob = await data.blob();\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  /*   async function applyVoid(voidBool, invoiceId) {\n    if (documentType?.id === \"vat_invoice\" || documentType?.id === \"invoice\") {\n      dispatch(setLoading(true));\n      await db\n        .collection(\"company\")\n        .doc(companyDetails?.id)\n        .collection(documentType?.id)\n        .doc(invoiceId)\n        .set({ isVoid: voidBool }, { merge: true })\n        .then(async () => {\n          await fetchDocument();\n          enqueueSnackbar(`${documentType?.title} updated successfully`, {\n            variant: \"success\",\n          });\n          dispatch(setLoading(false));\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while updating void: ${err?.message}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  } */\n\n  const handleCloseUpdateDialog = (isUpdateDone) => {\n    dispatch(setUpdateDocumentData(undefined));\n    setOpenUpdateDialog(false);\n\n    if (isUpdateDone) {\n      fetchDocument();\n    }\n  };\n\n  async function confirmConversion() {\n    if (conversionValue) {\n      dispatch(setLoading(true));\n\n      // update status of proforma to \"converted to Invoice or vatInvoice\"\n      let invoiceDocumentData = {\n        ...selectedProformaDoc?.data,\n        createdFromProfroma: true,\n        previousProformaDocId: selectedProformaDoc?.id,\n      };\n\n      var documentDocRef = db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(conversionValue)\n        .doc(\"documentIndex\");\n\n      db.runTransaction((transaction) => {\n        return transaction.get(documentDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            // throw \"Document does not exist!\";\n            transaction.update(documentDocRef, {\n              documentIndex: 1,\n            });\n            return 1;\n          }\n\n          var newDocumentNumber = Number(sfDoc.data().documentIndex) + 1;\n          transaction.update(documentDocRef, {\n            documentIndex: newDocumentNumber,\n          });\n          return newDocumentNumber;\n        });\n      })\n        .then(async (newDocumentNumber) => {\n          let documentNumber = newDocumentNumber.toString();\n          if (documentNumber?.length === 1) {\n            documentNumber = `0000${documentNumber}`;\n          } else if (documentNumber?.length === 2) {\n            documentNumber = `000${documentNumber}`;\n          } else if (documentNumber?.length === 3) {\n            documentNumber = `00${documentNumber}`;\n          } else if (documentNumber?.length === 4) {\n            documentNumber = `0${documentNumber}`;\n          }\n\n          const documents = [\n            {\n              id: \"quotation\",\n              title: \"Quotation\",\n            },\n            {\n              id: \"invoice\",\n              title: \"Invoice\",\n            },\n            {\n              id: \"vat_invoice\",\n              title: \"VAT Invoice\",\n            },\n            {\n              id: \"purchase_order\",\n              title: \"Purchase order\",\n            },\n            {\n              id: \"proforma\",\n              title: \"Proforma\",\n            },\n          ];\n\n          let documentTitle = documents.find(\n            (doc) => doc?.id === conversionValue\n          )?.title;\n\n          const newDocumentData = {\n            ...invoiceDocumentData,\n            id: newDocumentNumber.toString(),\n            docString: documentNumber,\n            docTitle: documentTitle,\n            docType: conversionValue,\n            docDate: firebase.firestore.Timestamp.fromDate(new Date()),\n            convertedByUserId: user?.id || \"\",\n            convertedByUserEmail: user?.email || \"\",\n            convertedByUserTime: new Date(),\n          };\n\n          // smart promote\n          // update all transactions list\n          if (\n            companyDetails?.id === process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID\n          ) {\n            invoiceDocumentData.docParticulars.forEach(async (row) => {\n              if (row?.inventoryItemData) {\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(\"inventory\")\n                  .doc(row?.inventoryItemData?.id)\n                  .get()\n                  .then(async (itemData) => {\n                    if (itemData.exists) {\n                      let allInventoryItemTransactions =\n                        itemData?.data()?.allInventoryItemTransactions || [];\n\n                      // find proforma index\n                      let newAllInventoryItemTransactions = [\n                        ...(allInventoryItemTransactions || []),\n                      ];\n                      let proformaIndex =\n                        allInventoryItemTransactions.findIndex(\n                          (transaction) =>\n                            transaction?.docType === \"proforma\" &&\n                            transaction?.docString === selectedProformaDoc?.id\n                        );\n\n                      if (proformaIndex > -1) {\n                        newAllInventoryItemTransactions[proformaIndex] = {\n                          ...newAllInventoryItemTransactions[proformaIndex],\n                          documentNumber: newDocumentNumber.toString(),\n                          docString: documentNumber,\n                          docTitle: documentTitle,\n                          docType: conversionValue,\n                          docDate: firebase.firestore.Timestamp.fromDate(\n                            new Date()\n                          ),\n                          docDate: new Date(),\n                          profomaConverted: true,\n                          previousProformaNumber: selectedProformaDoc?.id,\n                        };\n\n                        await db\n                          .collection(\"company\")\n                          .doc(companyDetails?.id)\n                          .collection(\"inventory\")\n                          .doc(row?.inventoryItemData?.id)\n                          .set(\n                            {\n                              allInventoryItemTransactions:\n                                newAllInventoryItemTransactions || [],\n                            },\n                            { merge: true }\n                          );\n                      }\n                    }\n                  });\n              }\n            });\n          }\n\n          // save new invoice/Vat invoice document\n          await db\n            .collection(\"company\")\n            .doc(companyIdSelected)\n            .collection(conversionValue)\n            .doc(documentNumber.toString())\n            .set(\n              {\n                ...newDocumentData,\n              },\n              { merge: true }\n            )\n            .then(async () => {\n              enqueueSnackbar(\n                `New ${documentTitle} document has been created successfully`\n              );\n\n              // apply full payment for smart promote\n              if (\n                companyIdSelected ===\n                process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID\n              ) {\n                await applyPayment(\n                  {\n                    id: documentNumber.toString(),\n                    data: { ...newDocumentData },\n                  },\n                  \"FULL\"\n                );\n              }\n\n              //update proforma document status\n              dispatch(setLoading(true));\n              await db\n                .collection(\"company\")\n                .doc(companyIdSelected)\n                .collection(\"proforma\")\n                .doc(selectedProformaDoc?.id)\n                .set(\n                  {\n                    conversionDocId: conversionValue,\n                    conversionDocTitle: documentTitle,\n                    isProformaConverted: true,\n                  },\n                  { merge: true }\n                )\n                .then(() => {\n                  enqueueSnackbar(`Proforma status updated successfully`);\n\n                  // close dialog\n                  set_us_open_convertTo_dialog(false);\n\n                  // reset dialog data\n                  set_conversionValue(\"vat_invoice\");\n                  set_selectedProformaDoc(null);\n\n                  fetchDocument();\n\n                  dispatch(setLoading(false));\n                })\n                .catch((err) => {\n                  enqueueSnackbar(\n                    `Error occured while updating proforma status: ${err?.message}`,\n                    { variant: \"error\" }\n                  );\n                  dispatch(setLoading(false));\n                });\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while saving Invoice: ${err?.message}`,\n                { variant: \"error\" }\n              );\n              dispatch(setLoading(false));\n            });\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while overall Invoice saving transactions: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else {\n      enqueueSnackbar(`Please choose a conversion type`);\n    }\n  }\n\n  const deleteDocument = async (documentId, data) => {\n    dispatch(setLoading(true));\n\n    // format collection name\n    let deletedCollectionName = `deleted${documentType?.id}`;\n\n    if (\n      companyDetails?.id === process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID &&\n      (documentType?.id === \"proforma\" ||\n        documentType?.id === \"invoice\" ||\n        documentType?.id === \"vat_invoice\" ||\n        documentType?.id === \"cash_transaction\")\n    ) {\n      // update stock\n      let docParticulars = [...(data?.docParticulars || [])];\n      docParticulars.forEach(async (row) => {\n        if (row?.inventoryItemData) {\n          // get latest stock remaining amount\n          await db\n            .collection(\"company\")\n            .doc(companyDetails?.id)\n            .collection(\"inventory\")\n            .doc(row?.inventoryItemData?.id)\n            .get()\n            .then(async (doc) => {\n              if (doc.exists) {\n                // get previous transactions for that inventory\n                let allInventoryItemTransactionsData =\n                  doc?.data()?.allInventoryItemTransactions || [];\n\n                // check the qty sold for that item with the same doc id\n                let isDocFoundIndex = -1;\n\n                if (allInventoryItemTransactionsData.length > 0) {\n                  isDocFoundIndex = allInventoryItemTransactionsData.findIndex(\n                    (transaction) =>\n                      transaction.docString === documentId &&\n                      transaction?.docType === documentType?.id\n                  );\n                }\n\n                let totalQtySold = Number(doc?.data()?.qtySold || 0);\n                let totalQtyRemaining = Number(doc?.data()?.qtyRemaining || 0);\n\n                let newTotalAmountReceivedWithoutVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithoutVAT || 0\n                );\n\n                let newTotalAmountReceivedWithVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithVAT || 0\n                );\n\n                if (isDocFoundIndex > -1) {\n                  // get the qty Sold\n                  let OldQtySold = Number(\n                    allInventoryItemTransactionsData[isDocFoundIndex]\n                      ?.itemQtySold || 0\n                  );\n\n                  // rebuild total remaining qty\n                  totalQtyRemaining = totalQtyRemaining + OldQtySold;\n\n                  // rebuild qty sold\n                  totalQtySold = totalQtySold - OldQtySold;\n\n                  newTotalAmountReceivedWithoutVAT =\n                    newTotalAmountReceivedWithoutVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowDiscountedAmount ||\n                        allInventoryItemTransactionsData[isDocFoundIndex]\n                          ?.rowAmount ||\n                        0\n                    );\n\n                  newTotalAmountReceivedWithVAT =\n                    newTotalAmountReceivedWithVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowAmountWithVAT || 0\n                    );\n                }\n\n                let allInventoryItemTransactions = [];\n\n                if (isDocFoundIndex > -1) {\n                  // update data if already present\n\n                  allInventoryItemTransactionsData.forEach((transaction) => {\n                    let valid = false;\n                    if (\n                      transaction?.docString === documentId &&\n                      transaction?.docType === documentType?.id\n                    ) {\n                      valid = false;\n                    } else {\n                      valid = true;\n                    }\n\n                    if (valid) {\n                      allInventoryItemTransactions.push({ ...transaction });\n                    }\n                  });\n                }\n\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(\"inventory\")\n                  .doc(row?.inventoryItemData?.id)\n                  .set(\n                    {\n                      totalAmountReceivedWithoutVAT: Number(\n                        newTotalAmountReceivedWithoutVAT || 0\n                      ).toFixed(2),\n                      totalAmountReceivedWithVAT: Number(\n                        newTotalAmountReceivedWithVAT || 0\n                      ).toFixed(2),\n                      qtySold: totalQtySold || 0,\n                      qtyRemaining: totalQtyRemaining || 0,\n                      allInventoryItemTransactions:\n                        allInventoryItemTransactions || [],\n                    },\n                    { merge: true }\n                  )\n                  .then(() => {\n                    enqueueSnackbar(\"Stock updated successfully\");\n                  })\n                  .catch((error) => {\n                    enqueueSnackbar(\n                      `Error occured while updating quantity of inventory item: ${error?.message}`,\n                      { variant: \"error\" }\n                    );\n                  });\n              } else {\n                enqueueSnackbar(\n                  \"Stock could not be updated as item could not be found, please check inventory\",\n                  { variant: \"error\" }\n                );\n              }\n            });\n        }\n      });\n    }\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(deletedCollectionName)\n      .add({\n        deleted: true,\n        deletedByUserId: user?.id,\n        deletedByUserEmail: user?.email,\n        deletedByUserTime: new Date(),\n        id: documentId,\n        ...data,\n      })\n      .then(async () => {\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(documentType?.id)\n          .doc(documentId)\n          .delete()\n          .then(() => {\n            enqueueSnackbar(\"Document deleted successfully\", {\n              variant: \"success\",\n            });\n\n            fetchDocument();\n            dispatch(setLoading(false));\n          })\n          .catch((error) => {\n            enqueueSnackbar(\n              `Error occured while deleting document: ${error?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while deleting document: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  async function uploadToMRA(invoiceData) {\n    if (!invoiceData?.data?.transactionType?.id) {\n      enqueueSnackbar(\"Please choose a type of transaction.\", {\n        variant: \"warning\",\n      });\n    } else if (!companyDetails?.data?.vatOrNonVatRegistered?.id) {\n      enqueueSnackbar(\n        \"Company VAT Registration status is missing, please update company details\",\n        {\n          variant: \"warning\",\n        }\n      );\n    } else if (!invoiceData?.data?.docIssuedDateTime) {\n      enqueueSnackbar(\"Issue date of invoice is missing\", {\n        variant: \"warning\",\n      });\n    } else if (!invoiceData?.data?.invoiceTypeDesc?.id) {\n      enqueueSnackbar(\"Type of Invoice is missing\", {\n        variant: \"warning\",\n      });\n    } else if (\n      (invoiceData?.data?.invoiceTypeDesc?.id === \"DRN\" ||\n        invoiceData?.data?.invoiceTypeDesc?.id === \"CRN\") &&\n      !invoiceData?.data?.invoiceRefIdentifier\n    ) {\n      enqueueSnackbar(\"Invoice number is missing\", {\n        variant: \"warning\",\n      });\n    } else {\n      if (isOnline) {\n        const checkedInvoices = [{ ...invoiceData }];\n\n        const submitMultipleInvoicesToMra = functions.httpsCallable(\n          \"submitmultipleinvoicestomra\"\n        );\n        submitMultipleInvoicesToMra({\n          user: JSON.stringify(user),\n          invoices: JSON.stringify(checkedInvoices),\n          companyIdSelected: companyIdSelected,\n          documentType: JSON.stringify(documentType),\n          brn: companyDetails?.data?.brn,\n          companyDetails: JSON.stringify(companyDetails),\n          clientDocumentObjectSelected: JSON.stringify(\n            clientDocumentObjectSelected\n          ),\n        });\n\n        fetchDocument();\n        dispatch(setLoading(false));\n      } else {\n        enqueueSnackbar(\"You are currently offline.\", { variant: \"error\" });\n        dispatch(setLoading(false));\n      }\n    }\n  }\n\n  async function submitMultipleInvoiceToMRA() {\n    if (!companyDetails?.data?.vatOrNonVatRegistered?.id) {\n      enqueueSnackbar(\n        \"Company VAT Registration status is missing, please update company details\",\n        {\n          variant: \"warning\",\n        }\n      );\n    } else {\n      const checkedInvoices = us_documentlist.filter(\n        (doc) => doc?.checked === true\n      );\n\n      if (checkedInvoices && checkedInvoices.length > 0) {\n        let errorFound = false;\n        checkedInvoices.forEach((invoiceData) => {\n          if (!invoiceData?.data?.transactionType?.id) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}. Please choose a type of transaction.`,\n              {\n                variant: \"warning\",\n              }\n            );\n          } else if (!invoiceData?.data?.docIssuedDateTime) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}. Issued date of invoice is missing`,\n              {\n                variant: \"warning\",\n              }\n            );\n          } else if (!invoiceData?.data?.invoiceTypeDesc?.id) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}.Type of Invoice is missing`,\n              {\n                variant: \"warning\",\n              }\n            );\n          }\n        });\n\n        if (!errorFound) {\n          if (isOnline) {\n            const submitMultipleInvoicesToMra = functions.httpsCallable(\n              \"submitmultipleinvoicestomra\"\n            );\n            submitMultipleInvoicesToMra({\n              user: JSON.stringify(user),\n              invoices: JSON.stringify(checkedInvoices),\n              companyIdSelected: companyIdSelected,\n              documentType: JSON.stringify(documentType),\n              brn: companyDetails?.data?.brn,\n              companyDetails: JSON.stringify(companyDetails),\n              clientDocumentObjectSelected: JSON.stringify(\n                clientDocumentObjectSelected\n              ),\n            });\n\n            fetchDocument();\n            dispatch(setLoading(false));\n          } else {\n            enqueueSnackbar(\"You are currently offline.\", { variant: \"error\" });\n            dispatch(setLoading(false));\n          }\n        }\n      }\n    }\n  }\n\n  const sendMultipleEmail = (type, invoiceContent, ccField) => {\n    dispatch(setLoading(true));\n\n    if (!clientDocumentObjectSelected?.data?.name) {\n      enqueueSnackbar(\"Client name is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data?.name) {\n      enqueueSnackbar(\"Your company name is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data?.email) {\n      enqueueSnackbar(\"Client email is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data.email) {\n      enqueueSnackbar(\"Your company email is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!companyDetails?.data?.serviceKey) {\n      enqueueSnackbar(\"Service key is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!companyDetails?.data?.templateKey) {\n      enqueueSnackbar(\"Template key is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else {\n      let selectedInvoices = [];\n\n      if (type === \"single\") {\n        selectedInvoices.push({ ...invoiceContent });\n      } else {\n        selectedInvoices = us_documentlist.filter(\n          (invoice) => invoice.checked === true\n        );\n      }\n\n      const promises = [];\n      selectedInvoices.forEach((doc) => {\n        promises.push(\n          new Promise(async (resolve) => {\n            const content = {\n              companyChosenObj: {\n                id:\n                  companyDetails?.id && companyDetails?.id !== \"\"\n                    ? companyDetails?.id\n                    : \"\",\n                data: {\n                  ...companyDetails?.data,\n                },\n              },\n              clientChosenObj: {\n                data: {\n                  ...clientDocumentObjectSelected?.data,\n                },\n              },\n              invDetails: {\n                docTitle: doc?.data?.docTitle || \"\",\n                docType: doc?.data?.docType || \"\",\n                docQuoteNumber: doc?.data?.docQuoteNumber || \"\",\n                docPurchaseOrderNumber: doc?.data?.docPurchaseOrderNumber || \"\",\n                docBillTo: doc?.data?.docBillTo || \"\",\n                docShipTo: doc?.data?.docShipTo || \"\",\n                docTermsAndCondition: doc?.data?.docTermsAndCondition || \"\",\n                invDate:\n                  moment(doc?.data?.docDate.toDate()).format(\"DD-MM-YYYY\") ||\n                  \"\",\n                invParticulars: doc?.data?.docParticulars || [],\n                invTotal: doc?.data?.docTotal || 0,\n                invoiceString: doc?.data?.docString || \"\",\n                invVatFee: doc?.data?.docVatFee || 0,\n                invSubTotal: doc?.data?.docSubTotal || 0,\n                paymentStatus: doc?.data?.paymentStatus || \"\",\n\n                //custom details\n                docBLNumber: doc?.data?.docBLNumber || \"\",\n                docSupplier: doc?.data?.docSupplier || \"\",\n                docContainerNumber: doc?.data?.docContainerNumber || \"\",\n                docPackages: doc?.data?.docPackages || \"\",\n                docDescription: doc?.data?.docDescription || \"\",\n                docGrossWeight: doc?.data?.docGrossWeight || \"\",\n                docVolume: doc?.data?.docVolume || \"\",\n                docPortOfLoading: doc?.data?.docPortOfLoading || \"\",\n                docETA: doc?.data?.docETA || \"\",\n                docVesselName: doc?.data?.docVesselName || \"\",\n                docRoE: doc?.data?.docRoE || \"\",\n                docPlaceOfLanding: doc?.data?.docPlaceOfLanding || \"\",\n\n                // MRA customs\n                discountTotalAmount: doc?.data?.discountTotalAmount || \"\",\n                discountedTotalAmount: doc?.data?.discountedTotalAmount || \"\",\n\n                // transport template\n                invJobRef: doc?.data?.invJobRef || \"\",\n                invStorageFee: doc?.data?.invStorageFee || \"\",\n                invScanningFee: doc?.data?.invScanningFee || \"\",\n                invGatePassFee: doc?.data?.invGatePassFee || \"\",\n                invVehicleNo: doc?.data?.invVehicleNo || \"\",\n                transportFees: doc?.data?.transportFees || \"\",\n                transportDesc: doc?.data?.transportDesc || \"\",\n                invApplyVat: doc?.data?.invApplyVat || false,\n\n                // flexitrans customs\n                docShipper: doc?.data?.docShipper || \"\",\n                docMarkNos: doc?.data?.docMarkNos || \"\",\n                docCommodity: doc?.data?.docCommodity || \"\",\n                docHbl: doc?.data?.docHbl || \"\",\n                docDepot: doc?.data?.docDepot || \"\",\n              },\n              logo: logo || \"\",\n              sigImage: sigImage || \"\",\n            };\n\n            let qrCodeUri = \"\";\n            if (doc?.data?.mraFinalisationData?.fiscalisedInvoices) {\n              let qrCode =\n                doc?.data?.mraFinalisationData?.fiscalisedInvoices[0]?.qrCode;\n\n              // Construct data URI data:image/png;base64,\n              const dataUri = `data:image/jpeg/png;base64,${qrCode}`;\n\n              qrCodeUri = dataUri;\n            }\n\n            const documentPdfComponent =\n              companyDetails?.data?.documentTemplate === \"transport\" ? (\n                <InvTransportTemplatePdf\n                  companyChosenObj={content.companyChosenObj}\n                  clientChosenObj={content.clientChosenObj}\n                  invDetails={content.invDetails}\n                  logo={content.logo}\n                  sigImage={content.sigImage}\n                />\n              ) : (\n                <InvPdf\n                  // worldlink custom template\n                  customTemplate1={\n                    process.env\n                      .REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n                    companyDetails?.id &&\n                    process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n                      companyDetails?.id\n                    )\n                      ? true\n                      : false\n                  }\n                  // new template with custom MRA changes\n                  newTemplate={\n                    companyDetails?.data?.MRATemplateFlag?.value ||\n                    content?.invDetails?.data?.MRATemplateApplied\n                      ? true\n                      : false\n                  }\n                  companyChosenObj={content.companyChosenObj}\n                  clientChosenObj={content.clientChosenObj}\n                  invDetails={content.invDetails}\n                  logo={content.logo}\n                  sigImage={content.sigImage}\n                  qrCodeUri={qrCodeUri || \"\"}\n                />\n              );\n\n            let blobPDF = await pdf(documentPdfComponent).toBlob();\n\n            if (blobPDF) {\n              let blobResponse = await new Promise((resolve) => {\n                var reader = new FileReader();\n                reader.readAsDataURL(blobPDF);\n\n                reader.onloadend = async () => {\n                  var base64String = reader.result;\n                  let sFormat = base64String.split(\",\");\n                  resolve(sFormat[1]);\n                };\n              });\n\n              if (blobResponse) {\n                resolve(blobResponse);\n              }\n            }\n          })\n        );\n      });\n\n      Promise.all(promises).then((allPdfs) => {\n        let invoiceNumberList = \"\";\n        let invoiceNumberSubjectList = \"\";\n        let invoice_number_customerName = \"\";\n        selectedInvoices.forEach((invoice) => {\n          invoiceNumberList =\n            invoiceNumberList + `- ${invoice?.data?.docString} \\n`;\n          invoiceNumberSubjectList =\n            invoiceNumberSubjectList + ` ${invoice?.data?.docString} `;\n\n          if (companyDetails?.id === process.env.REACT_APP_CUSTOM_ASHLEY_ID) {\n            let customerName = \"\";\n            const particulars = invoice?.data?.docParticulars || [];\n            if (particulars?.length > 0) {\n              const customerParticular = particulars.find(\n                (particular) => particular.title === \"Customer's\"\n              );\n              if (customerParticular) {\n                customerName = customerParticular.customDetail;\n              }\n            }\n\n            invoice_number_customerName =\n              invoice_number_customerName +\n              `- ${invoice?.data?.docString} for customer: ${customerName} \\n `;\n          }\n        });\n\n        let toEmail = clientDocumentObjectSelected?.data?.email || \"\";\n\n        if (clientDocumentObjectSelected?.data?.email2) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email2}`;\n        }\n        if (clientDocumentObjectSelected?.data?.email3) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email3}`;\n        }\n        if (clientDocumentObjectSelected?.data?.email4) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email4}`;\n        }\n\n        let emailParameters = {\n          from_name: companyDetails?.data?.name,\n          to_name: clientDocumentObjectSelected?.data?.name,\n          from_email: companyDetails?.data?.email,\n          to_email: toEmail,\n          reply_to: companyDetails?.data?.email,\n          fileName: `${documentType?.title}.pdf`,\n          content: allPdfs,\n        };\n\n        if (companyDetails.id === process.env.REACT_APP_CUSTOM_ASHLEY_ID) {\n          emailParameters = {\n            ...emailParameters,\n            invoiceNumber: invoiceNumberSubjectList || \"\",\n            invoice_number_customerName: invoice_number_customerName,\n            subject: `${documentType?.title} ${invoiceNumberSubjectList} from ${companyDetails?.data?.name}`,\n            documentType: documentType?.title,\n          };\n        } else {\n          emailParameters = {\n            ...emailParameters,\n            invoice_number: invoiceNumberList,\n            invoice_number_customerName: invoiceNumberList,\n            subject: `${documentType?.title} from ${companyDetails?.data?.name}`,\n            documentType: documentType?.title,\n          };\n        }\n\n        if (ccField) {\n          const seperatedByCommas = ccField.split(\",\");\n          let newCC = \"\";\n          if (seperatedByCommas?.length > 0) {\n            for (let i = 0; i < seperatedByCommas?.length; i++) {\n              newCC = newCC + seperatedByCommas[i] + \", \";\n            }\n          }\n\n          emailParameters = {\n            ...emailParameters,\n            ccField: newCC,\n          };\n        }\n\n        emailjs\n          .send(\n            companyDetails?.data?.serviceKey,\n            companyDetails?.data?.templateKey,\n            {\n              ...emailParameters,\n            },\n            process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n          )\n          .then(\n            async () => {\n              if (us_openCCDialog?.open) {\n                set_us_openCCDialog({\n                  open: false,\n                  type: \"\",\n                  invoiceContent: null,\n                });\n              }\n\n              const promisesEmailSent = [];\n              selectedInvoices.forEach((doc) => {\n                promisesEmailSent.push(\n                  new Promise(async (resolveEmailSent) => {\n                    await db\n                      .collection(\"company\")\n                      .doc(companyDetails?.id)\n                      .collection(documentType?.id)\n                      .doc(doc?.id)\n                      .set({ emailAlreadySent: true }, { merge: true })\n                      .then(() => {\n                        resolveEmailSent(true);\n                      });\n                  })\n                );\n              });\n\n              Promise.all(promisesEmailSent).then(() => {\n                enqueueSnackbar(\"Email sent successfully\", {\n                  variant: \"success\",\n                });\n\n                fetchDocument();\n\n                dispatch(setLoading(false));\n              });\n            },\n            (error) => {\n              enqueueSnackbar(\n                `Error occured while sending pdf: ${error.text}`,\n                {\n                  variant: \"error\",\n                }\n              );\n              dispatch(setLoading(false));\n            }\n          );\n      });\n    }\n  };\n\n  async function applyVoid(voidBool, invoiceId) {\n    dispatch(setLoading(true));\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(documentType?.id)\n      .doc(invoiceId)\n      .set({ isVoid: voidBool }, { merge: true })\n      .then(async () => {\n        await fetchDocument();\n        enqueueSnackbar(`${documentType?.title} updated successfully`, {\n          variant: \"success\",\n        });\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(`Error occured while updating void: ${err?.message}`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function applyPayment(invoiceSelected, paymentType) {\n    return await new Promise((resolve) => {\n      dispatch(setLoading(true));\n      // create a payment doc using transaction to check if paymentCounter exists\n      // Create a reference to the SF doc.\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      db.runTransaction(async (transaction) => {\n        return transaction.get(paymentCounterDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            return null;\n          }\n\n          var newPaymentCounter = Number(sfDoc.data().paymentCounter || 0) + 1;\n          return newPaymentCounter;\n        });\n      })\n        .then(async (result) => {\n          if (result === null) {\n            await db\n              .collection(\"company\")\n              .doc(companyIdSelected)\n              .collection(\"payment\")\n              .doc(\"paymentCounter\")\n              .set({ paymentCounter: 1 })\n              .then(async () => {\n                let paymentResult = await executePayment(\n                  1,\n                  invoiceSelected,\n                  paymentType\n                );\n                if (paymentResult) {\n                  resolve(true);\n                }\n              })\n              .catch((err) => {\n                enqueueSnackbar(\n                  `Error occured while creating payment counter: ${err?.message}`,\n                  { variant: \"error\" }\n                );\n                dispatch(setLoading(false));\n              });\n          } else if (result && Number(result) > 0) {\n            let paymentResult = await executePayment(\n              result,\n              invoiceSelected,\n              paymentType\n            );\n\n            if (paymentResult) {\n              resolve(true);\n            }\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while executing payment transaction: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n          resolve(true);\n        });\n    });\n  }\n\n  async function executePayment(result, invoiceSelected, paymentType) {\n    return await new Promise((resolve) => {\n      let paymentNumberDoc = result.toString();\n      if (paymentNumberDoc?.length === 1) {\n        paymentNumberDoc = `0000${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 2) {\n        paymentNumberDoc = `000${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 3) {\n        paymentNumberDoc = `00${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 4) {\n        paymentNumberDoc = `0${paymentNumberDoc}`;\n      }\n\n      let remainingAmount = 0;\n      let paymentAmount = 0;\n      let paymentStatus = \"\";\n\n      if (paymentType === \"FULL\") {\n        remainingAmount = 0;\n        paymentAmount = invoiceSelected?.data?.docTotal;\n        paymentStatus = \"Paid\";\n      }\n\n      // Get a new write batch\n      var batch = db.batch();\n\n      // store payment made\n      const paymentdocRefId = result.toString();\n\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      var paymentDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(paymentdocRefId);\n\n      var invoiceDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(conversionValue)\n        .doc(invoiceSelected.id);\n\n      // update payment counter\n      batch.set(\n        paymentCounterDocRef,\n        { paymentCounter: Number(result) },\n        { merge: true }\n      );\n\n      // add new payment doc\n      batch.set(\n        paymentDocRef,\n        {\n          invoiceList: [{ invoiceId: invoiceSelected?.id }],\n          paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n          dateCreated: firebase.firestore.Timestamp.fromDate(new Date()),\n        },\n        { merge: true }\n      );\n\n      batch.set(\n        invoiceDocRef,\n        {\n          paymentStatus: paymentStatus,\n          docRemainingPaymentAmt: remainingAmount,\n          attachedPaymentNumber: [\n            {\n              paymentNumber: paymentdocRefId,\n              paymentNumberString: paymentNumberDoc,\n              paymentType: \"\",\n              paymentAmount: paymentAmount,\n              paymentRemainingAmount: remainingAmount,\n              paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n            },\n          ],\n        },\n        { merge: true }\n      );\n\n      // Commit the batch\n      batch\n        .commit()\n        .then(async () => {\n          enqueueSnackbar(`${paymentType} payment applied successfully`);\n          dispatch(setLoading(false));\n          resolve(true);\n        })\n        .catch((error) => {\n          enqueueSnackbar(\n            `Error occured while making ${paymentType} payment: ${error?.message}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n          resolve(true);\n        });\n    });\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <hr />\n        <br />\n        <Typography>Please choose a date</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n          <DatePicker\n            label=\"From\"\n            value={us_fromDate || \"\"}\n            onChange={(newValue) => {\n              set_us_fromDate(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} size=\"small\" />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n\n          <DatePicker\n            label=\"To\"\n            value={us_ToDate || \"\"}\n            onChange={(newValue) => {\n              set_us_ToDate(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} size=\"small\" />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n        </Stack>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{\n          display: us_documentlist && us_documentlist?.length > 0 ? \"\" : \"none\",\n          width: \"100%\",\n        }}\n      >\n        {companyDetails?.data?.displayMRAFiscalisationButton ? (\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => submitMultipleInvoiceToMRA()}\n              disabled={\n                us_documentlist &&\n                us_documentlist?.length > 0 &&\n                us_documentlist?.find((doc) => doc?.checked === true)\n                  ? false\n                  : true\n              }\n            >\n              Send invoices to MRA\n            </Button>\n            <br />\n            <br />\n          </>\n        ) : (\n          <></>\n        )}\n\n        {companyDetails?.data?.sendEmail &&\n        us_documentlist &&\n        us_documentlist?.length > 0 &&\n        us_documentlist.find((invoice) => invoice.checked === true) ? (\n          <>\n            <Stack spacing={3} direction={\"row\"} alignItems={\"center\"}>\n              <Typography>\n                {`${\n                  us_documentlist.filter((invoice) => invoice.checked === true)\n                    ?.length\n                } seleted`}\n              </Typography>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() =>\n                  /* sendMultipleEmail() */ set_us_openCCDialog({\n                    open: true,\n                    type: \"mulitple\",\n                  })\n                }\n                style={{ width: 300 }}\n              >\n                {`Send selected invoice(s) via email`}\n              </Button>\n            </Stack>\n            <br />\n          </>\n        ) : (\n          <></>\n        )}\n\n        {documentType && documentType?.id === \"proforma\" ? (\n          <Grid item xs={12} md={12}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4}>\n                <Autocomplete\n                  ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n                  size=\"small\"\n                  label=\"Proforma filter\"\n                  id=\"filter-drop-down\"\n                  options={[\n                    \"With P.O\",\n                    \"With Quote number\",\n                    \"With both P.O and Quote number\",\n                    \"NONE\",\n                  ]}\n                  value={selectedProformaFilter}\n                  renderInput={(params) => (\n                    <TextField {...params} label={\"Proforma filter\"} />\n                  )}\n                  onChange={(e, value, reason) => {\n                    if (\n                      reason !== \"removeOption\" &&\n                      reason !== \"clear\" &&\n                      value\n                    ) {\n                      set_selectedProformaFilter(value);\n                    } else {\n                      set_selectedProformaFilter(null);\n                    }\n                  }}\n                  getOptionLabel={(option) => option}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <br />\n          </Grid>\n        ) : (\n          <></>\n        )}\n\n        <TableContainer>\n          <Table border={1}>\n            <TableHead>\n              <TableRow>\n                {companyDetails?.data?.MRATemplateFlag ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  ></TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {viewOnly && searchAndChoose ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Choose\n                  </TableCell>\n                ) : (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Delete\n                  </TableCell>\n                )}\n\n                {viewOnly && searchAndChoose ? (\n                  <></>\n                ) : (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Update\n                  </TableCell>\n                )}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Date time created\n                </TableCell>\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Client\n                </TableCell>\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  {`${documentType?.title} number`}\n                </TableCell>\n\n                {companyDetails?.id ===\n                process.env.REACT_APP_CUSTOM_ASHLEY_ID ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{\n                      fontWeight: \"bolder\",\n                      whiteSpace: \"nowrap\",\n                    }}\n                  >\n                    Customer's\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {companyDetails?.id ===\n                  process.env.REACT_APP_CUSTOM_ASHLEY_ID &&\n                clientDocumentObjectSelected?.id &&\n                process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS &&\n                process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS.includes(\n                  clientDocumentObjectSelected?.id\n                ) ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{\n                      whiteSpace: \"nowrap\",\n                    }}\n                  >\n                    Job Ref\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {companyDetails?.data?.sendEmail ? (\n                  <>\n                    <TableCell size=\"small\" align=\"center\">\n                      Send pdf to client\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {documentType && documentType?.id === \"proforma\" ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Quotation Number\n                    </TableCell>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      P.O Number\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {/* {user && user?.role === \"super-admin\" ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Send to google drive\n                  </TableCell>\n                ) : (\n                  <></>\n                )} */}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  View/download\n                </TableCell>\n\n                {companyDetails?.data?.displayMRAFiscalisationButton ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      MRA Fiscalisation\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {documentType?.id && documentType?.id !== \"invoice\" ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Vat amount\n                    </TableCell>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Subtotal amount\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Total amount\n                </TableCell>\n\n                {companyDetails?.data?.documentTemplate === \"transport\" &&\n                documentType?.id === \"vat_invoice\" ? (\n                  <TableCell size=\"small\" align=\"center\">\n                    Apply/remove void\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {documentType?.id && documentType?.id === \"proforma\" && (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Proforma status\n                  </TableCell>\n                )}\n\n                {documentType?.id &&\n                  (documentType?.id === \"proforma\" ||\n                    documentType?.id === \"vat_invoice\" ||\n                    documentType?.id === \"invoice\") && (\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      {documentType?.id === \"proforma\"\n                        ? \"Convert to Invoice/Vat Invoice\"\n                        : \"Converted from Proforma\"}\n                    </TableCell>\n                  )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {us_documentlist &&\n                us_documentlist?.length > 0 &&\n                us_documentlist?.map((doc, index) => {\n                  let displayBool = false;\n\n                  if (documentType && documentType?.id === \"proforma\") {\n                    if (\n                      (selectedProformaFilter === \"With Quote number\" &&\n                        doc?.data?.docQuoteNumber) ||\n                      (selectedProformaFilter === \"With P.O\" &&\n                        doc?.data?.docPurchaseOrderNumber) ||\n                      (selectedProformaFilter ===\n                        \"With both P.O and Quote number\" &&\n                        doc?.data?.docQuoteNumber &&\n                        doc?.data?.docPurchaseOrderNumber) ||\n                      (selectedProformaFilter === \"NONE\" &&\n                        !doc?.data?.docQuoteNumber &&\n                        !doc?.data?.docPurchaseOrderNumbe) ||\n                      !selectedProformaFilter\n                    ) {\n                      displayBool = true;\n                    } else {\n                      displayBool = false;\n                    }\n                  } else {\n                    displayBool = true;\n                  }\n\n                  if (displayBool) {\n                    return (\n                      <TableRow key={index}>\n                        {companyDetails?.data?.MRATemplateFlag ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Checkbox\n                              checked={doc?.checked}\n                              onChange={(event) => {\n                                let newDocumentlist = [...us_documentlist];\n                                newDocumentlist[index] = {\n                                  ...newDocumentlist[index],\n                                  checked: event.target.checked,\n                                };\n                                set_us_documentlist(newDocumentlist);\n                              }}\n                            />\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {viewOnly && searchAndChoose ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => chooseDocument(doc)}\n                            >\n                              Choose\n                            </Button>\n                          </TableCell>\n                        ) : (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <IconButton\n                              color=\"error\"\n                              onClick={() =>\n                                deleteDocument(doc?.id, { ...doc?.data })\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.deletePermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                        )}\n\n                        {viewOnly && searchAndChoose ? (\n                          <></>\n                        ) : (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <IconButton\n                              onClick={() => {\n                                dispatch(\n                                  setUpdateDocumentData({\n                                    ...doc,\n                                    documentTypeId: documentType?.id,\n                                    documentTypeTitle: documentType?.title,\n                                    keywords: doc?.data?.keywords || [],\n                                  })\n                                );\n                                setOpenUpdateDialog(true);\n                              }}\n                              disabled={\n                                !user?.permissions ||\n                                !user?.permissions[\n                                  documentType?.updatePermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                ) ||\n                                (doc?.data &&\n                                  doc?.data?.isProformaConverted &&\n                                  documentType?.id === \"proforma\")\n                              }\n                            >\n                              <EditIcon color=\"primary\" />\n                            </IconButton>\n                          </TableCell>\n                        )}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          {moment(doc?.data?.docDate.toDate()).format(\n                            \"DD-MM-YYYY, HH:MM:ss\"\n                          )}\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          {clientDocumentObjectSelected &&\n                          clientDocumentObjectSelected?.name &&\n                          clientDocumentObjectSelected?.name !== \"\"\n                            ? clientDocumentObjectSelected?.name\n                            : \"\"}\n                        </TableCell>\n                        {/* <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          {doc?.data?.docBillTo || \"\"}\n                        </TableCell> */}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >{`${doc?.data?.docString}`}</TableCell>\n\n                        {companyDetails?.id ===\n                        process.env.REACT_APP_CUSTOM_ASHLEY_ID ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.docParticulars.find(\n                              (particular) => particular.title === \"Customer's\"\n                            )?.customDetail || \"\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {companyDetails?.id ===\n                          process.env.REACT_APP_CUSTOM_ASHLEY_ID &&\n                        clientDocumentObjectSelected?.id &&\n                        process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS &&\n                        process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS.includes(\n                          clientDocumentObjectSelected?.id\n                        ) ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.invJobRef || \"\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {companyDetails?.data?.sendEmail ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                doc?.data?.emailAlreadySent === true\n                                  ? \"#befed5\"\n                                  : companyDetails?.data?.documentTemplate ===\n                                      \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                set_us_openCCDialog({\n                                  open: true,\n                                  type: \"single\",\n                                  invoiceContent: doc,\n                                })\n                              }\n                            >\n                              send email\n                            </Button>\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType && documentType?.id === \"proforma\" ? (\n                          <>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              {doc?.data?.docQuoteNumber || \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              {doc?.data?.docPurchaseOrderNumber || \"\"}\n                            </TableCell>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          <Stack\n                            direction={\"row\"}\n                            alignItems={\"center\"}\n                            justifyContent={\"center\"}\n                            spacing={2}\n                          >\n                            <IconButton\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownload(\n                                  companyDetails,\n                                  clientDocumentObjectSelected,\n                                  doc,\n                                  logo,\n                                  sigImage,\n                                  \"view\"\n                                )\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.viewPermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <Iconify icon={\"carbon:view\"} />\n                            </IconButton>\n\n                            <IconButton\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownload(\n                                  companyDetails,\n                                  clientDocumentObjectSelected,\n                                  doc,\n                                  logo,\n                                  sigImage,\n                                  \"download\"\n                                )\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.viewPermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <Iconify icon={\"eva:download-fill\"} />\n                            </IconButton>\n                          </Stack>\n                        </TableCell>\n\n                        {companyDetails?.data?.displayMRAFiscalisationButton ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            {doc?.data?.mraCompliantStatus === \"completed\" ? (\n                              <Typography>Completed</Typography>\n                            ) : doc?.data?.mraCompliantStatus === \"error\" ? (\n                              <Stack spacing={2} direction={\"row\"}>\n                                <Tooltip title={doc?.data?.mraCompliantMessage}>\n                                  <Typography>Error occured</Typography>\n                                </Tooltip>\n\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => uploadToMRA(doc)}\n                                >\n                                  Upload again\n                                </Button>\n                              </Stack>\n                            ) : (\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => uploadToMRA(doc)}\n                              >\n                                Upload\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType?.id && documentType?.id !== \"invoice\" ? (\n                          <>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              <CurrencyFormat\n                                value={Number(\n                                  doc?.data?.docVatFee || 0\n                                ).toFixed(2)}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <CurrencyFormat\n                                value={Number(\n                                  doc?.data?.docSubTotal || 0\n                                ).toFixed(2)}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          <CurrencyFormat\n                            value={Number(doc?.data?.docTotal || 0).toFixed(2)}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                          />\n                        </TableCell>\n\n                        {companyDetails?.data?.documentTemplate ===\n                          \"transport\" && documentType?.id === \"vat_invoice\" ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background: doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                            }}\n                          >\n                            {doc?.data?.isVoid ? (\n                              <Button\n                                variant=\"contained\"\n                                onClick={() => applyVoid(false, doc?.id)}\n                                color=\"warning\"\n                              >\n                                cancel void\n                              </Button>\n                            ) : (\n                              <Button\n                                variant=\"contained\"\n                                onClick={() => applyVoid(true, doc?.id)}\n                                color=\"primary\"\n                              >\n                                void\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType?.id && documentType?.id === \"proforma\" && (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background:\n                                /* doc?.data?.isVoid || */\n                                doc?.data && doc?.data?.isProformaConverted\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data && doc?.data?.isProformaConverted\n                              ? `Converted to ${doc?.data?.conversionDocTitle}`\n                              : \"Still Proforma\"}\n                          </TableCell>\n                        )}\n\n                        {documentType?.id && documentType?.id === \"proforma\" ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              /* background: doc?.data?.isVoid\n                            ? \"#FEFEBE\"\n                            : \"transparent\", */\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => {\n                                set_selectedProformaDoc({\n                                  id: doc?.id,\n                                  data: { ...doc?.data },\n                                });\n                                set_us_open_convertTo_dialog(true);\n                              }}\n                              disabled={\n                                doc?.data?.isProformaConverted ||\n                                (viewOnly && searchAndChoose)\n                              }\n                            >\n                              Convert\n                            </Button>\n                          </TableCell>\n                        ) : documentType?.id &&\n                          (documentType?.id === \"vat_invoice\" ||\n                            documentType?.id === \"invoice\") ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background: doc?.data?.createdFromProfroma\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.createdFromProfroma ? \"YES\" : \"NO\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n                      </TableRow>\n                    );\n                  } else return <></>;\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        {!us_documentlist || us_documentlist?.length === 0 ? (\n          <Alert severity=\"warning\">No document retrieved found.</Alert>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n\n      <Dialog open={openUpdateDialog} maxWidth={\"xl\"} fullWidth>\n        <DialogTitle>{`Update ${documentType?.title || \"\"}`}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3}>\n            <DocumentInputDetails\n              action={\"update\"}\n              handleCloseUpdateDialog={handleCloseUpdateDialog}\n            />\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => handleCloseUpdateDialog(false)}\n          >\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={us_open_convertTo_dialog} maxWidth={\"sm\"} fullWidth>\n        <DialogTitle>Convert to Invoice/Vat Invoice</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <FormControl>\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Conversion types\n                </FormLabel>\n                <RadioGroup\n                  aria-labelledby=\"demo-radio-buttons-group-label\"\n                  name=\"radio-buttons-group\"\n                  value={conversionValue}\n                  onChange={(e) => set_conversionValue(e.target.value)}\n                >\n                  <FormControlLabel\n                    value=\"invoice\"\n                    control={<Radio />}\n                    label=\"Invoice\"\n                  />\n                  <FormControlLabel\n                    value=\"vat_invoice\"\n                    control={<Radio />}\n                    label=\"VAT Invoice\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => confirmConversion()}\n          >\n            Confirm\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => set_us_open_convertTo_dialog(false)}\n          >\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* \n      {openPdf ? (\n        <Suspense fallback={<></>}>\n          <PdfDialog\n            content={pdfContent}\n            open={openPdf}\n            close={() => set_openPdf(false)}\n          />\n        </Suspense>\n      ) : (\n        <></>\n      )} */}\n\n      <Suspense fallback={<></>}>\n        <CCDialog\n          open={us_openCCDialog?.open}\n          close={() =>\n            set_us_openCCDialog({\n              open: false,\n              type: \"\",\n            })\n          }\n          us_openCCDialog={us_openCCDialog}\n          sendMultipleEmail={sendMultipleEmail}\n        />\n      </Suspense>\n    </>\n  );\n}\n"],"sourceRoot":""}