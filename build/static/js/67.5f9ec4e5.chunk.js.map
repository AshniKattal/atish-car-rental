{"version":3,"sources":["components/document/DocumentUpdateButton.js"],"names":["DocumentUpdateButton","updateDocumentData","documentDetails","us_s_quotationNumber","us_s_purchaseOrderNumber","handleCloseUpdateDialog","displayDiscountColumns","user","useAuth","enqueueSnackbar","useSnackbar","dispatch","useDispatch","useSelector","selectDocument","documentType","companyIdSelected","companyDetails","docCustomIdNumber","docBillTo","docShipTo","docDate","docParticulars","docSubTotal","docVatFee","docTotal","docTermsAndCondition","docBLNumber","docSupplier","docContainerNumber","docPackages","docDescription","docGrossWeight","docVolume","docPortOfLoading","docETA","docVesselName","docRoE","docPlaceOfLanding","transactionType","personType","invoiceTypeDesc","invoiceRefIdentifier","downPayment","downPaymentInvoiceNumber","discountTotalAmount","discountedTotalAmount","docSalesTransaction","docReasonStated","docTotalTaxableWithoutVatParticulars","docTotalTaxableVatOnlyParticulars","docTotalTaxableParticulars","docTotalZeroRatedParticulars","docTotalExemptParticulars","docTotalDisbursementParticulars","docTotalExemptBodiesParticulars","docDisbursementParticularsData","invJobRef","invStorageFee","invScanningFee","invGatePassFee","invVehicleNo","transportFees","transportDesc","invApplyVat","docShipper","docMarkNos","docCommodity","docHbl","docDepot","a","setLoading","checkIfCustomDocumentIdPresentInDB","id","isPresentInDB","error","message","variant","performUpdateTransaction","keywords","updatedDocId","storedKeywords","remainingPaymentAmount","Number","data","attachedPaymentNumber","length","forEach","paymentDone","paymentAmount","documentTemplate","allDescriptionString","map","particular","rowDescription","description","particularSplit","split","newParticularSplit","push","toLowerCase","Set","customTransportDocParticularsToSave","valueList","documentData","docQuoteNumber","docPurchaseOrderNumber","docRemainingPaymentAmt","firebase","firestore","Timestamp","fromDate","Date","updatedByUserId","updatedByUserEmail","email","updatedByUserTime","process","REACT_APP_CUSTOM_SMART_PROMOTE_ID","row","inventoryItemData","db","collection","doc","get","then","exists","allInventoryItemTransactionsData","allInventoryItemTransactions","isDocFoundIndex","findIndex","transaction","docString","docType","totalQtySold","qtySold","totalQtyRemaining","qtyRemaining","rowQty","newTotalAmountReceivedWithoutVAT","totalAmountReceivedWithoutVAT","newTotalAmountReceivedWithVAT","totalAmountReceivedWithVAT","vatAmount","rowDiscountedAmount","rowAmount","OldQtySold","itemQtySold","rowAmountWithVAT","remainingQty","newTotalQtySold","actualRemainingStockAmount","rowDiscountAmount","rowUnitPrice","documentNumber","docTitle","itemId","set","toFixed","merge","catch","documentTypeId","documentTypeTitle","err","color","onClick","updateDocument","fullWidth","disabled","title"],"mappings":"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","file":"static/js/67.5f9ec4e5.chunk.js","sourcesContent":["import { Button } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport { selectDocument } from \"../../features/documentSlice\";\nimport { checkIfCustomDocumentIdPresentInDB } from \"../core-functions/SelectionCoreFunctions\";\nimport { useSnackbar } from \"notistack\";\nimport db from \"../../firebase\";\nimport firebase from \"firebase/compat\";\nimport useAuth from \"../../hooks/useAuth\";\n\nexport default function DocumentUpdateButton({\n  updateDocumentData,\n  documentDetails,\n  us_s_quotationNumber,\n  us_s_purchaseOrderNumber,\n  handleCloseUpdateDialog,\n  displayDiscountColumns,\n}) {\n  const { user } = useAuth();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const { documentType, companyIdSelected, companyDetails } =\n    useSelector(selectDocument);\n\n  const {\n    docCustomIdNumber,\n    docBillTo,\n    docShipTo,\n    docDate,\n    docParticulars,\n    docSubTotal,\n    docVatFee,\n    docTotal,\n    docTermsAndCondition,\n\n    //custom details\n    docBLNumber,\n    docSupplier,\n    docContainerNumber,\n    docPackages,\n    docDescription,\n    docGrossWeight,\n    docVolume,\n    docPortOfLoading,\n    docETA,\n    docVesselName,\n    docRoE,\n    docPlaceOfLanding,\n\n    // MRA customs\n    transactionType,\n    personType,\n    invoiceTypeDesc,\n    invoiceRefIdentifier,\n    downPayment,\n    downPaymentInvoiceNumber,\n    discountTotalAmount,\n    discountedTotalAmount,\n    docSalesTransaction,\n    docReasonStated,\n\n    // Fadil customs\n    docTotalTaxableWithoutVatParticulars,\n    docTotalTaxableVatOnlyParticulars,\n    docTotalTaxableParticulars,\n    docTotalZeroRatedParticulars,\n    docTotalExemptParticulars,\n    docTotalDisbursementParticulars,\n    docTotalExemptBodiesParticulars,\n    docDisbursementParticularsData,\n\n    invJobRef,\n    invStorageFee,\n    invScanningFee,\n    invGatePassFee,\n    invVehicleNo,\n    transportFees,\n    transportDesc,\n    invApplyVat,\n\n    // flexitrans customs\n    docShipper,\n    docMarkNos,\n    docCommodity,\n    docHbl,\n    docDepot,\n  } = documentDetails;\n\n  async function updateDocument() {\n    dispatch(setLoading(true));\n\n    if (docCustomIdNumber) {\n      // check if custom document Id is already present in database\n      let isPresentInDB = await checkIfCustomDocumentIdPresentInDB(\n        docCustomIdNumber,\n        companyIdSelected,\n        documentType?.id\n      );\n\n      if (isPresentInDB?.error) {\n        enqueueSnackbar(isPresentInDB?.message, { variant: \"error\" });\n      } else {\n        performUpdateTransaction(\n          updateDocumentData?.id,\n          updateDocumentData?.keywords || []\n        );\n      }\n    } else {\n      performUpdateTransaction(\n        updateDocumentData.id,\n        updateDocumentData?.keywords || []\n      );\n    }\n  }\n\n  async function performUpdateTransaction(updatedDocId, storedKeywords) {\n    // calculate remaining payment amount\n    let remainingPaymentAmount = Number(docTotal);\n    if (\n      updateDocumentData?.data?.attachedPaymentNumber &&\n      updateDocumentData?.data?.attachedPaymentNumber?.length > 0\n    ) {\n      updateDocumentData?.data?.attachedPaymentNumber.forEach((paymentDone) => {\n        remainingPaymentAmount =\n          remainingPaymentAmount - Number(paymentDone?.paymentAmount);\n      });\n    }\n\n    let keywords = [...storedKeywords];\n\n    if (companyDetails?.data?.documentTemplate !== \"transport\") {\n      let allDescriptionString = \"\";\n      let allDescriptions = docParticulars.map(\n        (particular) => particular?.rowDescription || \"\"\n      );\n      allDescriptions.forEach(async (description) => {\n        if (description && description !== \"\") {\n          allDescriptionString = allDescriptionString + \" \" + description;\n        }\n      });\n\n      if (allDescriptionString) {\n        const particularSplit = allDescriptionString.split(\" \");\n\n        let newParticularSplit = [];\n        particularSplit.forEach((particular) => {\n          newParticularSplit.push(particular.toLowerCase());\n        });\n\n        keywords = [...keywords, ...newParticularSplit];\n      }\n\n      keywords = [...new Set(keywords)];\n    }\n\n    let customTransportDocParticularsToSave = [];\n    if (companyDetails?.data?.documentTemplate === \"transport\") {\n      if (docParticulars?.length > 0) {\n        docParticulars.forEach((particular) => {\n          customTransportDocParticularsToSave.push({\n            ...particular,\n            valueList: [],\n          });\n        });\n      }\n    }\n\n    let documentData = {\n      docQuoteNumber: us_s_quotationNumber || \"\",\n      docPurchaseOrderNumber: us_s_purchaseOrderNumber || \"\",\n      docParticulars:\n        companyDetails?.data?.documentTemplate === \"transport\"\n          ? customTransportDocParticularsToSave\n          : docParticulars,\n      docSubTotal: docSubTotal,\n      docVatFee: docVatFee,\n      docTotal: docTotal,\n      docRemainingPaymentAmt: remainingPaymentAmount,\n      docBillTo: docBillTo,\n      docShipTo: docShipTo,\n      docTermsAndCondition: docTermsAndCondition || \"\",\n      docCustomIdNumber: docCustomIdNumber,\n      docDate: firebase.firestore.Timestamp.fromDate(new Date(docDate)),\n      keywords: keywords,\n\n      // MRA customs\n      transactionType: transactionType || null,\n      personType: personType || null,\n      invoiceTypeDesc: invoiceTypeDesc || null,\n      invoiceRefIdentifier: invoiceRefIdentifier || \"\",\n      downPayment: downPayment || 0,\n      downPaymentInvoiceNumber: downPaymentInvoiceNumber || \"\",\n      discountTotalAmount: discountTotalAmount || 0,\n      discountedTotalAmount: discountedTotalAmount || 0,\n      docSalesTransaction: docSalesTransaction || null,\n      docReasonStated: docReasonStated || \"\",\n\n      displayDiscountColumns: displayDiscountColumns || false,\n\n      updatedByUserId: user?.id || \"\",\n      updatedByUserEmail: user?.email || \"\",\n      updatedByUserTime: new Date(),\n    };\n\n    if (companyDetails?.data?.documentTemplate === \"transport\") {\n      documentData = {\n        ...documentData,\n        // transport template\n        invJobRef: invJobRef || \"\",\n        invStorageFee: invStorageFee || \"\",\n        invScanningFee: invScanningFee || \"\",\n        invGatePassFee: invGatePassFee || \"\",\n        invVehicleNo: invVehicleNo || \"\",\n        transportFees: transportFees || \"\",\n        transportDesc: transportDesc || \"\",\n        invApplyVat: invApplyVat || false,\n      };\n    } else if (companyDetails?.data?.documentTemplate === \"flexitrans\") {\n      documentData = {\n        ...documentData,\n        //custom details\n        docBLNumber: docBLNumber || \"\",\n        docSupplier: docSupplier || \"\",\n        docContainerNumber: docContainerNumber || \"\",\n        docPackages: docPackages || \"\",\n        docDescription: docDescription || \"\",\n        docGrossWeight: docGrossWeight || \"\",\n        docVolume: docVolume || \"\",\n        docPortOfLoading: docPortOfLoading || \"\",\n        docETA: docETA || \"\",\n        docVesselName: docVesselName || \"\",\n        docRoE: docRoE || \"\",\n        docPlaceOfLanding: docPlaceOfLanding || \"\",\n\n        //Fadil customs\n        docTotalTaxableWithoutVatParticulars:\n          docTotalTaxableWithoutVatParticulars || \"\",\n        docTotalTaxableVatOnlyParticulars:\n          docTotalTaxableVatOnlyParticulars || \"\",\n        docTotalTaxableParticulars: docTotalTaxableParticulars || \"\",\n        docTotalZeroRatedParticulars: docTotalZeroRatedParticulars || \"\",\n        docTotalExemptParticulars: docTotalExemptParticulars || \"\",\n        docTotalDisbursementParticulars: docTotalDisbursementParticulars || \"\",\n        docTotalExemptBodiesParticulars: docTotalExemptBodiesParticulars || \"\",\n        docDisbursementParticularsData: docDisbursementParticularsData || [],\n\n        // flexitrans customs\n        docShipper: docShipper || \"\",\n        docMarkNos: docMarkNos || \"\",\n        docCommodity: docCommodity || \"\",\n        docHbl: docHbl || \"\",\n        docDepot: docDepot || \"\",\n      };\n    }\n\n    if (\n      companyDetails?.id === process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID &&\n      (documentType?.id === \"proforma\" ||\n        documentType?.id === \"invoice\" ||\n        documentType?.id === \"vat_invoice\" ||\n        documentType?.id === \"cash_transaction\")\n    ) {\n      // update stock\n      let docParticulars = [...(documentData?.docParticulars || [])];\n      docParticulars.forEach(async (row) => {\n        if (row?.inventoryItemData) {\n          // update qty sold and quantity remaining\n\n          // get latest stock remaining amount\n          await db\n            .collection(\"company\")\n            .doc(companyDetails?.id)\n            .collection(\"inventory\")\n            .doc(row?.inventoryItemData?.id)\n            .get()\n            .then(async (doc) => {\n              if (doc.exists) {\n                // get previous transactions for that inventory\n                let allInventoryItemTransactionsData =\n                  doc?.data()?.allInventoryItemTransactions || [];\n\n                // check the qty sold for that item with the same doc id\n                let isDocFoundIndex = -1;\n\n                if (allInventoryItemTransactionsData.length > 0) {\n                  isDocFoundIndex = allInventoryItemTransactionsData.findIndex(\n                    (transaction) =>\n                      transaction.docString === updatedDocId &&\n                      transaction?.docType === documentType?.id\n                  );\n                }\n\n                let totalQtySold = Number(doc?.data()?.qtySold || 0);\n                let totalQtyRemaining = Number(doc?.data()?.qtyRemaining || 0);\n                let qtySold = Number(row?.rowQty || 0); // new updated qty\n\n                let newTotalAmountReceivedWithoutVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithoutVAT || 0\n                );\n                let newTotalAmountReceivedWithVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithVAT || 0\n                );\n\n                let vatAmount = 0;\n                if (doc?.data()?.invApplyVat) {\n                  vatAmount =\n                    Number(row?.rowDiscountedAmount || row?.rowAmount || 0) *\n                    1.15;\n                }\n\n                if (isDocFoundIndex > -1) {\n                  // get the qty Sold\n                  let OldQtySold = Number(\n                    allInventoryItemTransactionsData[isDocFoundIndex]\n                      ?.itemQtySold || 0\n                  );\n\n                  // rebuild total qty\n                  totalQtyRemaining = totalQtyRemaining + OldQtySold;\n\n                  totalQtySold = totalQtySold - OldQtySold;\n\n                  // remove old values from total\n                  newTotalAmountReceivedWithoutVAT =\n                    newTotalAmountReceivedWithoutVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowDiscountedAmount ||\n                        allInventoryItemTransactionsData[isDocFoundIndex]\n                          ?.rowAmount ||\n                        0\n                    );\n\n                  newTotalAmountReceivedWithVAT =\n                    newTotalAmountReceivedWithVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowAmountWithVAT || 0\n                    );\n                }\n\n                // remove new values from total\n                newTotalAmountReceivedWithoutVAT =\n                  newTotalAmountReceivedWithoutVAT +\n                  Number(row?.rowDiscountedAmount || row?.rowAmount || 0);\n\n                newTotalAmountReceivedWithVAT =\n                  newTotalAmountReceivedWithVAT + vatAmount;\n\n                // calculate new remaining qty\n                let remainingQty = totalQtyRemaining - qtySold;\n\n                // calculate new total qty sold\n                let newTotalQtySold = qtySold + totalQtySold;\n\n                let allInventoryItemTransactions = [\n                  ...(doc?.data()?.allInventoryItemTransactions || []),\n                ];\n\n                if (isDocFoundIndex > -1) {\n                  // update data if already present\n                  allInventoryItemTransactions = [\n                    ...(allInventoryItemTransactionsData || []),\n                  ];\n                  allInventoryItemTransactions[isDocFoundIndex] = {\n                    ...allInventoryItemTransactions[isDocFoundIndex],\n                    actualRemainingStockAmount: remainingQty,\n                    itemQtySold: qtySold,\n                    rowAmount: row?.rowAmount || 0,\n                    rowDiscountAmount: row?.rowDiscountAmount || 0,\n                    rowDiscountedAmount: row?.rowDiscountedAmount || 0,\n                    rowAmountWithVAT: vatAmount,\n                    rowUnitPrice: row?.rowUnitPrice || 0,\n                  };\n                } else {\n                  // add new entry\n                  allInventoryItemTransactions = [\n                    ...(allInventoryItemTransactionsData || []),\n                  ];\n\n                  allInventoryItemTransactions.push({\n                    documentNumber: documentData?.id,\n                    docString: documentData?.docString,\n                    docCustomIdNumber: documentData?.docCustomIdNumber,\n                    docTitle: documentData?.docTitle,\n                    docType: documentType?.id,\n                    docDate: new Date(),\n                    itemId: row?.inventoryItemData?.id,\n                    rowAmount: row?.rowAmount || 0,\n                    rowDiscountAmount: row?.rowDiscountAmount || 0,\n                    rowDiscountedAmount: row?.rowDiscountedAmount || 0,\n                    rowAmountWithVAT: vatAmount,\n                    rowUnitPrice: row?.rowUnitPrice || 0,\n                  });\n                }\n\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(\"inventory\")\n                  .doc(row?.inventoryItemData?.id)\n                  .set(\n                    {\n                      totalAmountReceivedWithoutVAT: Number(\n                        newTotalAmountReceivedWithoutVAT || 0\n                      ).toFixed(2),\n                      totalAmountReceivedWithVAT: Number(\n                        newTotalAmountReceivedWithVAT || 0\n                      ).toFixed(2),\n                      qtySold: newTotalQtySold || 0,\n                      qtyRemaining: remainingQty || 0,\n                      allInventoryItemTransactions:\n                        allInventoryItemTransactions || [],\n                    },\n                    { merge: true }\n                  )\n                  .then(() => {\n                    enqueueSnackbar(\"Stock updated successfully\");\n                  })\n                  .catch((error) => {\n                    enqueueSnackbar(\n                      `Error occured while updating quantity of inventory item: ${error?.message}`,\n                      { variant: \"error\" }\n                    );\n                  });\n              } else {\n                enqueueSnackbar(\n                  \"Stock could not be updated as item could not be found, please check inventory\",\n                  { variant: \"error\" }\n                );\n              }\n            });\n        }\n      });\n    }\n\n    // update document\n    await db\n      .collection(\"company\")\n      .doc(companyIdSelected)\n      .collection(updateDocumentData?.documentTypeId)\n      .doc(updatedDocId)\n      .set(\n        {\n          ...documentData,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        enqueueSnackbar(\n          `${updateDocumentData?.documentTypeTitle} updated successfully`\n        );\n        if (handleCloseUpdateDialog) {\n          handleCloseUpdateDialog(true);\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while updating ${updateDocumentData?.documentTypeTitle}: ${err?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  return (\n    <>\n      <Button\n        variant={\"contained\"}\n        color={\"primary\"}\n        onClick={() => updateDocument()}\n        fullWidth\n        disabled={!documentDetails?.docTotal}\n      >\n        {`Update ${documentType?.title}`}\n      </Button>\n    </>\n  );\n}\n"],"sourceRoot":""}