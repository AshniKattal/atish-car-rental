{"version":3,"sources":["../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/icons-material/Search.js","pages/dashboard/client-survey/SearchSurveyDialog.js","pages/dashboard/client-survey/ContractAgreementForm.js"],"names":["getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","styled","name","overridesResolver","props","styles","root","width","overflowX","TableContainer","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableHeadUtilityClass","TableHeadRoot","display","tablelvl2","variant","defaultComponent","TableHead","Tablelvl2Context","Provider","value","children","role","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","jsx","d","SearchSurveyDialog","open","setOpen","companyId","collectionName","title","logo","companyDetails","setSurveyDetail","setValue","enqueueSnackbar","useSnackbar","dispatch","useDispatch","useState","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","tableRows","setTableRows","temp_fetchDataRef","useRef","a","setLoading","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","doc","where","firebase","firestore","Timestamp","fromDate","get","then","queryDocs","docs","length","arr","forEach","push","id","data","catch","err","message","row","getDefaultCheckBoxOptions","defaultOptions","treatmentDefinition","controlOfOptions","treatedLocationOptions","controlOfCheckboxList","type","controlOf","locationTreatedCheckboxList","locationTreated","text","prev","customerName","clientSigName","address","email","phone","surveyNumberSelected","clientId","useEffect","current","Dialog","fullWidth","maxWidth","DialogTitle","Typography","DialogContent","Divider","Grid","container","spacing","item","xs","md","style","Stack","direction","alignItems","DatePicker","label","onChange","newValue","renderInput","params","TextField","size","inputFormat","Table","border","TableRow","TableCell","align","TableBody","map","index","Button","color","onClick","chooseDocument","dateCreated","moment","toDate","format","justifyContent","IconButton","handleViewDownloadCustomSurvey","Iconify","icon","DialogActions","LabelStyle","theme","typography","subtitle1","palette","secondary","marginBottom","editableTextFieldsDefinitions","sizeXs","sizeMd","editableTextFieldsPeriodOfContract","editableTextFieldsCost","editableTextFieldsDefinitionOfTreatment","ContractAgreementForm","clientList","clientDocumentObjectSelected","setClientDocumentObjectSelected","dialogType","surveyDetail","temp_richTextChangeRef","openSearchSurveyDialog","setOpenSearchSurveyDialog","NewProductSchema","Yup","shape","required","specialMentions","defaultValues","useMemo","methods","useForm","resolver","yupResolver","watch","values","previous","startIcon","Autocomplete","ListboxProps","maxHeight","options","e","reason","preventDefault","phoneText","contactNumber","mobileNumber","getOptionLabel","option","inputField","event","target","disabled","simple"],"mappings":"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","file":"static/js/45.7a7fae88.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import { DatePicker } from \"@mui/lab\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport db from \"src/firebase\";\nimport firebase from \"firebase/compat\";\nimport moment from \"moment\";\nimport Iconify from \"src/components/Iconify\";\nimport {\n  getDefaultCheckBoxOptions,\n  handleViewDownloadCustomSurvey,\n} from \"src/components/core-functions/SelectionCoreFunctions\";\n\nexport default function SearchSurveyDialog({\n  open,\n  setOpen,\n  companyId,\n  collectionName,\n  title,\n  logo,\n  companyDetails,\n  setSurveyDetail,\n  setValue,\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const temp_fetchDataRef = useRef();\n\n  useEffect(() => {\n    temp_fetchDataRef.current();\n  }, [companyId, collectionName, us_fromDate, us_ToDate]);\n\n  async function fetchData() {\n    if (companyId && collectionName && us_fromDate && us_ToDate) {\n      dispatch(setLoading(true));\n\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else {\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyId)\n          .collection(collectionName)\n          .where(\n            \"dateCreated\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"dateCreated\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((queryDocs) => {\n            if (queryDocs?.docs?.length > 0) {\n              let arr = [];\n              queryDocs?.docs.forEach((doc) => {\n                arr.push({\n                  id: doc?.id,\n                  data: { ...doc?.data() },\n                });\n              });\n              setTableRows(arr);\n              dispatch(setLoading(false));\n            } else {\n              setTableRows([]);\n              dispatch(setLoading(false));\n            }\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching clients: ${err?.message}`\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    }\n  }\n\n  temp_fetchDataRef.current = fetchData;\n\n  async function chooseDocument(row) {\n    let defaultOptions = await getDefaultCheckBoxOptions();\n\n    let treatmentDefinition = \"\";\n\n    let controlOfOptions = [];\n    let treatedLocationOptions = [];\n\n    defaultOptions.controlOfCheckboxList.forEach((type) => {\n      if (row?.data?.controlOf[type.name] === true) {\n        /* treatmentDefinition =\n          treatmentDefinition + `<ul><li>${type?.title}</li><ul>`; */\n        controlOfOptions.push(type?.title);\n      }\n    });\n\n    defaultOptions.locationTreatedCheckboxList.forEach((type) => {\n      if (row?.data?.locationTreated[type.name] === true) {\n        /*  treatmentDefinition =\n          treatmentDefinition + `<ul><li>${type?.title}</li><li></li>`; */\n        treatedLocationOptions.push(type?.title);\n      }\n    });\n\n    if (controlOfOptions && controlOfOptions?.length > 0) {\n      treatmentDefinition =\n        treatmentDefinition + \"<p>Pest to be controlled:</p><p><br></p>\";\n\n      treatmentDefinition = treatmentDefinition + \"<ul>\";\n\n      controlOfOptions.forEach((text) => {\n        treatmentDefinition = treatmentDefinition + `<li>${text}</li>`;\n      });\n\n      treatmentDefinition = treatmentDefinition + \"</ul>\";\n    }\n\n    if (treatedLocationOptions && treatedLocationOptions?.length > 0) {\n      treatmentDefinition = treatmentDefinition + \"<p><br></p>\";\n\n      treatmentDefinition =\n        treatmentDefinition + \"<p>Area to be controlled:</p><p><br></p>\";\n\n      treatmentDefinition = treatmentDefinition + \"<ul>\";\n\n      treatedLocationOptions.forEach((text) => {\n        treatmentDefinition = treatmentDefinition + `<li>${text}</li>`;\n      });\n\n      treatmentDefinition = treatmentDefinition + \"</ul>\";\n    }\n\n    treatmentDefinition = treatmentDefinition + \"<p><br></p>\";\n\n    setSurveyDetail((prev) => {\n      return {\n        ...prev,\n        customerName: row?.data?.customerName || \"\",\n        clientSigName: row?.data?.customerName || \"\",\n        address: row?.data?.address || \"\",\n        email: row?.data?.email || \"\",\n        phone: row?.data?.phone || \"\",\n        surveyNumberSelected: row?.id,\n        treatmentDefinition: treatmentDefinition,\n        clientId: row?.data?.clientId || \"\",\n      };\n    });\n\n    if (setValue) {\n      setValue(\"treatmentDefinition\", treatmentDefinition);\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <Dialog open={open} fullWidth maxWidth={\"md\"}>\n        <DialogTitle>\n          <Typography>Search {title}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Divider />\n          <br />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <Typography>Please choose a date</Typography>\n            </Grid>\n\n            <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n              <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n                <DatePicker\n                  label=\"From\"\n                  value={us_fromDate || \"\"}\n                  onChange={(newValue) => {\n                    set_us_fromDate(newValue);\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" />\n                  )}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n\n                <DatePicker\n                  label=\"To\"\n                  value={us_ToDate || \"\"}\n                  onChange={(newValue) => {\n                    set_us_ToDate(newValue);\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} size=\"small\" />\n                  )}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n              </Stack>\n            </Grid>\n          </Grid>\n\n          {tableRows && tableRows?.length > 0 ? (\n            <>\n              <br />\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\" align=\"center\">\n                        Choose\n                      </TableCell>\n                      <TableCell size=\"small\" align=\"center\">\n                        Date Created\n                      </TableCell>\n                      <TableCell size=\"small\" align=\"center\">\n                        {title} number\n                      </TableCell>\n                      <TableCell size=\"small\" align=\"center\">\n                        Customer name\n                      </TableCell>\n                      <TableCell size=\"small\" align=\"center\">\n                        View/Download PDF\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {tableRows &&\n                      tableRows?.length > 0 &&\n                      tableRows?.map((row, index) => (\n                        <TableRow key={index}>\n                          <TableCell size=\"small\" align=\"center\">\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => chooseDocument(row)}\n                            >\n                              Choose\n                            </Button>\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"center\">\n                            {row?.data?.dateCreated\n                              ? moment(row?.data?.dateCreated.toDate()).format(\n                                  \"DD-MM-YYYY HH:mm:ss\"\n                                )\n                              : \"\"}\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"center\">\n                            {row?.id || \"\"}\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"center\">\n                            {row?.data?.customerName || \"\"}\n                          </TableCell>\n                          <TableCell size=\"small\" align=\"center\">\n                            <Stack\n                              spacing={2}\n                              direction={\"row\"}\n                              alignItems={\"center\"}\n                              justifyContent={\"center\"}\n                            >\n                              <IconButton\n                                color=\"primary\"\n                                onClick={() =>\n                                  handleViewDownloadCustomSurvey(\n                                    companyDetails,\n                                    \"view\",\n                                    row?.data,\n                                    collectionName,\n                                    logo\n                                  )\n                                }\n                              >\n                                <Iconify icon={\"carbon:view\"} />\n                              </IconButton>\n\n                              <IconButton\n                                color=\"primary\"\n                                onClick={() =>\n                                  handleViewDownloadCustomSurvey(\n                                    \"download\",\n                                    row?.data,\n                                    collectionName,\n                                    logo\n                                  )\n                                }\n                              >\n                                <Iconify icon={\"eva:download-fill\"} />\n                              </IconButton>\n                            </Stack>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </>\n          ) : (\n            <>\n              <br />\n              <Typography>No data found for the selected date</Typography>\n            </>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import {\n  Autocomplete,\n  Button,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { FormProvider, RHFEditor } from \"src/components/hook-form\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport SearchSurveyDialog from \"./SearchSurveyDialog\";\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle1,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\nconst editableTextFieldsDefinitions = [\n  {\n    id: \"customerName\",\n    label: \"The Customer\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"nic\",\n    label: \"ID\",\n    sizeXs: 12,\n    sizeMd: 4,\n  },\n  {\n    id: \"brn\",\n    label: \"BRN\",\n    sizeXs: 12,\n    sizeMd: 4,\n  },\n  {\n    id: \"tan\",\n    label: \"VAT\",\n    sizeXs: 12,\n    sizeMd: 4,\n  },\n  {\n    id: \"address\",\n    label: \"Address\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"contactNumber\",\n    label: \"Phone number\",\n    sizeXs: 12,\n    sizeMd: 6,\n  },\n  {\n    id: \"email\",\n    label: \"Email address\",\n    sizeXs: 12,\n    sizeMd: 6,\n  },\n  {\n    id: \"representative\",\n    label: \"Representative\",\n    sizeXs: 12,\n    sizeMd: 6,\n  },\n  {\n    id: \"designation\",\n    label: \"Designation\",\n    sizeXs: 12,\n    sizeMd: 6,\n  },\n  {\n    id: \"quoteRef\",\n    label: \"Quote Ref\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"siteAddress\",\n    label: \"Site address\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n];\n\nconst editableTextFieldsPeriodOfContract = [\n  {\n    id: \"commencementPeriod\",\n    label: \"Commencement period\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"terms\",\n    label: \"Terms\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"serviceType\",\n    label: \"Service type\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"noOfIntervention\",\n    label: \"No. of intervention:\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"installationRequirement\",\n    label: \"Installation requirement\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"additional\",\n    label: \"Additionals\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n];\n\nconst editableTextFieldsCost = [\n  {\n    id: \"annualTotalAmt\",\n    label: \"Annual Total amount\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n  {\n    id: \"termsOfPayment\",\n    label: \"Terms of Payment\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n];\n\nconst editableTextFieldsDefinitionOfTreatment = [\n  {\n    id: \"treatmentDefinition\",\n    label: \"Description of treatment\",\n    sizeXs: 12,\n    sizeMd: 12,\n  },\n\n  /*   {\n    id: \"specialMentions\",\n    label: \"Special mentions\",\n    sizeXs: 12,\n    sizeMd: 12,\n  }, */\n];\n\nexport default function ContractAgreementForm({\n  clientList,\n  clientDocumentObjectSelected,\n  setClientDocumentObjectSelected,\n  companyId,\n  dialogType,\n  surveyDetail,\n  setSurveyDetail,\n  logo,\n  companyDetails,\n}) {\n  const temp_richTextChangeRef = useRef();\n\n  const [openSearchSurveyDialog, setOpenSearchSurveyDialog] = useState(false);\n\n  const NewProductSchema = Yup.object().shape({\n    treatmentDefinition: Yup.string().required(\n      \"Description of treatment is required\"\n    ),\n    specialMentions: Yup.string().required(\"Special mentions is required\"),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      treatmentDefinition:\n        dialogType === \"update\" || dialogType === \"view\"\n          ? surveyDetail?.treatmentDefinition\n          : \"\",\n      specialMentions:\n        dialogType === \"update\" || dialogType === \"view\"\n          ? surveyDetail?.specialMentions\n          : \"\",\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewProductSchema),\n    defaultValues,\n  });\n\n  const { watch, setValue } = methods;\n\n  const values = watch();\n\n  useEffect(() => {\n    temp_richTextChangeRef.current();\n  }, [values.treatmentDefinition, values.specialMentions]);\n\n  function richTextChange() {\n    if (values && values.treatmentDefinition) {\n      setSurveyDetail((previous) => {\n        return {\n          ...previous,\n          treatmentDefinition: values.treatmentDefinition,\n        };\n      });\n    } else if (values && values.treatmentDefinition === \"\") {\n      setSurveyDetail((previous) => {\n        return {\n          ...previous,\n          treatmentDefinition: \"\",\n        };\n      });\n    }\n\n    if (values && values.specialMentions) {\n      setSurveyDetail((previous) => {\n        return {\n          ...previous,\n          specialMentions: values.specialMentions,\n        };\n      });\n    } else if (values && values.specialMentions === \"\") {\n      setSurveyDetail((previous) => {\n        return {\n          ...previous,\n          specialMentions: \"\",\n        };\n      });\n    }\n  }\n\n  temp_richTextChangeRef.current = richTextChange;\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setOpenSearchSurveyDialog(true)}\n            size=\"large\"\n            startIcon={<SearchIcon />}\n          >\n            Search existing Survey\n          </Button>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Autocomplete\n            ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n            size=\"small\"\n            label=\"Please choose a client\"\n            id=\"client-drop-down\"\n            options={clientList || []}\n            value={clientDocumentObjectSelected || null}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Please choose a client\"\n                size=\"large\"\n              />\n            )}\n            onChange={(e, value, reason) => {\n              e.preventDefault();\n              if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                let phoneText = \"\";\n                if (value?.data?.contactNumber && value?.data?.mobileNumber) {\n                  phoneText = `${value?.data?.contactNumber} / ${value?.data?.mobileNumber}`;\n                } else {\n                  phoneText =\n                    value?.data?.contactNumber ||\n                    value?.data?.mobileNumber ||\n                    \"\";\n                }\n\n                setSurveyDetail((prev) => {\n                  return {\n                    ...prev,\n                    customerName: value?.data?.name || \"\",\n                    clientSigName: value?.data?.name || \"\",\n                    address: value?.data?.address || \"\",\n                    email: value?.data?.email || \"\",\n                    phone: phoneText || \"\",\n                  };\n                });\n\n                setClientDocumentObjectSelected(value);\n              } else if (reason === \"removeOption\" || reason === \"clear\") {\n                setSurveyDetail((prev) => {\n                  return {\n                    ...prev,\n                    customerName: \"\",\n                    clientSigName: \"\",\n                    address: \"\",\n                    email: \"\",\n                    phone: \"\",\n                  };\n                });\n\n                setClientDocumentObjectSelected(null);\n              }\n            }}\n            getOptionLabel={(option) => option?.name || \"\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Typography variant=\"h5\">Definitions</Typography>\n        </Grid>\n\n        {editableTextFieldsDefinitions &&\n          editableTextFieldsDefinitions?.map((inputField, index) => (\n            <Grid\n              item\n              xs={inputField?.sizeXs}\n              md={inputField?.sizeMd}\n              key={index}\n            >\n              <TextField\n                variant=\"outlined\"\n                name={inputField?.id}\n                label={inputField?.label}\n                id={inputField?.id}\n                type=\"text\"\n                value={surveyDetail[inputField?.id] || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      [inputField?.id]: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n          ))}\n\n        <Grid item xs={12} md={12}>\n          <br />\n          <Divider />\n          <br />\n          <Typography variant=\"h5\">\n            Period of Contract and frequency of Services\n          </Typography>\n        </Grid>\n\n        {editableTextFieldsPeriodOfContract &&\n          editableTextFieldsPeriodOfContract?.map((inputField, index) => (\n            <Grid\n              item\n              xs={inputField?.sizeXs}\n              md={inputField?.sizeMd}\n              key={index}\n            >\n              <TextField\n                variant=\"outlined\"\n                name={inputField?.id}\n                label={inputField?.label}\n                id={inputField?.id}\n                type=\"text\"\n                value={surveyDetail[inputField?.id] || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      [inputField?.id]: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n          ))}\n\n        <Grid item xs={12} md={12}>\n          <br />\n          <Divider />\n          <br />\n          <Typography variant=\"h5\">Cost</Typography>\n        </Grid>\n\n        {editableTextFieldsCost &&\n          editableTextFieldsCost?.map((inputField, index) => (\n            <Grid\n              item\n              xs={inputField?.sizeXs}\n              md={inputField?.sizeMd}\n              key={index}\n            >\n              <TextField\n                variant=\"outlined\"\n                name={inputField?.id}\n                label={inputField?.label}\n                id={inputField?.id}\n                type=\"text\"\n                value={surveyDetail[inputField?.id] || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      [inputField?.id]: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n          ))}\n\n        <Grid item xs={12} md={12}>\n          <br />\n          <Divider />\n          <br />\n          <Typography variant=\"h5\">Description of treatment</Typography>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <FormProvider methods={methods}>\n            <Grid container spacing={3}>\n              {editableTextFieldsDefinitionOfTreatment &&\n                editableTextFieldsDefinitionOfTreatment?.map(\n                  (inputField, index) => (\n                    <Grid\n                      item\n                      xs={inputField?.sizeXs}\n                      md={inputField?.sizeMd}\n                      key={index}\n                    >\n                      <LabelStyle>{inputField?.label}</LabelStyle>\n                      <RHFEditor\n                        simple={false}\n                        name={inputField?.id}\n                        disabled={dialogType === \"view\"}\n                      />\n                    </Grid>\n                  )\n                )}\n            </Grid>\n          </FormProvider>\n        </Grid>\n      </Grid>\n\n      {openSearchSurveyDialog && (\n        <SearchSurveyDialog\n          companyId={companyId}\n          open={openSearchSurveyDialog}\n          setOpen={setOpenSearchSurveyDialog}\n          title=\"Survey\"\n          collectionName=\"survey\"\n          logo={logo}\n          companyDetails={companyDetails}\n          setSurveyDetail={setSurveyDetail}\n          setValue={setValue}\n        />\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}