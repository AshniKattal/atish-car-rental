{"version":3,"sources":["../node_modules/@mui/icons-material/FindInPage.js","components/document/quotation-purchase-order-list-dialog/QuotationOrPurchaseOrderInputField.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","QuotationOrPurchaseOrderListDialog","lazy","QuotationOrPurchaseOrderInputField","fieldType","us_doc_number","set_us_doc_number","classes","logo","sigImage","documentDetails","setDocumentDetails","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","selectDocument","companyIdSelected","clientDocumentObjectSelected","useState","dialogListType","setDialogListType","us_open_DocumentListDialog","set_us_open_DocumentListDialog","a","variant","setLoading","formatDocumentIdNumber","documentNumberDocString","db","collection","doc","get","then","exists","id","data","clientId","docBillTo","docShipTo","docParticulars","docSubTotal","docTotal","docVatFee","docTermsAndCondition","catch","error","message","direction","spacing","alignItems","name","label","type","size","fullWidth","InputProps","className","input","onChange","e","target","onKeyUp","key","onHandleManualQuoteSubmit","color","onClick","fallback","open","setType","setOpen"],"mappings":"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","file":"static/js/52.017248da.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3\"\n}), 'FindInPage');","import { IconButton, Stack, TextField } from \"@mui/material\";\nimport FindInPageIcon from \"@mui/icons-material/FindInPage\";\nimport { lazy, useState, Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDocument } from \"../../../features/documentSlice\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport { formatDocumentIdNumber } from \"../../core-functions/SelectionCoreFunctions\";\nimport db from \"src/firebase\";\n\nconst QuotationOrPurchaseOrderListDialog = lazy(() =>\n  import(\"./QuotationOrPurchaseOrderListDialog\")\n);\n\nexport default function QuotationOrPurchaseOrderInputField({\n  fieldType,\n  us_doc_number,\n  set_us_doc_number,\n  classes,\n  logo,\n  sigImage,\n  documentDetails,\n  setDocumentDetails,\n}) {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { companyIdSelected, clientDocumentObjectSelected } =\n    useSelector(selectDocument);\n\n  const [dialogListType, setDialogListType] = useState(\"\");\n\n  const [us_open_DocumentListDialog, set_us_open_DocumentListDialog] =\n    useState(false);\n\n  async function onHandleManualQuoteSubmit() {\n    if (!us_doc_number) {\n      enqueueSnackbar(\"Please provide a quotation number\", {\n        variant: \"error\",\n      });\n    } else {\n      dispatch(setLoading(true));\n\n      let documentNumberDocString = await formatDocumentIdNumber(us_doc_number);\n\n      await db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(fieldType)\n        .doc(documentNumberDocString)\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            if (\n              clientDocumentObjectSelected &&\n              clientDocumentObjectSelected?.id !== doc?.data()?.clientId\n            ) {\n              enqueueSnackbar(\n                \"The quotation number you have selected does not match with the client you have selected above.\",\n                { variant: \"error\" }\n              );\n\n              dispatch(setLoading(false));\n            } else {\n              enqueueSnackbar(\"Quotation found\", {\n                variant: \"success\",\n              });\n\n              // set document data\n              setDocumentDetails({\n                ...documentDetails,\n                docBillTo:\n                  doc?.data()?.docBillTo || documentDetails?.docBillTo || \"\",\n                docShipTo:\n                  doc?.data()?.docShipTo || documentDetails?.docShipTo || \"\",\n                docParticulars: doc?.data()?.docParticulars || [],\n                docSubTotal: doc?.data()?.docSubTotal || 0,\n                docTotal: doc?.data()?.docTotal || 0,\n                docVatFee: doc?.data()?.docVatFee || 0,\n                docTermsAndCondition:\n                  doc?.data()?.docTermsAndCondition ||\n                  documentDetails?.docTermsAndCondition ||\n                  \"\",\n              });\n\n              dispatch(setLoading(false));\n            }\n          } else {\n            enqueueSnackbar(\n              \"Cannot find the quotation number in the database\",\n              { variant: \"warning\" }\n            );\n\n            dispatch(setLoading(false));\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(\n            `Error occured while fetching document: ${error?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  return (\n    <>\n      <Stack direction={\"row\"} spacing={1} alignItems=\"center\">\n        {/*  <Typography style={{ whiteSpace: \"nowrap\" }}>\n          {fieldType === \"quotation\"\n            ? \"Quotation number\"\n            : fieldType === \"purchase_order\"\n            ? \"P.O number\"\n            : \"\"}\n        </Typography> */}\n\n        <TextField\n          variant=\"outlined\"\n          name=\"docNumber\"\n          label={\n            fieldType === \"quotation\"\n              ? \"Quotation number\"\n              : fieldType === \"purchase_order\"\n              ? \"P.O number\"\n              : \"\"\n          }\n          id=\"docNumber\"\n          type=\"text\"\n          value={us_doc_number}\n          size=\"small\"\n          fullWidth\n          InputProps={{ className: classes.input }}\n          onChange={(e) => {\n            set_us_doc_number(e.target.value);\n          }}\n          onKeyUp={(e) => {\n            if (e.key === \"Enter\" && fieldType === \"quotation\") {\n              onHandleManualQuoteSubmit();\n            }\n          }}\n        />\n\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          onClick={() => {\n            setDialogListType(fieldType);\n            set_us_open_DocumentListDialog(true);\n          }}\n        >\n          <FindInPageIcon />\n        </IconButton>\n      </Stack>\n\n      {us_open_DocumentListDialog ? (\n        <Suspense fallback={<></>}>\n          <QuotationOrPurchaseOrderListDialog\n            open={us_open_DocumentListDialog}\n            type={dialogListType}\n            setType={setDialogListType}\n            setOpen={set_us_open_DocumentListDialog}\n            logo={logo}\n            sigImage={sigImage}\n            documentDetails={documentDetails}\n            setDocumentDetails={setDocumentDetails}\n            set_us_doc_number={set_us_doc_number}\n          />\n        </Suspense>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}