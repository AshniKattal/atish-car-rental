{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","../../src/index.ts","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountChangeEmail.js","sections/@dashboard/user/account/AccountGeneral.js","pages/dashboard/UserAccount.js"],"names":["createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","skipSx","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","links","activeLast","currentLink","listDefault","link","LinkItem","listActiveLast","variant","sx","maxWidth","overflow","whiteSpace","textOverflow","Box","bgcolor","href","icon","Link","RouterLink","to","lineHeight","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","capitalCaseTransform","input","toLowerCase","capitalCase","options","delimiter","transform","AccountChangePassword","dispatch","useDispatch","enqueueSnackbar","useSnackbar","user","firebase","auth","currentUser","useState","newPassword","setNewPassword","resetPass","a","setLoading","updatePassword","then","signOut","catch","error","message","Grid","container","justifyContent","item","xs","md","Card","p","Stack","TextField","size","fullWidth","label","type","id","value","onChange","e","Button","AccountChangeEmail","newEmail","setNewEmail","resetEmail","updateEmail","db","collection","doc","set","email","merge","AccountGeneral","useAuth","us_file","set_us_file","UpdateUserSchema","Yup","shape","firstName","required","lastName","defaultValues","contactNumber","photoURL","methods","useForm","resolver","yupResolver","setValue","handleSubmit","isSubmitting","formState","useEffect","onSubmit","data","err","console","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","py","px","textAlign","accept","maxSize","onDrop","helperText","mx","fData","disabled","o_file","undefined","storage","put","on","getDownloadURL","url","rowGap","columnGap","gridTemplateColumns","sm","LoadingButton","loading","UserAccount","themeStretch","useSettings","currentTab","setCurrentTab","ACCOUNT_TABS","Iconify","Page","title","Container","PATH_DASHBOARD","Tabs","scrollButtons","allowScrollButtonsMobile","tab","Tab","disableRipple"],"mappings":"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","file":"static/js/46.19c3a3a6.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import { useSnackbar } from \"notistack\";\n// @mui\nimport {\n  Button,\n  Stack,\n  Card,\n  TextField,\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"../../../../features/globalSlice\";\nimport { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { auth } from \"../../../../firebase\";\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangePassword() {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const user = firebase.auth().currentUser;\n\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const resetPass = async () => {\n    dispatch(setLoading(true));\n    if (newPassword === \"\") {\n      enqueueSnackbar(\"Please provide a new password\", {\n        variant: \"error\",\n      });\n      dispatch(setLoading(false));\n    } else if (newPassword && newPassword?.length < 6) {\n      enqueueSnackbar(\n        \"Please provide a password containing at least 6 characters\",\n        {\n          variant: \"error\",\n        }\n      );\n      dispatch(setLoading(false));\n    } else {\n      user\n        .updatePassword(newPassword)\n        .then(() => {\n          // Update successful.\n          enqueueSnackbar(\n            \"Password updated successfully. Please login again with your new password.\",\n            {\n              variant: \"success\",\n            }\n          );\n          setNewPassword(\"\");\n          dispatch(setLoading(false));\n          auth.signOut();\n        })\n        .catch((error) => {\n          enqueueSnackbar(\n            `An error occured while updating password: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n\n    /*   if (s_email === '') {\n      enqueueSnackbar(\n        'Your email address has not yet been detected. Please login again to the website. May be there is a timeout.',\n        {\n          variant: 'error',\n        }\n      );\n      dispatch(setLoading(false));\n    } else {\n      await auth\n        .sendPasswordResetEmail(s_email)\n        .then(() => {\n          enqueueSnackbar('Reset url has been sent to you by email.');\n          dispatch(setLoading(false));\n        })\n        .catch((error) => {\n          enqueueSnackbar(`Error occured: ${error?.message}`);\n          dispatch(setLoading(false));\n        });\n    } */\n  };\n\n  return (\n    <Grid container justifyContent={\"center\"} alignItems={\"center\"}>\n      <Grid item xs={12} md={6}>\n        <Card sx={{ p: 3 }}>\n          <Stack spacing={5}>\n            <Typography>\n              {/* A reset password email with a reset password link will be sent to the email below. Then you will need to\n              click the url and reset your password. */}\n              Please enter a new password\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              margin=\"normal\"\n              fullWidth\n              name=\"newPassword\"\n              label=\"New password\"\n              type=\"text\"\n              id=\"newPassword\"\n              value={newPassword || \"\"}\n              onChange={(e) => setNewPassword(e.target.value)}\n            />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => resetPass()}\n            >\n              Submit\n            </Button>\n          </Stack>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useSnackbar } from \"notistack\";\n// @mui\nimport {\n  Button,\n  Stack,\n  Card,\n  TextField,\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"../../../../features/globalSlice\";\nimport { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport db, { auth } from \"../../../../firebase\";\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangeEmail() {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const user = firebase.auth().currentUser;\n\n  const [newEmail, setNewEmail] = useState(\"\");\n\n  const resetEmail = async () => {\n    dispatch(setLoading(true));\n    if (newEmail === \"\") {\n      enqueueSnackbar(\"Please provide a new email\", {\n        variant: \"error\",\n      });\n      dispatch(setLoading(false));\n    } else {\n      user\n        .updateEmail(newEmail)\n        .then(async () => {\n          // Update successful.\n          db.collection(\"users\")\n            .doc(user?.id)\n            .set({ email: newEmail }, { merge: true })\n            .then(() => {\n              enqueueSnackbar(\n                \"Email updated successfully. Please login again with your new email.\",\n                {\n                  variant: \"success\",\n                }\n              );\n              setNewEmail(\"\");\n              dispatch(setLoading(false));\n              auth.signOut();\n            })\n            .catch((error) => {\n              enqueueSnackbar(\n                `An error occured while updating email in collection users: ${\n                  error?.message || \"\"\n                }`,\n                {\n                  variant: \"error\",\n                }\n              );\n              dispatch(setLoading(false));\n            });\n        })\n        .catch((error) => {\n          enqueueSnackbar(\n            `An error occured while updating email: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  };\n\n  return (\n    <Grid container justifyContent={\"center\"} alignItems={\"center\"}>\n      <Grid item xs={12} md={6}>\n        <Card sx={{ p: 3 }}>\n          <Stack spacing={5}>\n            <Typography>\n              {/* A reset password email with a reset password link will be sent to the email below. Then you will need to\n              click the url and reset your password. */}\n              Please enter a new email\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              margin=\"normal\"\n              fullWidth\n              name=\"newEmail\"\n              label=\"New Email\"\n              type=\"text\"\n              id=\"newEmail\"\n              value={newEmail || \"\"}\n              onChange={(e) => setNewEmail(e.target.value)}\n            />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => resetEmail()}\n            >\n              Submit\n            </Button>\n          </Stack>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as Yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\nimport { useState, useCallback, useEffect } from \"react\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Box, Grid, Card, Stack, Typography, Button } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// hooks\nimport useAuth from \"../../../../hooks/useAuth\";\n// utils\nimport { fData } from \"../../../../utils/formatNumber\";\n// components\nimport {\n  FormProvider,\n  RHFTextField,\n  RHFUploadAvatar,\n} from \"../../../../components/hook-form\";\nimport db, { storage } from \"../../../../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"../../../../features/globalSlice\";\n\n// ----------------------------------------------------------------------\n\nexport default function AccountGeneral() {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { user } = useAuth();\n\n  const [us_file, set_us_file] = useState(null);\n\n  const UpdateUserSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    email: Yup.string().required(\"Email is required\"),\n  });\n\n  const defaultValues = {\n    firstName: user?.firstName || \"\",\n    lastName: user?.lastName || \"\",\n    email: user?.email || \"\",\n    contactNumber: user?.contactNumber || \"\",\n    photoURL: user?.photoURL || \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(UpdateUserSchema),\n    defaultValues,\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  useEffect(() => {\n    if (user && setValue) {\n      setValue(\"firstName\", user?.firstName || \"\");\n      setValue(\"lastName\", user?.lastName || \"\");\n      setValue(\"email\", user?.email || \"\");\n      setValue(\"contactNumber\", user?.contactNumber || \"\");\n      setValue(\"photoURL\", user?.photoURL || \"\");\n    }\n  }, [user, setValue]);\n\n  const onSubmit = async (data) => {\n    try {\n      db.collection(\"users\")\n        .doc(user?.id)\n        .set(\n          {\n            firstName: data?.firstName || \"\",\n            lastName: data?.lastName || \"\",\n            email: data?.email || \"\",\n            contactNumber: data?.contactNumber || \"\",\n            // photoURL: data?.photoURL?.preview || '',\n          },\n          { merge: true }\n        )\n        .then(() => {\n          enqueueSnackbar(\"Update success!\");\n        })\n        .catch((err) => {\n          enqueueSnackbar(`Error occured: ${err?.message}`, {\n            variant: \"error\",\n          });\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      if (file) {\n        set_us_file(file);\n        setValue(\n          \"photoURL\",\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const uploadImage = (o_file) => {\n    if (o_file && o_file?.name !== undefined && o_file?.name !== \"\") {\n      dispatch(setLoading(true));\n      const uploadTask = storage\n        .ref(`images/${user?.id}/${o_file.name}`)\n        .put(o_file);\n      uploadTask.on(\n        \"state_changed\",\n        () => {},\n        (error) => {\n          enqueueSnackbar(`Error occured: ${error}`, { variant: \"error\" });\n          dispatch(setLoading(false));\n        },\n        () => {\n          storage\n            .ref(`images/${user?.id}`)\n            .child(o_file.name)\n            .getDownloadURL()\n            .then((url) => {\n              db.collection(\"users\")\n                .doc(user?.id)\n                .set(\n                  {\n                    photoURL: url || \"\",\n                  },\n                  { merge: true }\n                )\n                .then(() => {\n                  enqueueSnackbar(\"Image saved successfully\");\n                  set_us_file(null);\n                  dispatch(setLoading(false));\n                })\n                .catch((err) => {\n                  enqueueSnackbar(`Error occured: ${err?.message}`, {\n                    variant: \"error\",\n                  });\n                  dispatch(setLoading(false));\n                });\n            });\n        }\n      );\n    } else {\n      enqueueSnackbar(\"Image uploaded could be identified\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card sx={{ py: 10, px: 3, textAlign: \"center\" }}>\n            <RHFUploadAvatar\n              name=\"photoURL\"\n              accept=\"image/*\"\n              maxSize={3145728}\n              onDrop={handleDrop}\n              helperText={\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    mt: 2,\n                    mx: \"auto\",\n                    display: \"block\",\n                    textAlign: \"center\",\n                    color: \"text.secondary\",\n                  }}\n                >\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\n                  <br /> max size of {fData(3145728)}\n                </Typography>\n              }\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={us_file === null}\n              onClick={() => uploadImage(us_file)}\n            >\n              Save image\n            </Button>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              sx={{\n                display: \"grid\",\n                rowGap: 3,\n                columnGap: 2,\n                gridTemplateColumns: {\n                  xs: \"repeat(1, 1fr)\",\n                  sm: \"repeat(2, 1fr)\",\n                },\n              }}\n            >\n              <RHFTextField name=\"firstName\" label=\"First name\" />\n              <RHFTextField name=\"lastName\" label=\"Last name\" />\n              <RHFTextField name=\"email\" label=\"Email Address\" disabled />\n              <RHFTextField name=\"contactNumber\" label=\"Contact number\" />\n            </Box>\n\n            <Stack spacing={3} alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n              >\n                Save Changes\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { capitalCase } from \"change-case\";\nimport { useState } from \"react\";\n// @mui\nimport { Container, Tab, Box, Tabs } from \"@mui/material\";\n// routes\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\n// hooks\nimport useSettings from \"../../hooks/useSettings\";\n// components\nimport Page from \"../../components/Page\";\nimport Iconify from \"../../components/Iconify\";\nimport HeaderBreadcrumbs from \"../../components/HeaderBreadcrumbs\";\n// sections\nimport {\n  AccountGeneral,\n  AccountChangePassword,\n  AccountChangeEmail,\n} from \"../../sections/@dashboard/user/account\";\n\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {\n  const { themeStretch } = useSettings();\n\n  const [currentTab, setCurrentTab] = useState(\"general\");\n\n  const ACCOUNT_TABS = [\n    {\n      value: \"general\",\n      icon: <Iconify icon={\"ic:round-account-box\"} width={20} height={20} />,\n      component: <AccountGeneral />,\n    },\n    {\n      value: \"change_password\",\n      icon: <Iconify icon={\"ic:round-vpn-key\"} width={20} height={20} />,\n      component: <AccountChangePassword />,\n    },\n    {\n      value: \"change_email\",\n      icon: <Iconify icon={\"ic:round-vpn-key\"} width={20} height={20} />,\n      component: <AccountChangeEmail />,\n    },\n  ];\n\n  return (\n    <Page title=\"User: Account Settings\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <HeaderBreadcrumbs\n          heading=\"Account\"\n          links={[\n            { name: \"Dashboard\", href: PATH_DASHBOARD.root },\n            { name: \"Account Settings\" },\n          ]}\n        />\n\n        <Tabs\n          value={currentTab}\n          scrollButtons=\"auto\"\n          variant=\"scrollable\"\n          allowScrollButtonsMobile\n          onChange={(e, value) => setCurrentTab(value)}\n        >\n          {ACCOUNT_TABS.map((tab) => (\n            <Tab\n              disableRipple\n              key={tab.value}\n              label={capitalCase(tab.value)}\n              icon={tab.icon}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n\n        <Box sx={{ mb: 5 }} />\n\n        {ACCOUNT_TABS.map((tab) => {\n          const isMatched = tab.value === currentTab;\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n        })}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}