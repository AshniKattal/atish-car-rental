{"version":3,"sources":["components/table/TableCRUDTemplate.js","pages/car-rental-atish/car-rental/vehicle-detail/VehicleDetail.js"],"names":["useStyles","makeStyles","table","minWidth","tableTitle","fontWeight","tableBtnOption","cursor","tableRow","tableCell","whiteSpace","textOverflow","overflow","tableCellLeft","borderTopLeftRadius","borderBottomLeftRadius","tableCellRight","borderTopRightRadius","borderBottomRightRadius","StyledHeaderTableRow","styled","TableRow","theme","backgroundColor","palette","mode","primary","light","dark","StyledTableRow","lighter","darker","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headers","onRequestSort","style","width","headCell","label","undefined","align","sortDirection","id","active","direction","onClick","property","event","TableCRUDTemplate","companyId","type","aCollection","viewOption","viewBtnFunc","addBtnDisplay","addBtnLabel","addBtnFunc","emptyColMsg","updateBtnDisplay","updateBtnFunc","deleteBtnDisplay","deleteBtnFunc","documentType","logo","companyDetails","fetchClientSurvey","useTheme","dispatch","useDispatch","classes","user","useAuth","enqueueSnackbar","useSnackbar","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","deleteId","setDeleteId","deleteData","setDeleteData","openDel","setOpenDel","us_b_openAbsenceTarifDlg","set_us_b_openAbsenceTarifDlg","us_a_absenceTariff","set_us_a_absenceTariff","Math","min","length","display","paddingBottom","startIcon","color","variant","disabled","permissions","createClientChk","assignedCompanyId","includes","createAdminChk","className","root","sx","mt","p","padding","component","fontSize","border","size","numSelected","onSelectAllClick","target","checked","newSelecteds","n","name","rowCount","slice","object","arr","i","push","value","viewCompChk","tabIndex","title","data","updateClientChk","updateCompChk","updateAdminChk","deleteClientChk","deleteCompChk","deleteAdminChk","obj","indexSec","dateTimeCreated","moment","toDate","format","spacing","alignItems","justifyContent","featuredImage","image","px","overflowX","disabledEffect","alt","src","downloadURL","height","borderRadius","main","background","emailAlreadySent","setLoading","handleMailCustomSurvey","mailResponse","error","message","handleViewDownloadCustomSurvey","icon","minHeight","round","Number","displayType","thousandSeparator","JSON","parse","category","serviceName","rowsPerPageOptions","count","onPageChange","e","onRowsPerPageChange","parseInt","open","keepMounted","onClose","maxWidth","fullWidth","o_abc","txt","qty","CreateUpdateVehicleDialog","lazy","VehicleDetail","themeStretch","useSettings","navigate","useNavigate","temp_initialiseVehiclesRef","useRef","set_lastVisibleId","rows","setRows","vehicleDetails","setVehicleDetails","dialogType","setDialogType","openDialog","setOpenDialog","useEffect","current","initialiseVehicles","db","collection","process","limit","get","then","result","docs","forEach","doc","categoryDisplay","stringify","serviceCategory","plateNumber","price","passengers","luggage","doors","transmission","airConditioning","lastDocId","catch","handleCloseDialog","delete","container","item","xs","md","PATH_DASHBOARD","general","app1","fallback"],"mappings":"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","file":"static/js/53.8b2142af.chunk.js","sourcesContent":["import { Fragment, useState } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\n// import { makeStyles, withStyles } from '@mui/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  TableSortLabel,\n  TablePagination,\n  Typography,\n  Tooltip,\n  IconButton,\n  Card,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Box,\n  useTheme,\n} from \"@mui/material\";\nimport Scrollbar from \"../Scrollbar\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { styled } from \"@mui/material/styles\";\nimport useAuth from \"../../hooks/useAuth\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport Label from \"../Label\";\nimport Iconify from \"../Iconify\";\nimport {\n  handleMailCustomSurvey,\n  handleViewDownloadCustomSurvey,\n} from \"../core-functions/SelectionCoreFunctions\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport Image from \"../Image\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableTitle: {\n    fontWeight: \"bold\",\n  },\n  tableBtnOption: {\n    cursor: \"pointer\",\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableCell: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n  },\n  tableCellLeft: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n  },\n  tableCellRight: {\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n  },\n});\n\nconst StyledHeaderTableRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor:\n    theme?.palette?.mode === \"light\"\n      ? theme?.palette?.primary.light\n      : theme?.palette?.mode === \"dark\"\n      ? theme.palette.primary.dark\n      : \"transparent\",\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(even)\": {\n    backgroundColor:\n      theme?.palette?.mode === \"light\"\n        ? theme?.palette?.primary.lighter\n        : theme?.palette?.mode === \"dark\"\n        ? theme.palette.primary.darker\n        : \"transparent\",\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { headers, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{ width: \"100%\" }}>\n      <StyledHeaderTableRow>\n        {headers &&\n          headers.map((headCell, index) => (\n            <TableCell\n              style={{\n                whiteSpace: \"nowrap\",\n                width:\n                  headCell.label === \"List\" ||\n                  headCell.label === \"View\" ||\n                  headCell.label === \"Update\" ||\n                  headCell.label === \"Delete\"\n                    ? 75\n                    : undefined,\n              }}\n              key={index}\n              align={headCell.label === \"Delete\" ? \"right\" : \"center\"}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              {headCell.label === \"List\" ||\n              headCell.label === \"View\" ||\n              headCell.label === \"Update\" ||\n              headCell.label === \"Delete\" ? (\n                headCell.label\n              ) : (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : \"asc\"}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n      </StyledHeaderTableRow>\n    </TableHead>\n  );\n}\n\nconst TableCRUDTemplate = ({\n  companyId,\n  type,\n  headers,\n  aCollection,\n  viewOption,\n  viewBtnFunc,\n  addBtnDisplay,\n  addBtnLabel,\n  addBtnFunc,\n  emptyColMsg,\n  updateBtnDisplay,\n  updateBtnFunc,\n  deleteBtnDisplay,\n  deleteBtnFunc,\n  documentType,\n  logo,\n  companyDetails,\n  fetchClientSurvey,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { user } = useAuth();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({});\n  const [openDel, setOpenDel] = useState(false);\n\n  const [us_b_openAbsenceTarifDlg, set_us_b_openAbsenceTarifDlg] =\n    useState(false);\n  const [us_a_absenceTariff, set_us_a_absenceTariff] = useState([]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = aCollection.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, aCollection.length - page * rowsPerPage);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div\n        style={{\n          display: addBtnDisplay ? \"\" : \"none\",\n          width: \"100%\",\n          paddingBottom: \"2rem\",\n        }}\n      >\n        <Button\n          startIcon={<AddIcon />}\n          onClick={() => addBtnFunc()}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={\n            type === \"client\" &&\n            user?.permissions?.createClientChk?.assignedCompanyId.includes(\n              companyId\n            )\n              ? false\n              : type === \"company\" /* &&\n                user?.permissions?.createCompChk?.assignedCompanyId.includes(\n                  companyId\n                ) */\n              ? false\n              : type === \"admin\" &&\n                user?.permissions?.createAdminChk?.assignedCompanyId.includes(\n                  companyId\n                )\n              ? false\n              : type === \"survey\" ||\n                type === \"vehicles\" ||\n                type === \"inventory\" ||\n                type === \"category\" ||\n                type === \"bugsBeGoneCustomCheckboxManagement\"\n              ? false\n              : true\n          }\n        >\n          {addBtnLabel}\n        </Button>\n      </div>\n\n      <div className={classes.root}>\n        <Card>\n          <Stack sx={{ mt: 1.5, p: 1.5 }}>\n            {aCollection && aCollection.length === 0 ? (\n              <>\n                <div style={{ width: \"100%\", padding: \"2em\" }}>\n                  <Typography\n                    variant=\"h6\"\n                    component=\"h4\"\n                    style={{ fontSize: \"1.2em\", color: \"red\" }}\n                    color=\"secondary\"\n                  >\n                    {emptyColMsg}\n                  </Typography>\n                </div>\n              </>\n            ) : (\n              <Scrollbar>\n                <TableContainer>\n                  <Table\n                    border={1}\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size=\"medium\"\n                    aria-label=\"enhanced table\"\n                  >\n                    <EnhancedTableHead\n                      classes={classes}\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={handleSelectAllClick}\n                      onRequestSort={handleRequestSort}\n                      rowCount={aCollection.length}\n                      headers={headers}\n                    />\n                    <TableBody>\n                      {aCollection &&\n                        aCollection.length !== 0 &&\n                        stableSort(aCollection, getComparator(order, orderBy))\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((object, index) => {\n                            let arr = [];\n                            for (const property in object) {\n                              for (let i = 0; i < headers.length; i++) {\n                                if (headers[i].id === property) {\n                                  arr.push({\n                                    id: headers[i].id,\n                                    value: `${object[property]}`,\n                                  });\n                                  break;\n                                }\n                              }\n                            }\n\n                            if (\n                              type !== \"company\" ||\n                              (type === \"company\" &&\n                                user?.permissions?.viewCompChk?.assignedCompanyId.includes(\n                                  object.id\n                                ))\n                            ) {\n                              return (\n                                <Fragment key={index}>\n                                  <StyledTableRow tabIndex={-1}>\n                                    {type !== \"company\" ? (\n                                      <TableCell\n                                        className={classes.tableCellLeft}\n                                        align=\"center\"\n                                        size=\"small\"\n                                      >\n                                        {index + 1 + \")\"}\n                                      </TableCell>\n                                    ) : (\n                                      <></>\n                                    )}\n\n                                    {viewOption ? (\n                                      <TableCell align=\"center\" size=\"small\">\n                                        <Tooltip title=\"View\">\n                                          <IconButton color=\"primary\">\n                                            <VisibilityIcon\n                                              onClick={() =>\n                                                viewBtnFunc(\n                                                  object.id,\n                                                  object.data\n                                                )\n                                              }\n                                            />\n                                          </IconButton>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      <></>\n                                    )}\n\n                                    {updateBtnDisplay ? (\n                                      <TableCell align=\"center\" size=\"small\">\n                                        <Tooltip title=\"Update\">\n                                          <span>\n                                            <IconButton\n                                              color=\"primary\"\n                                              disabled={\n                                                type === \"client\" &&\n                                                user?.permissions?.updateClientChk?.assignedCompanyId.includes(\n                                                  companyId\n                                                )\n                                                  ? false\n                                                  : type === \"company\" &&\n                                                    user?.permissions?.updateCompChk?.assignedCompanyId.includes(\n                                                      object.id\n                                                    )\n                                                  ? false\n                                                  : type === \"admin\" &&\n                                                    user?.permissions?.updateAdminChk?.assignedCompanyId.includes(\n                                                      companyId\n                                                    )\n                                                  ? false\n                                                  : type === \"survey\" ||\n                                                    type === \"vehicles\" ||\n                                                    type === \"inventory\" ||\n                                                    type === \"category\" ||\n                                                    type ===\n                                                      \"bugsBeGoneCustomCheckboxManagement\"\n                                                  ? false\n                                                  : true\n                                              }\n                                              onClick={() =>\n                                                updateBtnFunc(\n                                                  object.id,\n                                                  object.data\n                                                )\n                                              }\n                                            >\n                                              <EditIcon\n                                                className={\n                                                  classes.tableBtnOption\n                                                }\n                                              />\n                                            </IconButton>\n                                          </span>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      \"\"\n                                    )}\n                                    {deleteBtnDisplay ? (\n                                      <TableCell\n                                        className={classes.tableCellRight}\n                                        align=\"right\"\n                                        size=\"small\"\n                                      >\n                                        <Tooltip title=\"Delete\">\n                                          <span>\n                                            <IconButton\n                                              color=\"error\"\n                                              disabled={\n                                                type === \"client\" &&\n                                                user?.permissions?.deleteClientChk?.assignedCompanyId.includes(\n                                                  companyId\n                                                )\n                                                  ? false\n                                                  : type === \"company\" &&\n                                                    user?.permissions?.deleteCompChk?.assignedCompanyId.includes(\n                                                      object.id\n                                                    )\n                                                  ? false\n                                                  : type === \"admin\" &&\n                                                    user?.permissions?.deleteAdminChk?.assignedCompanyId.includes(\n                                                      companyId\n                                                    )\n                                                  ? false\n                                                  : type === \"survey\" ||\n                                                    type === \"vehicles\" ||\n                                                    type === \"inventory\" ||\n                                                    type === \"category\" ||\n                                                    type ===\n                                                      \"bugsBeGoneCustomCheckboxManagement\"\n                                                  ? false\n                                                  : true\n                                              }\n                                              onClick={() => {\n                                                setDeleteId(object?.id);\n                                                setDeleteData(object?.data);\n                                                setOpenDel(true);\n                                              }}\n                                            >\n                                              <DeleteIcon\n                                                className={\n                                                  classes.tableBtnOption\n                                                }\n                                              />\n                                            </IconButton>\n                                          </span>\n                                        </Tooltip>\n                                      </TableCell>\n                                    ) : (\n                                      \"\"\n                                    )}\n\n                                    {arr &&\n                                      arr?.map((obj, indexSec) => {\n                                        if (obj?.id === \"dateTimeCreated\") {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {object?.data?.dateTimeCreated\n                                                ? moment(\n                                                    object?.data?.dateTimeCreated.toDate()\n                                                  ).format(\n                                                    \"DD-MM-YYYY HH:mm:ss\"\n                                                  ) || \"\"\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj?.id === \"featuredImage\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Stack\n                                                spacing={1}\n                                                direction={\"row\"}\n                                                alignItems={\"center\"}\n                                                justifyContent={\"center\"}\n                                              >\n                                                {object?.data &&\n                                                object?.data?.featuredImage\n                                                  ?.length > 0\n                                                  ? object?.data?.featuredImage.map(\n                                                      (image, index) => (\n                                                        <>\n                                                          <Box\n                                                            key={index}\n                                                            sx={{\n                                                              px: 0.2,\n                                                              overflowX:\n                                                                \"scroll\",\n                                                            }}\n                                                          >\n                                                            <Image\n                                                              disabledEffect\n                                                              alt=\"thumb image\"\n                                                              src={\n                                                                image?.downloadURL\n                                                              }\n                                                              sx={{\n                                                                width: 50,\n                                                                height: 50,\n                                                                borderRadius: 1.5,\n                                                                border: `solid 2px ${theme.palette.primary.main}`,\n                                                              }}\n                                                            />\n                                                          </Box>\n                                                        </>\n                                                      )\n                                                    )\n                                                  : \"\"}\n                                              </Stack>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"sendEmail\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                              style={{\n                                                whiteSpace: \"nowrap\",\n                                                background:\n                                                  object?.data\n                                                    ?.emailAlreadySent === true\n                                                    ? \"#befed5\"\n                                                    : \"transparent\",\n                                              }}\n                                            >\n                                              <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={async () => {\n                                                  dispatch(setLoading(true));\n                                                  let mailResponse =\n                                                    await handleMailCustomSurvey(\n                                                      companyDetails,\n                                                      \"sendEmail\",\n                                                      object?.data,\n                                                      documentType?.id,\n                                                      logo\n                                                    );\n\n                                                  if (mailResponse?.error) {\n                                                    enqueueSnackbar(\n                                                      mailResponse?.message,\n                                                      { variant: \"error\" }\n                                                    );\n                                                    dispatch(setLoading(false));\n                                                  } else if (\n                                                    !mailResponse?.error\n                                                  ) {\n                                                    enqueueSnackbar(\n                                                      mailResponse?.message,\n                                                      { variant: \"success\" }\n                                                    );\n\n                                                    await fetchClientSurvey(\n                                                      companyDetails?.id,\n                                                      documentType?.id\n                                                    );\n                                                    dispatch(setLoading(false));\n                                                  }\n                                                }}\n                                              >\n                                                Send Email\n                                              </Button>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"viewDownloadPdf\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Stack\n                                                spacing={2}\n                                                direction={\"row\"}\n                                                alignItems={\"center\"}\n                                              >\n                                                <IconButton\n                                                  color=\"primary\"\n                                                  onClick={() =>\n                                                    handleViewDownloadCustomSurvey(\n                                                      companyDetails,\n                                                      \"view\",\n                                                      {\n                                                        ...object?.data,\n                                                        id: object?.id,\n                                                      },\n                                                      documentType?.id,\n                                                      logo\n                                                    )\n                                                  }\n                                                >\n                                                  <Iconify\n                                                    icon={\"carbon:view\"}\n                                                  />\n                                                </IconButton>\n\n                                                <IconButton\n                                                  color=\"primary\"\n                                                  onClick={() =>\n                                                    handleViewDownloadCustomSurvey(\n                                                      companyDetails,\n                                                      \"download\",\n                                                      {\n                                                        ...object?.data,\n                                                        id: object?.id,\n                                                      },\n                                                      documentType?.id,\n                                                      logo\n                                                    )\n                                                  }\n                                                >\n                                                  <Iconify\n                                                    icon={\"eva:download-fill\"}\n                                                  />\n                                                </IconButton>\n                                              </Stack>\n                                            </TableCell>\n                                          );\n                                        } else if (obj && obj.id === \"status\") {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              <Label\n                                                variant=\"filled\"\n                                                sx={{\n                                                  minWidth: 100,\n                                                  minHeight: 30,\n                                                }}\n                                                color={\n                                                  obj.value === \"Pending\"\n                                                    ? \"warning\"\n                                                    : obj.value === \"Confirmed\"\n                                                    ? \"success\"\n                                                    : obj.value === \"Rejected\"\n                                                    ? \"error\"\n                                                    : \"default\"\n                                                }\n                                              >\n                                                {obj.value}\n                                              </Label>\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"actualBasicSalary\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              obj.value === undefined ? (\n                                                \"\"\n                                              ) : obj && obj.value ? (\n                                                <CurrencyFormat\n                                                  value={Math.round(\n                                                    Number(obj.value)\n                                                  )}\n                                                  displayType={\"text\"}\n                                                  thousandSeparator={true}\n                                                />\n                                              ) : (\n                                                \"\"\n                                              )}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          (obj.id === \"vatOrNonVatRegistered\" ||\n                                            obj.id === \"buyerType\")\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              JSON.parse(obj?.value) !== null\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"Not yet defined\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj &&\n                                          obj.id === \"MRATemplateFlag\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && JSON.parse(obj?.value)\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"Not yet defined\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          type === \"inventory\" &&\n                                          obj?.id === \"category\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && JSON.parse(obj?.value)\n                                                ? JSON.parse(obj?.value)?.title\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else if (\n                                          obj?.id === \"categoryDisplay\"\n                                        ) {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj &&\n                                              JSON.parse(obj?.value) &&\n                                              JSON.parse(obj?.value)?.length > 0\n                                                ? JSON.parse(obj?.value)?.map(\n                                                    (category) =>\n                                                      category?.serviceName +\n                                                      \", \"\n                                                  )\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        } else {\n                                          return (\n                                            <TableCell\n                                              className={classes.tableCell}\n                                              key={indexSec}\n                                              align=\"center\"\n                                              size=\"small\"\n                                            >\n                                              {obj && obj.value === undefined\n                                                ? \"\"\n                                                : obj && obj.value\n                                                ? obj.value\n                                                : \"\"}\n                                            </TableCell>\n                                          );\n                                        }\n                                      })}\n                                  </StyledTableRow>\n                                </Fragment>\n                              );\n                            } else return <></>;\n                          })}\n                      {/*  {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                          <TableCell colSpan={16} />\n                        </TableRow>\n                      )} */}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                {aCollection && aCollection.length >= 1 ? (\n                  <TablePagination\n                    rowsPerPageOptions={[50, 100, 150]}\n                    component=\"div\"\n                    count={aCollection?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={(e, page) => setPage(page)}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </Scrollbar>\n            )}\n          </Stack>\n        </Card>\n      </div>\n\n      <>\n        <Dialog\n          open={us_b_openAbsenceTarifDlg}\n          keepMounted\n          onClose={() => set_us_b_openAbsenceTarifDlg(false)}\n          aria-labelledby=\"delete\"\n          aria-describedby=\"delete\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"deleteConfirm\" align=\"center\">\n            <Typography>Absence total summary</Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }} align=\"center\">\n            <br />\n            <Typography>\n              Quantity applicable for all employees after 1 year of employment\n            </Typography>\n            <br />\n\n            {us_a_absenceTariff?.length > 0 ? (\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Absence type</TableCell>\n                      <TableCell>Total number</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_a_absenceTariff?.map((o_abc, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{o_abc?.txt}</TableCell>\n                        <TableCell>{o_abc?.qty}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            ) : (\n              <Typography>\n                You have not yet provided any details about absences. Please\n                update company to provide absence details.\n              </Typography>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                set_us_b_openAbsenceTarifDlg(false);\n                set_us_a_absenceTariff([]);\n              }}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n\n      <>\n        <Dialog\n          open={openDel}\n          keepMounted\n          onClose={() => setOpenDel(false)}\n          aria-labelledby=\"delete\"\n          aria-describedby=\"delete\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"deleteConfirm\" align=\"center\">\n            <Typography>\n              <b>Delete confirmation</b>\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }} align=\"center\">\n            <br />\n            <Typography>Are you sure you want to delete this data ?</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                deleteBtnFunc(deleteId, deleteData);\n                setDeleteId(\"\");\n                setDeleteData({});\n                setOpenDel(false);\n              }}\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"error\"\n              variant=\"outlined\"\n              onClick={() => {\n                setOpenDel(false);\n                setDeleteId(\"\");\n              }}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    </div>\n  );\n};\n\nexport default TableCRUDTemplate;\n","import { Button, Container, Grid, Stack, Typography } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { lazy, Suspense, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport Page from \"src/components/Page\";\nimport TableCRUDTemplate from \"src/components/table/TableCRUDTemplate\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport db from \"src/firebase\";\nimport { PATH_DASHBOARD } from \"src/routes/paths\";\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\nimport useSettings from \"src/hooks/useSettings\";\n\nconst CreateUpdateVehicleDialog = lazy(() =>\n  import(\"./CreateUpdateVehicleDialog\")\n);\n\nconst headers = [\n  { id: \"list\", label: \"List\" },\n  { id: \"update\", label: \"Update\" },\n  { id: \"delete\", label: \"Delete\" },\n  { id: \"featuredImage\", label: \"Featured Image\" },\n  { id: \"name\", label: \"Name\" },\n  { id: \"dateTimeCreated\", label: \"Date time created\" },\n  { id: \"categoryDisplay\", label: \"Category\" },\n  { id: \"plateNumber\", label: \"Plate number\" },\n  { id: \"price\", label: \"Price\" },\n  { id: \"passengers\", label: \"Passengers\" },\n  { id: \"luggage\", label: \"Luggage\" },\n  { id: \"doors\", label: \"Doors\" },\n  { id: \"transmission\", label: \"Transmission\" },\n  { id: \"airConditioning\", label: \"Air conditioning\" },\n];\n\nexport default function VehicleDetail() {\n  const { themeStretch } = useSettings();\n\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const temp_initialiseVehiclesRef = useRef();\n\n  const [lastVisibleId, set_lastVisibleId] = useState(\"\");\n\n  const [rows, setRows] = useState([]);\n\n  const [vehicleDetails, setVehicleDetails] = useState(null);\n\n  const [dialogType, setDialogType] = useState(null);\n\n  const [openDialog, setOpenDialog] = useState(false);\n\n  useEffect(() => {\n    temp_initialiseVehiclesRef.current();\n  }, []);\n\n  const initialiseVehicles = async () => {\n    dispatch(setLoading(true));\n\n    const limit = 50;\n\n    await db\n      .collection(process.env.REACT_APP_COLLECTION_VEHICLES)\n      .limit(limit)\n      .get()\n      .then((result) => {\n        if (result?.docs && result?.docs?.length > 0) {\n          let arr = [];\n\n          result?.docs.forEach((doc) => {\n            arr.push({\n              id: doc.id,\n              data: { ...doc?.data() },\n              featuredImage: doc?.data()?.featuredImage || [],\n              name: doc?.data()?.name || \"\",\n              dateTimeCreated: doc?.data()?.dateTimeCreated || \"\",\n              categoryDisplay: JSON.stringify(\n                doc?.data()?.serviceCategory || []\n              ),\n              serviceCategory: doc?.data()?.serviceCategory || [],\n              plateNumber: doc?.data()?.plateNumber || \"\",\n              price: doc?.data()?.price || 0,\n              passengers: doc?.data()?.passengers || 0,\n              luggage: doc?.data()?.luggage || 0,\n              doors: doc?.data()?.doors || 0,\n              transmission: doc?.data()?.transmission || null,\n              airConditioning: doc?.data()?.airConditioning || false,\n            });\n          });\n\n          if (result?.docs?.length === limit) {\n            let lastDocId = result?.docs[result?.docs?.length - 1]?.id || \"\";\n            set_lastVisibleId(lastDocId);\n          } else {\n            set_lastVisibleId(\"\");\n          }\n\n          setRows(arr);\n          dispatch(setLoading(false));\n        } else {\n          setRows([]);\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while retrieving vehicles: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  temp_initialiseVehiclesRef.current = initialiseVehicles;\n\n  async function handleLoadMore() {\n    dispatch(setLoading(true));\n\n    const limit = 50;\n\n    await db\n      .collection(process.env.REACT_APP_COLLECTION_VEHICLES)\n      .startAfter(lastVisibleId)\n      .limit(limit)\n      .get()\n      .then((result) => {\n        if (result?.docs && result?.docs?.length > 0) {\n          let arr = [];\n\n          result?.docs.forEach((doc) => {\n            arr.push({\n              id: doc.id,\n              ...doc?.data(),\n            });\n          });\n\n          if (result?.docs?.length === limit) {\n            let lastDocId = result?.docs[result?.docs?.length - 1]?.id || \"\";\n            set_lastVisibleId(lastDocId);\n          } else {\n            set_lastVisibleId(\"\");\n          }\n\n          setRows(arr);\n          dispatch(setLoading(false));\n        } else {\n          setRows([]);\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while retrieving more vehicles: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  function handleCloseDialog() {\n    setVehicleDetails(null);\n    setDialogType(null);\n    setOpenDialog(false);\n  }\n\n  const addBtnFunc = () => {\n    setDialogType(\"add\");\n    setOpenDialog(true);\n    setVehicleDetails({\n      featuredImage: \"\",\n      name: \"\",\n      dateTimeCreated: \"\",\n      serviceCategory: [],\n      plateNumber: \"\",\n      price: \"\",\n      passengers: \"\",\n      luggage: \"\",\n      doors: \"\",\n      transmission: null,\n      airConditioning: \"\",\n    });\n  };\n\n  const updateBtnFunc = (id, data) => {\n    setDialogType(\"update\");\n    setOpenDialog(true);\n    setVehicleDetails({\n      id: id,\n      featuredImage: data?.featuredImage || \"\",\n      name: data?.name || \"\",\n      dateTimeCreated: data?.dateTimeCreated || \"\",\n      serviceCategory: data?.serviceCategory || [],\n      plateNumber: data?.plateNumber || \"\",\n      price: data?.price || \"\",\n      passengers: data?.passengers || \"\",\n      luggage: data?.luggage || \"\",\n      doors: data?.doors || \"\",\n      transmission: data?.transmission || null,\n      airConditioning: data?.airConditioning || \"\",\n    });\n  };\n\n  const deleteBtnFunc = async (id) => {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(process.env.REACT_APP_COLLECTION_VEHICLES)\n      .doc(id)\n      .delete()\n      .then(() => {\n        enqueueSnackbar(\"Row deleted successfully\");\n        initialiseVehicles();\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while deleting company: ${error?.message}`,\n          {\n            variant: \"error\",\n          }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Page title=\"Vehicle Booking\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Stack spacing={3} direction=\"row\" alignItems={\"center\"}>\n              <Button\n                startIcon={<KeyboardBackspaceIcon />}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => navigate(PATH_DASHBOARD.general.app1)}\n              >\n                Back\n              </Button>\n              <Typography variant=\"h4\">{`Vehicle list section`}</Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <Suspense fallback={<p></p>}>\n              <TableCRUDTemplate\n                type=\"vehicles\"\n                headers={headers}\n                aCollection={rows}\n                addBtnDisplay={true}\n                addBtnLabel={\"Create a vehicle\"}\n                addBtnFunc={addBtnFunc}\n                openDialog={openDialog}\n                handleCloseDialog={handleCloseDialog}\n                emptyColMsg={\n                  \"Sorry, not a single vehicle has been created yet. Please create a vehicle.\"\n                }\n                updateBtnDisplay={true}\n                deleteBtnDisplay={true}\n                updateBtnFunc={updateBtnFunc}\n                deleteBtnFunc={deleteBtnFunc}\n              />\n            </Suspense>\n          </Grid>\n        </Grid>\n\n        {openDialog && (\n          <Suspense fallback={<p></p>}>\n            <CreateUpdateVehicleDialog\n              openDialog={openDialog}\n              handleCloseDialog={handleCloseDialog}\n              vehicleDetails={vehicleDetails}\n              setVehicleDetails={setVehicleDetails}\n              initialiseVehicles={initialiseVehicles}\n              dialogType={dialogType}\n            />\n          </Suspense>\n        )}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}