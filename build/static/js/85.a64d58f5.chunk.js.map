{"version":3,"sources":["pages/dashboard/client-survey/SurveyServiceReportForm.js"],"names":["SurveyServiceReportForm","clientList","clientDocumentObjectSelected","setClientDocumentObjectSelected","setSurveyDetail","surveyDetail","dialogType","documentType","temp_getOptionsRef","useRef","useState","defaultCheckBoxOptions","setDefaultCheckBoxOptions","a","getDefaultCheckBoxOptions","defaultOptions","useEffect","current","container","spacing","item","xs","md","ListboxProps","style","maxHeight","size","label","id","options","value","renderInput","params","onChange","e","reason","preventDefault","phoneText","data","contactNumber","mobileNumber","prev","customerName","name","clientSigName","address","email","phone","getOptionLabel","option","variant","type","fullWidth","event","previous","target","disabled","title","time","timeIn","timeOut","serviceCarriesAt","sx","borderStyle","textAlign","routineCheckboxList","length","map","control","index","marginBottom","checked","routine","labelPlacement","controlOfCheckboxList","controlOf","margin","otherControlOf","infestationCheckboxList","infestation","infestationNote","typeOfCockroach","typeOfTermite","typeOfTermiteBait","typeOfTermiteTotal","solTreatmentmeter","solTreatmentFt","solTreatmentUnitPrice","solTreatmentTotal","controlVectorCheckboxList","controlVector","locationTreatedCheckboxList","locationTreated","otherLocationTreated","rodentBox","findings","recommendationServiceReport","recommendationCheckboxList","recommendation","evaluationPieces","estimateAmount"],"mappings":"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","file":"static/js/85.a64d58f5.chunk.js","sourcesContent":["import {\n  Autocomplete,\n  Grid,\n  TextField,\n  Divider,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n} from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { getDefaultCheckBoxOptions } from \"src/components/core-functions/SelectionCoreFunctions\";\n\nexport default function SurveyServiceReportForm({\n  clientList,\n  clientDocumentObjectSelected,\n  setClientDocumentObjectSelected,\n  setSurveyDetail,\n  surveyDetail,\n  dialogType,\n  documentType,\n}) {\n  const temp_getOptionsRef = useRef();\n\n  const [defaultCheckBoxOptions, setDefaultCheckBoxOptions] = useState(null);\n\n  useEffect(() => {\n    temp_getOptionsRef.current();\n  }, []);\n\n  async function getOptions() {\n    let defaultOptions = await getDefaultCheckBoxOptions();\n\n    if (defaultOptions) {\n      setDefaultCheckBoxOptions(defaultOptions);\n    }\n  }\n\n  temp_getOptionsRef.current = getOptions;\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        {/* <Grid item xs={12} md={4}>\n              <TextField\n                variant=\"outlined\"\n                name=\"surveyNumber\"\n                label=\"Survey number\"\n                id=\"surveyNumber\"\n                type=\"text\"\n                value={surveyDetail?.surveyNumber || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      surveyNumber: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid> */}\n\n        <Grid item xs={12} md={4}>\n          <Autocomplete\n            ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n            size=\"small\"\n            label=\"Please choose a client\"\n            id=\"client-drop-down\"\n            options={clientList || []}\n            value={clientDocumentObjectSelected || null}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Please choose a client\"\n                size=\"large\"\n              />\n            )}\n            onChange={(e, value, reason) => {\n              e.preventDefault();\n              if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                let phoneText = \"\";\n                if (value?.data?.contactNumber && value?.data?.mobileNumber) {\n                  phoneText = `${value?.data?.contactNumber} / ${value?.data?.mobileNumber}`;\n                } else {\n                  phoneText =\n                    value?.data?.contactNumber ||\n                    value?.data?.mobileNumber ||\n                    \"\";\n                }\n\n                setSurveyDetail((prev) => {\n                  return {\n                    ...prev,\n                    customerName: value?.data?.name || \"\",\n                    clientSigName: value?.data?.name || \"\",\n                    address: value?.data?.address || \"\",\n                    email: value?.data?.email || \"\",\n                    phone: phoneText || \"\",\n                  };\n                });\n\n                setClientDocumentObjectSelected(value);\n              } else if (reason === \"removeOption\" || reason === \"clear\") {\n                setSurveyDetail((prev) => {\n                  return {\n                    ...prev,\n                    customerName: \"\",\n                    clientSigName: \"\",\n                    address: \"\",\n                    email: \"\",\n                    phone: \"\",\n                  };\n                });\n\n                setClientDocumentObjectSelected(null);\n              }\n            }}\n            getOptionLabel={(option) => option?.name || \"\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <TextField\n            variant=\"outlined\"\n            name=\"customerName\"\n            label=\"Customer\"\n            id=\"customerName\"\n            type=\"text\"\n            value={surveyDetail?.customerName || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  customerName: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            name=\"address\"\n            label=\"Address\"\n            id=\"address\"\n            type=\"text\"\n            value={surveyDetail?.address || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  address: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            name=\"email\"\n            label=\"Email\"\n            id=\"email\"\n            type=\"text\"\n            value={surveyDetail?.email || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  email: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            name=\"phone\"\n            label=\"Phone\"\n            id=\"phone\"\n            type=\"text\"\n            value={surveyDetail?.phone || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  phone: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        {documentType?.title === \"Survey\" ? (\n          <Grid item xs={12} md={6}>\n            <TextField\n              variant=\"outlined\"\n              name=\"time\"\n              label=\"Time\"\n              id=\"time\"\n              type=\"time\"\n              value={surveyDetail?.time || \"00:00\"}\n              size=\"large\"\n              fullWidth\n              onChange={(event) => {\n                setSurveyDetail((previous) => {\n                  return {\n                    ...previous,\n                    time: event.target.value,\n                  };\n                });\n              }}\n              disabled={dialogType === \"view\"}\n            />\n          </Grid>\n        ) : (\n          <Grid item xs={12} md={6}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  variant=\"outlined\"\n                  name=\"timeIn\"\n                  label=\"Time In\"\n                  id=\"timeIn\"\n                  type=\"time\"\n                  value={surveyDetail?.timeIn || \"00:00\"}\n                  size=\"large\"\n                  fullWidth\n                  onChange={(event) => {\n                    setSurveyDetail((previous) => {\n                      return {\n                        ...previous,\n                        timeIn: event.target.value,\n                      };\n                    });\n                  }}\n                  disabled={dialogType === \"view\"}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  variant=\"outlined\"\n                  name=\"timeOut\"\n                  label=\"Time Out\"\n                  id=\"timeOut\"\n                  type=\"time\"\n                  value={surveyDetail?.timeOut || \"00:00\"}\n                  size=\"large\"\n                  fullWidth\n                  onChange={(event) => {\n                    setSurveyDetail((previous) => {\n                      return {\n                        ...previous,\n                        timeOut: event.target.value,\n                      };\n                    });\n                  }}\n                  disabled={dialogType === \"view\"}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n\n        <Grid item xs={12} md={12}>\n          <TextField\n            variant=\"outlined\"\n            name=\"serviceCarriesAt\"\n            label=\"Service carries at\"\n            id=\"serviceCarriesAt\"\n            type=\"text\"\n            value={surveyDetail?.serviceCarriesAt || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  serviceCarriesAt: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Divider\n            sx={{\n              borderStyle: \"dotted\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={12} textAlign={\"center\"}>\n          <Typography variant=\"h6\">\n            Please Tick the appropriate column\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {documentType?.title === \"Service Report\" ? (\n        <>\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <Typography>Routine: </Typography>\n            </Grid>\n\n            {defaultCheckBoxOptions?.routineCheckboxList &&\n              defaultCheckBoxOptions?.routineCheckboxList?.length > 0 &&\n              defaultCheckBoxOptions?.routineCheckboxList?.map(\n                (control, index) => (\n                  <Grid\n                    item\n                    xs={4}\n                    md={2}\n                    key={index}\n                    sx={{\n                      marginBottom: 0,\n                    }}\n                  >\n                    <FormControlLabel\n                      sx={{\n                        \"& .MuiFormControlLabel-root\": {\n                          // marginRight: 10,\n                          marginBottom: \"0 !important\",\n                        },\n                      }}\n                      // value={surveyDetail?.controlOf[control.name] || false}\n                      control={\n                        <Checkbox\n                          checked={surveyDetail?.routine[control.name] || false}\n                          disabled={dialogType === \"view\"}\n                          size=\"medium\"\n                          onChange={(e) =>\n                            setSurveyDetail((prev) => {\n                              return {\n                                ...prev,\n                                routine: {\n                                  ...prev.routine,\n                                  [control.name]: e.target.checked,\n                                },\n                              };\n                            })\n                          }\n                        />\n                      }\n                      label={control.title}\n                      labelPlacement=\"end\"\n                    />\n                  </Grid>\n                )\n              )}\n          </Grid>\n\n          <br />\n          <Divider\n            sx={{\n              borderStyle: \"dotted\",\n            }}\n          />\n          <br />\n        </>\n      ) : (\n        <></>\n      )}\n\n      <Grid container>\n        <Grid item xs={12} md={12}>\n          <Typography>Control of: </Typography>\n        </Grid>\n\n        {defaultCheckBoxOptions?.controlOfCheckboxList &&\n          defaultCheckBoxOptions?.controlOfCheckboxList?.length > 0 &&\n          defaultCheckBoxOptions?.controlOfCheckboxList?.map(\n            (control, index) => (\n              <Grid\n                item\n                xs={4}\n                md={2}\n                key={index}\n                sx={{\n                  marginBottom: 0,\n                }}\n              >\n                <FormControlLabel\n                  sx={{\n                    \"& .MuiFormControlLabel-root\": {\n                      // marginRight: 10,\n                      marginBottom: \"0 !important\",\n                    },\n                  }}\n                  // value={surveyDetail?.controlOf[control.name] || false}\n                  control={\n                    <Checkbox\n                      checked={surveyDetail?.controlOf[control.name] || false}\n                      disabled={dialogType === \"view\"}\n                      size=\"medium\"\n                      onChange={(e) =>\n                        setSurveyDetail((prev) => {\n                          return {\n                            ...prev,\n                            controlOf: {\n                              ...prev.controlOf,\n                              [control.name]: e.target.checked,\n                            },\n                          };\n                        })\n                      }\n                    />\n                  }\n                  label={control.title}\n                  labelPlacement=\"end\"\n                />\n              </Grid>\n            )\n          )}\n\n        <Grid item xs={12} md={12}>\n          <TextField\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"otherControlOf\"\n            label=\"Other\"\n            id=\"otherControlOf\"\n            type=\"text\"\n            value={surveyDetail?.otherControlOf || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  otherControlOf: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n      </Grid>\n\n      <br />\n      <Divider\n        sx={{\n          borderStyle: \"dotted\",\n        }}\n      />\n      <br />\n\n      <Grid container>\n        <Grid item xs={12} md={12}>\n          <Typography>Infestation: </Typography>\n        </Grid>\n\n        {defaultCheckBoxOptions?.infestationCheckboxList &&\n          defaultCheckBoxOptions?.infestationCheckboxList?.length > 0 &&\n          defaultCheckBoxOptions?.infestationCheckboxList?.map(\n            (control, index) => (\n              <Grid\n                item\n                xs={4}\n                md={2}\n                key={index}\n                sx={{\n                  marginBottom: 0,\n                }}\n              >\n                <FormControlLabel\n                  sx={{\n                    \"& .MuiFormControlLabel-root\": {\n                      // marginRight: 10,\n                      marginBottom: \"0 !important\",\n                    },\n                  }}\n                  //value={surveyDetail?.infestation[control.name] || false}\n                  control={\n                    <Checkbox\n                      checked={surveyDetail?.infestation[control.name] || false}\n                      disabled={dialogType === \"view\"}\n                      size=\"medium\"\n                      onChange={(e) =>\n                        setSurveyDetail((prev) => {\n                          return {\n                            ...prev,\n                            infestation: {\n                              ...prev.infestation,\n                              [control.name]: e.target.checked,\n                            },\n                          };\n                        })\n                      }\n                    />\n                  }\n                  label={control.title}\n                  labelPlacement=\"end\"\n                />\n              </Grid>\n            )\n          )}\n\n        <Grid item xs={12} md={12}>\n          <TextField\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"infestationNote\"\n            label=\"Infestation note\"\n            id=\"infestationNote\"\n            type=\"text\"\n            value={surveyDetail?.infestationNote || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  infestationNote: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n      </Grid>\n\n      {documentType?.title === \"Survey\" ? (\n        <>\n          <br />\n          <Divider\n            sx={{\n              borderStyle: \"dotted\",\n            }}\n          />\n          <br />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <TextField\n                variant=\"outlined\"\n                name=\"typeOfCockroach\"\n                label=\"Type of Cockroaches\"\n                id=\"typeOfCockroach\"\n                type=\"text\"\n                value={surveyDetail?.typeOfCockroach || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      typeOfCockroach: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              <TextField\n                variant=\"outlined\"\n                name=\"typeOfTermite\"\n                label=\"Type of Termite\"\n                id=\"typeOfTermite\"\n                type=\"text\"\n                value={surveyDetail?.typeOfTermite || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      typeOfTermite: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"typeOfTermiteBait\"\n                label=\"(Qty) Bait\"\n                id=\"typeOfTermiteBait\"\n                type=\"text\"\n                value={surveyDetail?.typeOfTermiteBait || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      typeOfTermiteBait: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"typeOfTermiteTotal\"\n                label=\"(Rs)\"\n                id=\"typeOfTermiteTotal\"\n                type=\"text\"\n                value={surveyDetail?.typeOfTermiteTotal || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      typeOfTermiteTotal: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"solTreatmentmeter\"\n                label=\"Sol Treatment (m2)\"\n                id=\"solTreatmentmeter\"\n                type=\"text\"\n                value={surveyDetail?.solTreatmentmeter || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      solTreatmentmeter: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"solTreatmentFt\"\n                label=\"(ft)\"\n                id=\"solTreatmentFt\"\n                type=\"text\"\n                value={surveyDetail?.solTreatmentFt || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      solTreatmentFt: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"solTreatmentUnitPrice\"\n                label=\"Unit Price\"\n                id=\"solTreatmentUnitPrice\"\n                type=\"text\"\n                value={surveyDetail?.solTreatmentUnitPrice || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      solTreatmentUnitPrice: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={6} md={3}>\n              <TextField\n                variant=\"outlined\"\n                name=\"solTreatmentTotal\"\n                label=\"Total\"\n                id=\"solTreatmentTotal\"\n                type=\"text\"\n                value={surveyDetail?.solTreatmentTotal || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      solTreatmentTotal: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={12}>\n              <Divider\n                sx={{\n                  borderStyle: \"dotted\",\n                }}\n              />\n              <br />\n            </Grid>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      <Grid container>\n        <Grid item xs={12} md={12}>\n          <Typography>Control Vector Service Request: </Typography>\n        </Grid>\n\n        {defaultCheckBoxOptions?.controlVectorCheckboxList &&\n          defaultCheckBoxOptions?.controlVectorCheckboxList?.length > 0 &&\n          defaultCheckBoxOptions?.controlVectorCheckboxList?.map(\n            (control, index) => (\n              <Grid\n                item\n                xs={4}\n                md={2}\n                key={index}\n                sx={{\n                  marginBottom: 0,\n                }}\n              >\n                <FormControlLabel\n                  sx={{\n                    \"& .MuiFormControlLabel-root\": {\n                      // marginRight: 10,\n                      marginBottom: \"0 !important\",\n                    },\n                  }}\n                  // value={surveyDetail?.controlVector[control.name] || false}\n                  control={\n                    <Checkbox\n                      checked={\n                        surveyDetail?.controlVector[control.name] || false\n                      }\n                      disabled={dialogType === \"view\"}\n                      size=\"medium\"\n                      onChange={(e) =>\n                        setSurveyDetail((prev) => {\n                          return {\n                            ...prev,\n                            controlVector: {\n                              ...prev.controlVector,\n                              [control.name]: e.target.checked,\n                            },\n                          };\n                        })\n                      }\n                    />\n                  }\n                  label={control.title}\n                  labelPlacement=\"end\"\n                />\n              </Grid>\n            )\n          )}\n      </Grid>\n\n      <br />\n      <Divider\n        sx={{\n          borderStyle: \"dotted\",\n        }}\n      />\n      <br />\n\n      <Grid container>\n        <Grid item xs={12} md={12}>\n          <Typography>Location Treated: </Typography>\n        </Grid>\n\n        {defaultCheckBoxOptions?.locationTreatedCheckboxList &&\n          defaultCheckBoxOptions?.locationTreatedCheckboxList?.length > 0 &&\n          defaultCheckBoxOptions?.locationTreatedCheckboxList?.map(\n            (control, index) => (\n              <Grid\n                item\n                xs={4}\n                md={2}\n                key={index}\n                sx={{\n                  marginBottom: 0,\n                }}\n              >\n                <FormControlLabel\n                  sx={{\n                    \"& .MuiFormControlLabel-root\": {\n                      // marginRight: 10,\n                      marginBottom: \"0 !important\",\n                    },\n                  }}\n                  //value={surveyDetail?.locationTreated[control.name] || false}\n                  control={\n                    <Checkbox\n                      checked={\n                        surveyDetail?.locationTreated[control.name] || false\n                      }\n                      disabled={dialogType === \"view\"}\n                      size=\"medium\"\n                      onChange={(e) =>\n                        setSurveyDetail((prev) => {\n                          return {\n                            ...prev,\n                            locationTreated: {\n                              ...prev.locationTreated,\n                              [control.name]: e.target.checked,\n                            },\n                          };\n                        })\n                      }\n                    />\n                  }\n                  label={control.title}\n                  labelPlacement=\"end\"\n                />\n              </Grid>\n            )\n          )}\n\n        <Grid item xs={12} md={12}>\n          <TextField\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"otherLocationTreated\"\n            label=\"Other treated location\"\n            id=\"otherLocationTreated\"\n            type=\"text\"\n            value={surveyDetail?.otherLocationTreated || \"\"}\n            size=\"large\"\n            fullWidth\n            onChange={(event) => {\n              setSurveyDetail((previous) => {\n                return {\n                  ...previous,\n                  otherLocationTreated: event.target.value,\n                };\n              });\n            }}\n            disabled={dialogType === \"view\"}\n          />\n        </Grid>\n\n        {documentType?.title === \"Survey\" ? (\n          <Grid item xs={12} md={12}>\n            <br />\n            <Divider\n              sx={{\n                borderStyle: \"dotted\",\n              }}\n            />\n            <br />\n            <TextField\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rodentBox\"\n              label=\"Rodent Box (S) 280 (M) 375 Rs\"\n              id=\"rodentBox\"\n              type=\"text\"\n              value={surveyDetail?.rodentBox || \"\"}\n              size=\"large\"\n              fullWidth\n              onChange={(event) => {\n                setSurveyDetail((previous) => {\n                  return {\n                    ...previous,\n                    rodentBox: event.target.value,\n                  };\n                });\n              }}\n              disabled={dialogType === \"view\"}\n            />\n          </Grid>\n        ) : (\n          <></>\n        )}\n      </Grid>\n\n      {documentType?.title === \"Service Report\" ? (\n        <>\n          <Grid item xs={12} md={12}>\n            <TextField\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"findings\"\n              label=\"Findings\"\n              id=\"findings\"\n              type=\"text\"\n              value={surveyDetail?.findings || \"\"}\n              size=\"large\"\n              fullWidth\n              onChange={(event) => {\n                setSurveyDetail((previous) => {\n                  return {\n                    ...previous,\n                    findings: event.target.value,\n                  };\n                });\n              }}\n              disabled={dialogType === \"view\"}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <TextField\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"recommendationServiceReport\"\n              label=\"Recommendation\"\n              id=\"recommendationServiceReport\"\n              type=\"text\"\n              value={surveyDetail?.recommendationServiceReport || \"\"}\n              size=\"large\"\n              fullWidth\n              onChange={(event) => {\n                setSurveyDetail((previous) => {\n                  return {\n                    ...previous,\n                    recommendationServiceReport: event.target.value,\n                  };\n                });\n              }}\n              disabled={dialogType === \"view\"}\n            />\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {documentType?.title === \"Survey\" ? (\n        <>\n          <br />\n          <Divider\n            sx={{\n              borderStyle: \"dotted\",\n            }}\n          />\n          <br />\n\n          <Grid container>\n            <Grid item xs={12} md={12}>\n              <Typography>Recommendations </Typography>\n            </Grid>\n\n            {defaultCheckBoxOptions?.recommendationCheckboxList &&\n              defaultCheckBoxOptions?.recommendationCheckboxList?.length > 0 &&\n              defaultCheckBoxOptions?.recommendationCheckboxList?.map(\n                (control, index) => (\n                  <Grid\n                    item\n                    xs={4}\n                    md={2}\n                    key={index}\n                    sx={{\n                      marginBottom: 0,\n                    }}\n                  >\n                    <FormControlLabel\n                      sx={{\n                        \"& .MuiFormControlLabel-root\": {\n                          // marginRight: 10,\n                          marginBottom: \"0 !important\",\n                        },\n                      }}\n                      value={\n                        surveyDetail?.recommendation[control.name] || false\n                      }\n                      control={\n                        <Checkbox\n                          checked={\n                            surveyDetail?.recommendation[control.name] || false\n                          }\n                          disabled={dialogType === \"view\"}\n                          size=\"medium\"\n                          onChange={(e) =>\n                            setSurveyDetail((prev) => {\n                              return {\n                                ...prev,\n                                recommendation: {\n                                  ...prev.recommendation,\n                                  [control.name]: e.target.checked,\n                                },\n                              };\n                            })\n                          }\n                        />\n                      }\n                      label={control.title}\n                      labelPlacement=\"end\"\n                    />\n                  </Grid>\n                )\n              )}\n          </Grid>\n\n          <br />\n          <Divider\n            sx={{\n              borderStyle: \"dotted\",\n            }}\n          />\n          <br />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8}>\n              <TextField\n                variant=\"outlined\"\n                name=\"evaluationPieces\"\n                label=\"EVALUATION (How many pieces)\"\n                id=\"evaluationPieces\"\n                type=\"text\"\n                value={surveyDetail?.evaluationPieces || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      evaluationPieces: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <TextField\n                variant=\"outlined\"\n                name=\"estimateAmount\"\n                label=\"ESTIMATE (RS)\"\n                id=\"estimateAmount\"\n                type=\"text\"\n                value={surveyDetail?.estimateAmount || \"\"}\n                size=\"large\"\n                fullWidth\n                onChange={(event) => {\n                  setSurveyDetail((previous) => {\n                    return {\n                      ...previous,\n                      estimateAmount: event.target.value,\n                    };\n                  });\n                }}\n                disabled={dialogType === \"view\"}\n              />\n            </Grid>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}