{"version":3,"sources":["sections/@dashboard/e-commerce/product-details/booking/BookingStepOne.js","sections/@dashboard/e-commerce/product-details/booking/BookingStepTwo.js","sections/@dashboard/e-commerce/product-details/booking/BookingVehiclePricingSummary.js","../node_modules/@linways/table-to-excel/dist sync","pages/car-rental-atish/car-rental/booking/UpdateVehicleBookingDialog.js","pages/dashboard/payment/PaymentIndex.js"],"names":["BookingStepOne","product","callLocation","disableEditing","dispatch","useDispatch","enqueueSnackbar","useSnackbar","name","price","bookingData","useSelector","selectBooking","useEffect","bookingPickupDate","bookingReturnDate","moment","format","Date","date1","date2","isAfter","differenceInDays","diff","setBookingData","bookingNumberOfDays","variant","item","xs","md","sx","mt","mb","display","direction","spacing","alignItems","title","color","value","Number","toFixed","displayType","thousandSeparator","prefix","process","ListboxProps","style","maxHeight","size","label","id","options","bookingPickupAddress","renderInput","params","InputLabelProps","required","onChange","e","reason","getOptionLabel","option","disabled","fullWidth","type","bookingPickupAnywhereAddress","event","target","newValue","inputFormat","bookingPickupTime","bookingReturnTime","BookingStepTwo","bookingBabySeatQty","bookingBoosterSeatQty","bookingChildSeatQty","BookingVehiclePricingSummary","temp_calculateTotalAmountRef","useRef","current","totalAmount","bookingTotalAmount","align","fontSize","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","UpdateVehicleBookingDialog","open","setOpen","fetchBooking","viewOnly","user","useAuth","useState","setDisableEditing","a","setLoading","db","collection","doc","bookingId","set","merge","then","status","createNewContract","contractResult","error","message","role","notifyClientAdminAfterUpdate","catch","updatedByRole","notifyByEmailAfterUpdatingBooking","lastName","firstName","email","vehicleDetails","clientNotificationResult","adminNotificationResult","handleClose","handleSelectChange","preventDefault","maxWidth","container","justifyContent","severity","onClick","updateBooking","CompanyClientSelection","lazy","PaymentIndex","navigate","useNavigate","themeStretch","useSettings","temp_fetch_invoice_ref","setLogo","setSigImage","temp_logo_image_ref","temp_signature_image_ref","selectDocument","companyDetails","clientDocumentObjectSelected","paymentDocType","us_invoicelist","set_us_invoicelist","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","us_filter","set_us_filter","us_open_screenshot_dialog","set_us_open_screenshot_dialog","us_screenshot_invoice_data","set_us_screenshot_invoice_data","us_open_expense_dialog","set_us_open_expense_dialog","us_display_add_expense","set_us_display_add_expense","expenseAmt","expenseDesc","us_add_expense_data","set_us_add_expense_data","us_expense_invoice_data","set_us_expense_invoice_data","partialPaymentAmountInvoiceId","set_partialPaymentAmountInvoiceId","partialPaymentAmount","set_partialPaymentAmount","partialPaymentType","set_partialPaymentType","openPartialPaymentFieldDialog","set_openPartialPaymentFieldDialog","data","imageUrl","toDataUrl","logoImage","sigUrl","sigImage","url","fetch","blob","Promise","reader","FileReader","readAsDataURL","onloadend","base64data","result","console","log","fetchInvoice","undefined","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","where","firebase","firestore","Timestamp","fromDate","get","querySnapshot","invoiceArray","docs","length","forEach","invoiceDoc","remainingAmt","docRemainingPaymentAmt","totalExpenseAmountForInvoice","invoiceExpensetData","expense","push","checked","paymentAmt","paymentType","err","executeBatchUpdate","checkedLines","finalcheckedLines","paymentNumberDoc","toString","batch","paymentdocRefId","paymentCounterDocRef","paymentDocRef","invoice","invoiceRef","newInvRemainingPaymentAmt","newAttachedPaymentNumber","attachedPaymentNumber","paymentNumber","paymentNumberString","paymentAmount","paymentRemainingAmount","paymentDate","paymentStatus","invoiceId","paymentCounter","invoiceList","dateCreated","commit","recentPaymentMade","paymentMade","isDeleted","deletedTimestamp","FieldValue","serverTimestamp","invoiceSelected","find","isEmpty","runTransaction","transaction","sfDoc","exists","executeInvoiceUpdateFullPayment","invoiceDocRef","onFileChange","files","fileUrl","todayDate","todayISOString","screenshotStoragePath","invoiceData","docType","file","storageRef","firebaseApp","storage","ref","fileRef","child","put","getDownloadURL","newScreenshotList","invoiceScreenshotData","dateString","screenshotUrl","timestamp","screenshot","desertRef","delete","filter","shot","newExpenseList","expenseStoragePath","expenseFile","expenseUrl","index","expenseData","toDate","openUpdateDialog","setOpenUpdateDialog","startIcon","PATH_DASHBOARD","general","app1","fallback","padding","width","labelId","border","whiteSpace","obj","map","icon","handleDoFullPayment","clientName","background","recentPayment","deletePayment","permissions","deleteFullPartialPaymentChk","assignedCompanyId","includes","onClose","className","accept","href","deleteScreenshot","onExpenseFileChange","addExpense","Math","round","deleteExpense","selectedLineData","remainingAmount","addPartialPayment"],"mappings":"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","file":"static/js/35.9d1ac942.chunk.js","sourcesContent":["import { DatePicker } from \"@mui/lab\";\nimport {\n  Autocomplete,\n  Grid,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectBooking, setBookingData } from \"src/features/bookingSlice\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nexport default function BookingStepOne({\n  product,\n  callLocation,\n  disableEditing,\n}) {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { name, price } = product;\n\n  const { bookingData } = useSelector(selectBooking);\n\n  const pickUpOptions = [\n    {\n      id: \"ssr\",\n      title: \"SSR Airport, Plaine Magnien, Mauritius\",\n    },\n    {\n      id: \"anywhere\",\n      title: \"Desired location - anywhere (+ additional cost)\",\n    },\n  ];\n\n  useEffect(() => {\n    if (\n      bookingData?.bookingPickupDate &&\n      bookingData?.bookingReturnDate &&\n      moment(bookingData?.bookingReturnDate).format(\"YYYY-MM-DD\") !==\n        moment(new Date()).format(\"YYYY-MM-DD\")\n    ) {\n      // calculate number of days between these two dates\n      let date1 = moment(bookingData?.bookingPickupDate, \"YYYY-MM-DD\");\n      let date2 = moment(bookingData?.bookingReturnDate, \"YYYY-MM-DD\");\n\n      // Check if date2 is after or the same as date1\n      const isAfterOrSame = date2.isAfter(date1);\n\n      if (isAfterOrSame) {\n        // Calculate the difference in days\n        const differenceInDays = date2.diff(date1, \"days\") + 1;\n\n        dispatch(\n          setBookingData({\n            ...bookingData,\n            bookingNumberOfDays: differenceInDays,\n          })\n        );\n      } else {\n        enqueueSnackbar(\"Return date should be after Pickup date\", {\n          variant: \"error\",\n        });\n      }\n    }\n  }, [bookingData?.bookingPickupDate, bookingData?.bookingReturnDate]);\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <Typography\n          variant=\"h4\"\n          sx={{\n            mt: 2,\n            mb: 1,\n            display: \"block\",\n          }}\n        >\n          {name || \"\"}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Stack direction={\"row\"} spacing={1} alignItems={\"center\"}>\n          <Tooltip title=\"Or similar models\">\n            <InfoIcon color=\"info\" />\n          </Tooltip>\n          <Typography>Or similar model</Typography>\n        </Stack>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Typography>\n          <CurrencyFormat\n            value={Number(price || 0).toFixed(2)}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n          />{\" \"}\n          / day\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Autocomplete\n          ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n          size=\"small\"\n          label=\"Pickup address\"\n          id=\"pickup-drop-down\"\n          options={pickUpOptions || []}\n          value={bookingData?.bookingPickupAddress || null}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Pickup address\"\n              InputLabelProps={{ required: true }}\n              size=\"large\"\n            />\n          )}\n          required\n          onChange={(e, value, reason) => {\n            if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingPickupAddress: value,\n                })\n              );\n            } else {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingPickupAddress: null,\n                })\n              );\n            }\n          }}\n          getOptionLabel={(option) => option.title}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      {bookingData?.bookingPickupAddress?.id === \"anywhere\" && (\n        <Grid item xs={12} md={12}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name=\"bookingPickupAnywhereAddress\"\n            label=\"Specify desired address\"\n            type=\"text\"\n            id=\"bookingPickupAnywhereAddress\"\n            value={bookingData?.bookingPickupAnywhereAddress || \"\"}\n            size=\"large\"\n            onChange={(event) => {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingPickupAnywhereAddress: event.target.value,\n                })\n              );\n            }}\n            disabled={callLocation === \"bookingList\" && disableEditing}\n          />\n        </Grid>\n      )}\n\n      <Grid item xs={12} md={6}>\n        <DatePicker\n          label=\"Pickup date\"\n          value={bookingData?.bookingPickupDate || \"\"}\n          onChange={(newValue) => {\n            dispatch(\n              setBookingData({\n                ...bookingData,\n                bookingPickupDate: newValue,\n              })\n            );\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              size=\"large\"\n              fullWidth\n              disabled={callLocation === \"bookingList\" && disableEditing}\n            />\n          )}\n          inputFormat=\"dd/MM/yyyy\"\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"bookingPickupTime\"\n          label=\"Pickup time\"\n          type=\"time\"\n          id=\"bookingPickupTime\"\n          value={bookingData?.bookingPickupTime || \"\"}\n          size=\"large\"\n          onChange={(event) => {\n            dispatch(\n              setBookingData({\n                ...bookingData,\n                bookingPickupTime: event.target.value,\n              })\n            );\n          }}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <DatePicker\n          label=\"Return date\"\n          value={bookingData?.bookingReturnDate || \"\"}\n          onChange={(newValue) => {\n            dispatch(\n              setBookingData({\n                ...bookingData,\n                bookingReturnDate: newValue,\n              })\n            );\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              size=\"large\"\n              fullWidth\n              disabled={callLocation === \"bookingList\" && disableEditing}\n            />\n          )}\n          inputFormat=\"dd/MM/yyyy\"\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"bookingReturnTime\"\n          label=\"Return time\"\n          type=\"time\"\n          id=\"bookingReturnTime\"\n          value={bookingData?.bookingReturnTime || \"\"}\n          size=\"large\"\n          onChange={(event) => {\n            dispatch(\n              setBookingData({\n                ...bookingData,\n                bookingReturnTime: event.target.value,\n              })\n            );\n          }}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n    </>\n  );\n}\n","import { Divider, Grid, Stack, TextField, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectBooking, setBookingData } from \"src/features/bookingSlice\";\n\nexport default function BookingStepTwo({ callLocation, disableEditing }) {\n  const dispatch = useDispatch();\n\n  const { bookingData } = useSelector(selectBooking);\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <Typography variant=\"h6\">Add extra options (Optional)</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Stack spacing={1}>\n          <Typography variant=\"subtitle1\">Baby Seat</Typography>\n          <Typography>Baby seat suitable for 0-13 Kg.</Typography>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <TextField\n          label=\"Baby seat quantity\"\n          variant=\"outlined\"\n          size=\"large\"\n          fullWidth\n          name=\"bookingBabySeatQty\"\n          type=\"number\"\n          id=\"bookingBabySeatQty\"\n          value={bookingData?.bookingBabySeatQty || 0}\n          onChange={(event) => {\n            if (Number(event.target.value) >= 0) {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingBabySeatQty: event.target.value,\n                })\n              );\n            }\n          }}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Stack spacing={1}>\n          <Typography variant=\"subtitle1\">Booster Seat</Typography>\n          <Typography>Booster Seat suitable for 7-12 years old.</Typography>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <TextField\n          label=\"Booster seat quantity\"\n          variant=\"outlined\"\n          size=\"large\"\n          fullWidth\n          name=\"bookingBoosterSeatQty\"\n          type=\"number\"\n          id=\"bookingBoosterSeatQty\"\n          value={bookingData?.bookingBoosterSeatQty || 0}\n          onChange={(event) => {\n            if (Number(event.target.value) >= 0) {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingBoosterSeatQty: event.target.value,\n                })\n              );\n            }\n          }}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Stack spacing={1}>\n          <Typography variant=\"subtitle1\">Child Seat</Typography>\n          <Typography>Child seat suitable for 9-18 Kg.</Typography>\n        </Stack>\n      </Grid>\n\n      <Grid item xs={12} md={4}>\n        <TextField\n          label=\"Child seat quantity\"\n          variant=\"outlined\"\n          size=\"large\"\n          fullWidth\n          name=\"bookingChildSeatQty\"\n          type=\"number\"\n          id=\"bookingChildSeatQty\"\n          value={bookingData?.bookingChildSeatQty || 0}\n          onChange={(event) => {\n            if (Number(event.target.value) >= 0) {\n              dispatch(\n                setBookingData({\n                  ...bookingData,\n                  bookingChildSeatQty: event.target.value,\n                })\n              );\n            }\n          }}\n          disabled={callLocation === \"bookingList\" && disableEditing}\n        />\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n    </>\n  );\n}\n","import { Divider, Grid, Stack, Typography } from \"@mui/material\";\nimport CurrencyFormat from \"react-currency-format\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setBookingData } from \"src/features/bookingSlice\";\n\nexport default function BookingVehiclePricingSummary({ price, bookingData }) {\n  const dispatch = useDispatch();\n\n  const temp_calculateTotalAmountRef = useRef();\n\n  useEffect(() => {\n    temp_calculateTotalAmountRef.current();\n  }, [\n    bookingData?.bookingNumberOfDays,\n    bookingData?.bookingBabySeatQty,\n    bookingData?.bookingBoosterSeatQty,\n    bookingData?.bookingChildSeatQty,\n  ]);\n\n  function calculateTotalAmount() {\n    let totalAmount = 0;\n\n    let totalFromNumOfDays =\n      Number(bookingData?.bookingNumberOfDays || 0) * Number(price || 0);\n\n    let totalFromBabySeat = Number(bookingData?.bookingBabySeatQty || 0) * 7;\n    let totalFromBoosterSeat =\n      Number(bookingData?.bookingBoosterSeatQty || 0) * 7;\n    let totalFromChildSeat = Number(bookingData?.bookingChildSeatQty || 0) * 7;\n\n    totalAmount =\n      totalFromNumOfDays +\n      totalFromBabySeat +\n      totalFromBoosterSeat +\n      totalFromChildSeat;\n\n    dispatch(\n      setBookingData({ ...bookingData, bookingTotalAmount: totalAmount })\n    );\n  }\n\n  temp_calculateTotalAmountRef.current = calculateTotalAmount;\n\n  return (\n    <>\n      <Grid item xs={12} md={7}>\n        <Typography>Price per day</Typography>\n      </Grid>\n      <Grid item xs={12} md={5}>\n        <Typography align=\"right\">\n          <CurrencyFormat\n            value={Number(price || 0).toFixed(2)}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n          />\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={7}>\n        <Typography>Rental Days</Typography>\n      </Grid>\n      <Grid item xs={12} md={5}>\n        <Typography align=\"right\">\n          {bookingData?.bookingNumberOfDays || 0}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={7}>\n        <Typography>Rental Fee</Typography>\n      </Grid>\n      <Grid item xs={12} md={5}>\n        <Typography align=\"right\">\n          <CurrencyFormat\n            value={(\n              Number(price || 0) * Number(bookingData?.bookingNumberOfDays || 0)\n            ).toFixed(2)}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n          />\n        </Typography>\n      </Grid>\n\n      {bookingData?.bookingBabySeatQty &&\n      Number(bookingData?.bookingBabySeatQty || 0) > 0 ? (\n        <>\n          <Grid item xs={12} md={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\n              <Typography>{`(+) Baby Seat`}</Typography>\n              <ClearIcon fontSize=\"small\" />\n              <Typography>{Number(bookingData?.bookingBabySeatQty)}</Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Typography align=\"right\">\n              <CurrencyFormat\n                value={(\n                  Number(price || 0) *\n                  Number(bookingData?.bookingBabySeatQty || 0)\n                ).toFixed(2)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n              />\n            </Typography>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {bookingData?.bookingBoosterSeatQty &&\n      Number(bookingData?.bookingBoosterSeatQty || 0) > 0 ? (\n        <>\n          <Grid item xs={12} md={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\n              <Typography>{`(+) Booster Seat`}</Typography>\n              <ClearIcon fontSize=\"small\" />\n              <Typography>\n                {Number(bookingData?.bookingBoosterSeatQty)}\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Typography align=\"right\">\n              <CurrencyFormat\n                value={(\n                  Number(price || 0) *\n                  Number(bookingData?.bookingBoosterSeatQty || 0)\n                ).toFixed(2)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n              />\n            </Typography>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {bookingData?.bookingChildSeatQty &&\n      Number(bookingData?.bookingChildSeatQty || 0) > 0 ? (\n        <>\n          <Grid item xs={12} md={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\n              <Typography>{`(+) Child Seat`}</Typography>\n              <ClearIcon fontSize=\"small\" />\n              <Typography>\n                {Number(bookingData?.bookingChildSeatQty)}\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Typography align=\"right\">\n              <CurrencyFormat\n                value={(\n                  Number(price || 0) *\n                  Number(bookingData?.bookingChildSeatQty || 0)\n                ).toFixed(2)}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n              />\n            </Typography>\n          </Grid>\n        </>\n      ) : (\n        <></>\n      )}\n\n      <Grid item xs={12} md={12}>\n        <Divider />\n      </Grid>\n\n      <Grid item xs={12} md={7}>\n        <Typography variant=\"h6\">Total amount</Typography>\n      </Grid>\n      <Grid item xs={12} md={5}>\n        <Typography align=\"right\">\n          <CurrencyFormat\n            value={Number(bookingData?.bookingTotalAmount || 0).toFixed(2)}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={`${process.env.REACT_APP_CURRENCY_USED} `}\n          />\n        </Typography>\n      </Grid>\n    </>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1564;","import l from \"@linways/table-to-excel\";\nimport {\n  Alert,\n  Autocomplete,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createNewContract,\n  notifyByEmailAfterUpdatingBooking,\n} from \"src/components/core-functions/CoreFunctions\";\nimport { selectBooking, setBookingData } from \"src/features/bookingSlice\";\nimport { setLoading } from \"src/features/globalSlice\";\nimport db from \"src/firebase\";\nimport useAuth from \"src/hooks/useAuth\";\nimport BookingStepOne from \"src/sections/@dashboard/e-commerce/product-details/booking/BookingStepOne\";\nimport BookingStepTwo from \"src/sections/@dashboard/e-commerce/product-details/booking/BookingStepTwo\";\nimport BookingVehiclePricingSummary from \"src/sections/@dashboard/e-commerce/product-details/booking/BookingVehiclePricingSummary\";\n\nexport default function UpdateVehicleBookingDialog({\n  open,\n  setOpen,\n  fetchBooking,\n  viewOnly,\n}) {\n  const { user } = useAuth();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const { bookingData } = useSelector(selectBooking);\n\n  const [disableEditing, setDisableEditing] = useState(false);\n\n  useEffect(() => {\n    if (open) {\n      if (\n        viewOnly ||\n        (user?.role == \"client\" &&\n          (bookingData?.status === \"confirmed\" ||\n            bookingData?.status === \"declined\"))\n      ) {\n        setDisableEditing(true);\n      } else {\n        setDisableEditing(false);\n      }\n    }\n  }, [open]);\n\n  async function updateBooking() {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"vehiclebooking\")\n      .doc(bookingData?.bookingId)\n      .set(\n        {\n          ...bookingData,\n        },\n        { merge: true }\n      )\n      .then(async () => {\n        if (bookingData?.status === \"confirmed\") {\n          let contractResult = await createNewContract();\n          if (contractResult?.error) {\n            enqueueSnackbar(contractResult?.message, {\n              variant: \"error\",\n            });\n            dispatch(setLoading(false));\n          } else {\n            if (user?.role === \"client\") {\n              notifyClientAdminAfterUpdate(\"client\");\n            } else if (user?.role !== \"client\") {\n              notifyClientAdminAfterUpdate(\"admin\");\n            }\n          }\n        } else {\n          if (user?.role === \"client\") {\n            notifyClientAdminAfterUpdate(\"client\");\n          } else if (user?.role !== \"client\") {\n            notifyClientAdminAfterUpdate(\"admin\");\n          }\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while updating booking details: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function notifyClientAdminAfterUpdate(updatedByRole) {\n    // notify client\n    let clientNotificationResult = await notifyByEmailAfterUpdatingBooking(\n      bookingData?.bookingId,\n      `${user?.lastName || \"\"} ${user?.firstName || \"\"}`,\n      user?.email,\n      bookingData,\n      bookingData?.vehicleDetails?.name,\n      // \"Booking updated successfully.\",\n      \"client\",\n      updatedByRole\n    );\n\n    if (clientNotificationResult?.error) {\n      enqueueSnackbar(clientNotificationResult?.message, {\n        variant: \"error\",\n      });\n      dispatch(setLoading(false));\n    } else if (!clientNotificationResult?.error) {\n      // no error\n      // notify client\n      let adminNotificationResult = await notifyByEmailAfterUpdatingBooking(\n        bookingData?.bookingId,\n        \"Admin\",\n        process.env.REACT_APP_EMAIL,\n        bookingData,\n        bookingData?.vehicleDetails?.name,\n        // \"Booking updated successfully.\",\n        \"admin\",\n        updatedByRole\n      );\n\n      if (adminNotificationResult?.error) {\n        enqueueSnackbar(adminNotificationResult?.message, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else {\n        // no error\n        enqueueSnackbar(clientNotificationResult?.message, {\n          variant: \"success\",\n        });\n\n        enqueueSnackbar(adminNotificationResult?.message, {\n          variant: \"success\",\n        });\n\n        handleClose();\n\n        fetchBooking();\n\n        dispatch(setLoading(false));\n      }\n    }\n  }\n\n  function handleClose() {\n    dispatch(\n      setBookingData({\n        bookingPickupAddress: null,\n        bookingPickupAnywhereAddress: \"\",\n        bookingPickupDate: new Date(),\n        bookingPickupTime: \"00:00\",\n        bookingReturnDate: new Date(),\n        bookingReturnTime: \"00:00\",\n        bookingNumberOfDays: 0,\n        bookingBabySeatQty: 0,\n        bookingBoosterSeatQty: 0,\n        bookingChildSeatQty: 0,\n        bookingTotalAmount: 0,\n      })\n    );\n\n    setOpen(false);\n  }\n\n  const handleSelectChange = async (e, value, reason) => {\n    e.preventDefault();\n    if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n      dispatch(\n        setBookingData({\n          ...bookingData,\n          status: value,\n        })\n      );\n    } else if (reason === \"removeOption\" || reason === \"clear\") {\n      dispatch(\n        setBookingData({\n          ...bookingData,\n          status: \"pending\",\n        })\n      );\n    }\n  };\n\n  return (\n    <Dialog open={open} maxWidth=\"md\" fullWidth>\n      <DialogTitle>Update booking</DialogTitle>\n      <DialogContent>\n        <Divider />\n        <br />\n\n        <Grid container spacing={3} justifyContent={\"flex-end\"}>\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <>\n                {bookingData?.status === \"pending\" ? (\n                  <Alert severity=\"warning\">Pending</Alert>\n                ) : bookingData?.status === \"confirmed\" &&\n                  user?.role === \"client\" ? (\n                  <Alert severity=\"success\">Confirmed</Alert>\n                ) : bookingData?.status === \"declined\" ? (\n                  <Alert severity=\"error\">Declined</Alert>\n                ) : (\n                  <></>\n                )}\n              </>\n\n              {user && user?.role !== \"client\" ? (\n                <Autocomplete\n                  size=\"small\"\n                  label=\"Please choose status\"\n                  id=\"client-drop-down\"\n                  options={[\"pending\", \"confirmed\", \"declined\"]}\n                  value={bookingData?.status || null}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Please choose status\"\n                      fullWidth\n                    />\n                  )}\n                  onChange={(e, value, reason) =>\n                    handleSelectChange(e, value, reason)\n                  }\n                  getOptionLabel={(option) =>\n                    option === \"pending\"\n                      ? \"Pending\"\n                      : option === \"confirmed\"\n                      ? \"Confirmed\"\n                      : option === \"declined\"\n                      ? \"Declined\"\n                      : \"\"\n                  }\n                  disabled={disableEditing}\n                />\n              ) : (\n                <></>\n              )}\n            </Stack>\n          </Grid>\n\n          <BookingStepOne\n            product={{\n              name: bookingData?.vehicleDetails?.name || \"\",\n              price: bookingData?.vehicleDetails?.price || 0,\n            }}\n            callLocation=\"bookingList\"\n            disableEditing={disableEditing}\n          />\n          <BookingStepTwo\n            callLocation=\"bookingList\"\n            disableEditing={disableEditing}\n          />\n\n          <Divider />\n\n          <Grid item xs={12} md={12}>\n            <Typography align=\"right\" variant=\"h5\">\n              Price summary\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Grid container spacing={3}>\n              <BookingVehiclePricingSummary\n                price={bookingData?.vehicleDetails?.price || 0}\n                bookingData={bookingData}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        {!disableEditing ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={() => {\n              updateBooking();\n            }}\n          >\n            Submit changes\n          </Button>\n        ) : (\n          <></>\n        )}\n\n        <Button\n          variant=\"outlined\"\n          color=\"error\"\n          size=\"large\"\n          onClick={() => handleClose()}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { lazy, Suspense, useRef, useState, useEffect, Fragment } from \"react\";\n// @mui\nimport {\n  Button,\n  Card,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n// hooks\nimport useSettings from \"../../../hooks/useSettings\";\n// components\nimport Page from \"../../../components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport db, { firebaseApp } from \"../../../firebase\";\nimport firebase from \"firebase/compat\";\nimport { useNavigate } from \"react-router\";\nimport { PATH_DASHBOARD } from \"../../../routes/paths\";\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { isEmpty } from \"lodash\";\n\nimport { DatePicker } from \"@mui/lab\";\nimport { selectDocument } from \"../../../features/documentSlice\";\nimport CurrencyFormat from \"react-currency-format\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport Iconify from \"../../../components/Iconify\";\nimport { handleViewDownload } from \"../../../components/core-functions/SelectionCoreFunctions\";\nimport { setBookingData } from \"src/features/bookingSlice\";\nimport UpdateVehicleBookingDialog from \"src/pages/car-rental-atish/car-rental/booking/UpdateVehicleBookingDialog\";\n\nconst CompanyClientSelection = lazy(() =>\n  import(\"../../../components/selection-component/CompanyClientSelection\")\n);\n\n// ----------------------------------------------------------------------\n\nexport default function PaymentIndex() {\n  const { user } = useAuth();\n\n  const navigate = useNavigate();\n\n  const { themeStretch } = useSettings();\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const temp_fetch_invoice_ref = useRef();\n\n  const [logo, setLogo] = useState(\"\");\n\n  const [sigImage, setSigImage] = useState(\"\");\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  /*   const { companyPaymentSelected, clientPaymentSelected } =\n    useSelector(selectPaymentSection); */\n\n  const { companyDetails, clientDocumentObjectSelected, paymentDocType } =\n    useSelector(selectDocument);\n\n  const [us_invoicelist, set_us_invoicelist] = useState([]);\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [us_filter, set_us_filter] = useState(\"\");\n\n  const [us_open_screenshot_dialog, set_us_open_screenshot_dialog] =\n    useState(false);\n\n  const [us_screenshot_invoice_data, set_us_screenshot_invoice_data] =\n    useState(null);\n\n  const [us_open_expense_dialog, set_us_open_expense_dialog] = useState(false);\n\n  const [us_display_add_expense, set_us_display_add_expense] = useState(false);\n\n  const [us_add_expense_data, set_us_add_expense_data] = useState({\n    expenseAmt: 0,\n    expenseDesc: \"\",\n  });\n\n  const [us_expense_invoice_data, set_us_expense_invoice_data] = useState(null);\n\n  const [partialPaymentAmountInvoiceId, set_partialPaymentAmountInvoiceId] =\n    useState(\"\");\n\n  const [partialPaymentAmount, set_partialPaymentAmount] = useState(\"\");\n\n  const [partialPaymentType, set_partialPaymentType] = useState(\"\");\n\n  const [openPartialPaymentFieldDialog, set_openPartialPaymentFieldDialog] =\n    useState(false);\n\n  useEffect(() => {\n    // convert logo image to adaptable react-pdf image\n    temp_logo_image_ref.current();\n    // convert signature image to adaptable react-pdf image\n    temp_signature_image_ref.current();\n  }, [companyDetails]);\n\n  useEffect(() => {\n    temp_fetch_invoice_ref.current();\n  }, [\n    us_fromDate,\n    us_ToDate,\n    companyDetails,\n    clientDocumentObjectSelected,\n    paymentDocType,\n  ]);\n\n  async function getLogoImage() {\n    if (\n      companyDetails?.data?.imageUrl &&\n      companyDetails?.data?.imageUrl !== \"\"\n    ) {\n      dispatch(setLoading(true));\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      setLogo(logoImage);\n    }\n  }\n\n  temp_logo_image_ref.current = getLogoImage;\n\n  async function getSignatureImage() {\n    if (companyDetails?.data?.sigUrl && companyDetails?.data?.sigUrl !== \"\") {\n      dispatch(setLoading(true));\n      let sigImage = await toDataUrl(companyDetails?.data?.sigUrl);\n      setSigImage(sigImage);\n    }\n  }\n\n  temp_signature_image_ref.current = getSignatureImage;\n\n  async function toDataUrl(url) {\n    if (url === \"\") {\n      return \"\";\n    } else {\n      try {\n        const data = await fetch(url);\n        const blob = await data.blob();\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  async function fetchInvoice() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\" &&\n      companyDetails\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          /* .collection(\"company\")\n          .doc(companyDetails?.id) */\n          .collection(\"vehiclebooking\")\n          .where(\n            \"dateCreated\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"dateCreated\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let invoiceArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((invoiceDoc) => {\n                let remainingAmt = Number(\n                  invoiceDoc?.data()?.docRemainingPaymentAmt || 0\n                );\n\n                let totalExpenseAmountForInvoice = 0;\n\n                if (\n                  invoiceDoc?.data()?.invoiceExpensetData &&\n                  invoiceDoc?.data()?.invoiceExpensetData?.length > 0\n                ) {\n                  invoiceDoc?.data()?.invoiceExpensetData.forEach((expense) => {\n                    totalExpenseAmountForInvoice =\n                      totalExpenseAmountForInvoice +\n                      Number(expense?.expenseAmt || 0);\n                  });\n                }\n\n                invoiceArray.push({\n                  checked: false,\n                  id: invoiceDoc?.id,\n                  data: {\n                    ...invoiceDoc?.data(),\n                  },\n                  paymentAmt: 0,\n                  paymentType: \"\",\n                  docRemainingPaymentAmt: remainingAmt,\n                  totalExpenseAmountForInvoice: totalExpenseAmountForInvoice,\n                });\n              });\n              set_us_invoicelist(invoiceArray);\n            } else {\n              set_us_invoicelist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching bookings: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_invoice_ref.current = fetchInvoice;\n\n  function addPartialPayment() {\n    if (us_invoicelist && us_invoicelist?.length > 0) {\n      dispatch(setLoading(true));\n\n      let selectedLineData = [];\n\n      us_invoicelist.forEach((invoice) => {\n        if (invoice?.data?.bookingId === partialPaymentAmountInvoiceId) {\n          let remainingAmount = 0;\n\n          if (Number(invoice?.data?.docRemainingPaymentAmt || 0) > 0) {\n            remainingAmount =\n              Number(invoice?.data?.docRemainingPaymentAmt || 0) -\n              Number(partialPaymentAmount);\n          } else {\n            remainingAmount =\n              Number(invoice?.data?.bookingTotalAmount || 0) -\n              Number(partialPaymentAmount);\n          }\n\n          let paymentStatus = \"\";\n          if (\n            remainingAmount === Number(invoice?.data?.bookingTotalAmount || 0)\n          ) {\n            paymentStatus = \"Unpaid\";\n          } else if (\n            remainingAmount !== 0 &&\n            remainingAmount < Number(invoice?.data?.bookingTotalAmount || 0)\n          ) {\n            paymentStatus = \"Partially paid\";\n          } else if (remainingAmount < 0) {\n            paymentStatus = \"Over paid\";\n          } else if (remainingAmount === 0) {\n            paymentStatus = \"Paid\";\n          }\n\n          /*    let newTermsAndCondition = invoice?.data?.termsAndCondition || \"\";\n          // only for SMART PROMOTE\n          // only for proforma - display the down payment done in terms and condition\n          if (\n            companyDetails?.id ===\n              process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID &&\n            paymentDocType === \"proforma\"\n          ) {\n            newTermsAndCondition =\n              newTermsAndCondition +\n              \"\\n\" +\n              `Down payment of Rs${Number(partialPaymentAmount).toFixed(\n                2\n              )} done.`;\n          } */\n\n          selectedLineData.push({\n            ...invoice,\n            paymentAmount: partialPaymentAmount,\n            paymentType: partialPaymentType,\n            data: {\n              ...invoice.data,\n              paymentStatus: paymentStatus,\n              // termsAndCondition: newTermsAndCondition,\n            },\n            docRemainingPaymentAmt: remainingAmount,\n          });\n        }\n      });\n\n      // create a payment doc using transaction to check if paymentCounter exists\n      // Create a reference to the SF doc.\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      db.runTransaction(async (transaction) => {\n        return transaction.get(paymentCounterDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            return null;\n          }\n\n          var newPaymentCounter = Number(sfDoc.data().paymentCounter || 0) + 1;\n          return newPaymentCounter;\n        });\n      })\n        .then(async (result) => {\n          if (result === null) {\n            await db\n              .collection(\"company\")\n              .doc(companyDetails.id)\n              .collection(\"payment\")\n              .doc(\"paymentCounter\")\n              .set({ paymentCounter: 1 })\n              .then(() => {\n                executeBatchUpdate(1, selectedLineData);\n              })\n              .catch((err) => {\n                enqueueSnackbar(\n                  `Error occured while creating payment counter: ${err?.message}`,\n                  { variant: \"error\" }\n                );\n                dispatch(setLoading(false));\n              });\n          } else if (result && Number(result) > 0) {\n            executeBatchUpdate(result, selectedLineData);\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while executing payment transaction: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  function executeBatchUpdate(result, checkedLines) {\n    let finalcheckedLines = [];\n\n    let paymentNumberDoc = result.toString();\n    if (paymentNumberDoc?.length === 1) {\n      paymentNumberDoc = `0000${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 2) {\n      paymentNumberDoc = `000${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 3) {\n      paymentNumberDoc = `00${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 4) {\n      paymentNumberDoc = `0${paymentNumberDoc}`;\n    }\n\n    // Get a new write batch\n    var batch = db.batch();\n\n    // store payment made\n    const paymentdocRefId = result.toString();\n\n    var paymentCounterDocRef = db\n      .collection(\"company\")\n      .doc(companyDetails.id)\n      .collection(\"payment\")\n      .doc(\"paymentCounter\");\n\n    var paymentDocRef = db\n      .collection(\"company\")\n      .doc(companyDetails.id)\n      .collection(\"payment\")\n      .doc(paymentdocRefId);\n\n    checkedLines.forEach((invoice) => {\n      var invoiceRef = db.collection(\"vehiclebooking\").doc(invoice.id);\n\n      let newInvRemainingPaymentAmt = Number(\n        invoice?.docRemainingPaymentAmt || 0\n      );\n\n      let newAttachedPaymentNumber = [];\n      if (\n        invoice?.data?.attachedPaymentNumber &&\n        invoice?.data?.attachedPaymentNumber?.length > 0\n      ) {\n        newAttachedPaymentNumber = [\n          ...invoice?.data?.attachedPaymentNumber,\n          {\n            paymentNumber: paymentdocRefId,\n            paymentNumberString: paymentNumberDoc,\n            paymentType: invoice?.paymentType, // us_paymentType,\n            paymentAmount: invoice?.paymentAmount, // us_i_amount,\n            paymentRemainingAmount: newInvRemainingPaymentAmt,\n            paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n          },\n        ];\n      } else {\n        newAttachedPaymentNumber.push({\n          paymentNumber: paymentdocRefId,\n          paymentNumberString: paymentNumberDoc,\n          paymentType: invoice?.paymentType, // us_paymentType,\n          paymentAmount: invoice?.paymentAmount, // us_i_amount,\n          paymentRemainingAmount: newInvRemainingPaymentAmt,\n          paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n        });\n      }\n\n      let paymentStatus = \"\";\n      if (\n        newInvRemainingPaymentAmt ===\n        Number(invoice?.data?.bookingTotalAmount || 0)\n      ) {\n        paymentStatus = \"Unpaid\";\n      } else if (\n        newInvRemainingPaymentAmt > 0 &&\n        newInvRemainingPaymentAmt <\n          Number(invoice?.data?.bookingTotalAmount || 0)\n      ) {\n        paymentStatus = \"Partially paid\";\n      } else if (newInvRemainingPaymentAmt < 0) {\n        paymentStatus = \"Over paid\";\n      } else if (newInvRemainingPaymentAmt === 0) {\n        paymentStatus = \"Paid\";\n      }\n\n      finalcheckedLines.push({\n        invoiceId: invoice?.id,\n        ...invoice?.data,\n        attachedPaymentNumber: newAttachedPaymentNumber,\n        paymentStatus: paymentStatus,\n        docRemainingPaymentAmt: newInvRemainingPaymentAmt,\n      });\n\n      batch.set(\n        invoiceRef,\n        {\n          docRemainingPaymentAmt: newInvRemainingPaymentAmt,\n          attachedPaymentNumber: newAttachedPaymentNumber,\n          paymentStatus: paymentStatus,\n        },\n        { merge: true }\n      );\n    });\n\n    // update payment counter\n    batch.set(\n      paymentCounterDocRef,\n      { paymentCounter: Number(result) },\n      { merge: true }\n    );\n\n    // add new payment doc\n    batch.set(\n      paymentDocRef,\n      {\n        invoiceList: finalcheckedLines,\n        paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n        dateCreated: firebase.firestore.Timestamp.fromDate(new Date()),\n      },\n      { merge: true }\n    );\n\n    // Commit the batch\n    batch.commit().then(async () => {\n      enqueueSnackbar(\"Payment stored successfully\");\n\n      set_partialPaymentAmountInvoiceId(\"\");\n      set_partialPaymentAmount(\"\");\n      set_partialPaymentType(\"\");\n      set_openPartialPaymentFieldDialog(false);\n\n      await fetchInvoice();\n      dispatch(setLoading(false));\n    });\n  }\n\n  async function deletePayment(\n    recentPaymentMade,\n    attachedPaymentNumber,\n    docRemainingPaymentAmt,\n    invoiceId,\n    bookingTotalAmount\n  ) {\n    dispatch(setLoading(true));\n    // remove payment from attachedPaymentNumber array\n    if (attachedPaymentNumber && attachedPaymentNumber?.length > 0) {\n      // search and remove recent payement made\n      let newAttachedPaymentNumber = [];\n      attachedPaymentNumber.forEach((paymentMade) => {\n        if (paymentMade?.paymentNumber !== recentPaymentMade?.paymentNumber) {\n          newAttachedPaymentNumber.push({ ...paymentMade });\n        }\n      });\n\n      let newInvRemainingPaymentAmt = 0;\n      // calculate new remaining invoice amount\n      if (\n        docRemainingPaymentAmt !== undefined &&\n        docRemainingPaymentAmt !== null\n      ) {\n        newInvRemainingPaymentAmt =\n          Number(recentPaymentMade?.paymentAmount) +\n          Number(docRemainingPaymentAmt);\n      }\n\n      let paymentStatus = \"\";\n      if (newInvRemainingPaymentAmt === Number(bookingTotalAmount || 0)) {\n        paymentStatus = \"Unpaid\";\n      } else if (\n        newInvRemainingPaymentAmt > 0 &&\n        newInvRemainingPaymentAmt < Number(bookingTotalAmount || 0)\n      ) {\n        paymentStatus = \"Partially paid\";\n      } else if (newInvRemainingPaymentAmt < 0) {\n        paymentStatus = \"Over paid\";\n      } else if (newInvRemainingPaymentAmt === 0) {\n        paymentStatus = \"Paid\";\n      }\n\n      // create batch to update invoice document and payment document\n\n      // Get a new write batch\n      var batch = db.batch();\n\n      var invoiceRef = db.collection(\"vehiclebooking\").doc(invoiceId);\n\n      var paymentDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(recentPaymentMade?.paymentNumber);\n\n      // update invoice document\n      batch.set(\n        invoiceRef,\n        {\n          attachedPaymentNumber: newAttachedPaymentNumber,\n          docRemainingPaymentAmt: newInvRemainingPaymentAmt,\n          paymentStatus: paymentStatus,\n        },\n        { merge: true }\n      );\n\n      // update payment document\n      batch.set(\n        paymentDocRef,\n        {\n          isDeleted: true,\n          deletedTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        },\n        { merge: true }\n      );\n\n      // Commit the batch\n      batch\n        .commit()\n        .then(async () => {\n          enqueueSnackbar(\"Payment removed and Invoice updated successfully.\");\n          await fetchInvoice();\n          dispatch(setLoading(false));\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while executing batch: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  async function handleDoFullPayment(invoiceId) {\n    // get selected invoice\n    let invoiceSelected = us_invoicelist.find(\n      (invoice) => invoice.id === invoiceId\n    );\n\n    if (!isEmpty(invoiceSelected)) {\n      dispatch(setLoading(true));\n      // create a payment doc using transaction to check if paymentCounter exists\n      // Create a reference to the SF doc.\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      db.runTransaction(async (transaction) => {\n        return transaction.get(paymentCounterDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            return null;\n          }\n\n          var newPaymentCounter = Number(sfDoc.data().paymentCounter || 0) + 1;\n          return newPaymentCounter;\n        });\n      })\n        .then(async (result) => {\n          if (result === null) {\n            await db\n              .collection(\"company\")\n              .doc(companyDetails.id)\n              .collection(\"payment\")\n              .doc(\"paymentCounter\")\n              .set({ paymentCounter: 1 })\n              .then(async () => {\n                await executeInvoiceUpdateFullPayment(1, invoiceSelected);\n              })\n              .catch((err) => {\n                enqueueSnackbar(\n                  `Error occured while creating payment counter: ${err?.message}`,\n                  { variant: \"error\" }\n                );\n                dispatch(setLoading(false));\n              });\n          } else if (result && Number(result) > 0) {\n            await executeInvoiceUpdateFullPayment(result, invoiceSelected);\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while executing payment transaction: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  async function executeInvoiceUpdateFullPayment(result, invoiceSelected) {\n    let paymentNumberDoc = result.toString();\n    if (paymentNumberDoc?.length === 1) {\n      paymentNumberDoc = `0000${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 2) {\n      paymentNumberDoc = `000${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 3) {\n      paymentNumberDoc = `00${paymentNumberDoc}`;\n    } else if (paymentNumberDoc?.length === 4) {\n      paymentNumberDoc = `0${paymentNumberDoc}`;\n    }\n\n    // Get a new write batch\n    var batch = db.batch();\n\n    // store payment made\n    const paymentdocRefId = result.toString();\n\n    var paymentCounterDocRef = db\n      .collection(\"company\")\n      .doc(companyDetails.id)\n      .collection(\"payment\")\n      .doc(\"paymentCounter\");\n\n    var paymentDocRef = db\n      .collection(\"company\")\n      .doc(companyDetails.id)\n      .collection(\"payment\")\n      .doc(paymentdocRefId);\n\n    var invoiceDocRef = db.collection(\"vehiclebooking\").doc(invoiceSelected.id);\n\n    // update payment counter\n    batch.set(\n      paymentCounterDocRef,\n      { paymentCounter: Number(result) },\n      { merge: true }\n    );\n\n    // add new payment doc\n    batch.set(\n      paymentDocRef,\n      {\n        invoiceList: [{ ...invoiceSelected }],\n        paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n        dateCreated: firebase.firestore.Timestamp.fromDate(new Date()),\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      invoiceDocRef,\n      {\n        paymentStatus: \"Paid\",\n        docRemainingPaymentAmt: 0,\n        attachedPaymentNumber: [\n          {\n            paymentNumber: paymentdocRefId,\n            paymentNumberString: paymentNumberDoc,\n            paymentType: \"\",\n            paymentAmount: invoiceSelected?.data?.bookingTotalAmount || 0,\n            paymentRemainingAmount: 0,\n            paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n          },\n        ],\n      },\n      { merge: true }\n    );\n\n    // Commit the batch\n    batch.commit().then(async () => {\n      enqueueSnackbar(\"Full payment stored successfully\");\n      await fetchInvoice();\n      dispatch(setLoading(false));\n    });\n  }\n\n  const onFileChange = async (e, type) => {\n    e.preventDefault();\n    if (e.target.files && e.target.files.length > 0) {\n      dispatch(setLoading(true));\n\n      let fileUrl = \"\";\n      const todayDate = new Date();\n      const todayISOString = todayDate.toISOString();\n      const screenshotStoragePath = `/screenshot/${companyDetails?.id}/${us_screenshot_invoice_data?.invoiceData?.docType}/${todayISOString}`;\n      const file = e.target.files[0];\n      const storageRef = firebaseApp.storage().ref();\n      const fileRef = storageRef.child(screenshotStoragePath);\n\n      //upload screenshot in firebase storage\n      await fileRef.put(file);\n      fileUrl = await fileRef.getDownloadURL();\n\n      if (fileUrl) {\n        let newScreenshotList = [\n          ...(us_screenshot_invoice_data?.invoiceScreenshotData || []),\n        ];\n        newScreenshotList.push({\n          dateString: todayISOString,\n          screenshotUrl: fileUrl,\n          screenshotStoragePath: screenshotStoragePath,\n          timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n        });\n\n        // store download link url in firestore\n        await db\n          .collection(\"vehiclebooking\")\n          .doc(us_screenshot_invoice_data?.invoiceId)\n          .set(\n            {\n              invoiceScreenshotData: newScreenshotList,\n            },\n            { merge: true }\n          )\n          .then(() => {\n            set_us_screenshot_invoice_data({\n              ...us_screenshot_invoice_data,\n              invoiceScreenshotData: newScreenshotList,\n            });\n            enqueueSnackbar(\"Sreenshot uploaded successfully\");\n            dispatch(setLoading(false));\n\n            fetchInvoice();\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while uploading screenshot: ${err?.message || \"\"}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      } else {\n        enqueueSnackbar(`Error occured while getting screenshot storage url`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      }\n    }\n  };\n\n  async function deleteScreenshot(screenshot) {\n    if (screenshot?.screenshotStoragePath) {\n      dispatch(setLoading(true));\n\n      // Create a reference to the file to delete\n      const storageRef = firebaseApp.storage().ref();\n      var desertRef = storageRef.child(screenshot?.screenshotStoragePath);\n\n      // Delete the file\n      await desertRef\n        .delete()\n        .then(async () => {\n          // File deleted successfully\n          // remove from firestore doc\n          let newScreenshotList = [\n            ...(us_screenshot_invoice_data?.invoiceScreenshotData || []),\n          ];\n\n          newScreenshotList = newScreenshotList.filter(\n            (shot) =>\n              shot?.screenshotStoragePath !== screenshot?.screenshotStoragePath\n          );\n\n          // update doc\n          await db\n\n            .collection(\"vehiclebooking\")\n            .doc(us_screenshot_invoice_data?.invoiceId)\n            .set(\n              {\n                invoiceScreenshotData: newScreenshotList,\n              },\n              { merge: true }\n            )\n            .then(() => {\n              set_us_screenshot_invoice_data({\n                ...us_screenshot_invoice_data,\n                invoiceScreenshotData: newScreenshotList,\n              });\n\n              enqueueSnackbar(\"Sreenshot deleted successfully\");\n              dispatch(setLoading(false));\n\n              fetchInvoice();\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while deleting screenshot: ${\n                  err?.message || \"\"\n                }`,\n                { variant: \"error\" }\n              );\n              dispatch(setLoading(false));\n            });\n        })\n        .catch((error) => {\n          // Uh-oh, an error occurred!\n          enqueueSnackbar(\n            `Error occured while deleting screenshot: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  function onExpenseFileChange(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const todayDate = new Date();\n      const todayISOString = todayDate.toISOString();\n      const expenseStoragePath = `/expense/${companyDetails?.id}/${us_expense_invoice_data?.invoiceData?.docType}/${todayISOString}`;\n      const file = e.target.files[0];\n      set_us_add_expense_data({\n        ...us_add_expense_data,\n        dateString: todayISOString,\n        expenseStoragePath: expenseStoragePath,\n        expenseFile: file,\n      });\n    }\n  }\n\n  async function addExpense() {\n    /* if (\n      !us_add_expense_data?.expenseStoragePath ||\n      us_add_expense_data?.expenseStoragePath !== \"\" ||\n      us_add_expense_data?.expenseFile\n    ) { */\n    dispatch(setLoading(true));\n\n    let fileUrl = \"\";\n\n    let newExpenseList = [\n      ...(us_expense_invoice_data?.invoiceData?.invoiceExpensetData || []),\n    ];\n\n    if (us_add_expense_data?.expenseStoragePath) {\n      const storageRef = firebaseApp.storage().ref();\n      const fileRef = storageRef.child(us_add_expense_data?.expenseStoragePath);\n\n      //upload expense file in firebase storage\n      await fileRef.put(us_add_expense_data?.expenseFile);\n      fileUrl = await fileRef.getDownloadURL();\n    }\n\n    if (fileUrl) {\n      newExpenseList.push({\n        dateString: us_add_expense_data?.dateString,\n        expenseAmt: us_add_expense_data?.expenseAmt,\n        expenseDesc: us_add_expense_data?.expenseDesc,\n        expenseUrl: fileUrl,\n        expenseStoragePath: us_add_expense_data?.expenseStoragePath,\n        timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      });\n    } else {\n      newExpenseList.push({\n        dateString: \"\",\n        expenseAmt: us_add_expense_data?.expenseAmt,\n        expenseDesc: us_add_expense_data?.expenseDesc,\n        expenseUrl: \"\",\n        expenseStoragePath: \"\",\n        timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      });\n    }\n\n    // store download link url in firestore\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(us_expense_invoice_data?.invoiceData?.docType)\n      .doc(us_expense_invoice_data?.invoiceId)\n      .set(\n        {\n          invoiceExpensetData: newExpenseList,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        set_us_expense_invoice_data({\n          ...us_expense_invoice_data,\n          invoiceData: {\n            ...us_expense_invoice_data?.invoiceData,\n            invoiceExpensetData: newExpenseList,\n          },\n        });\n\n        fetchInvoice();\n        enqueueSnackbar(\"Expense uploaded successfully\");\n        set_us_display_add_expense(false);\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while uploading expense: ${err?.message || \"\"}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function deleteExpense(expense, index) {\n    dispatch(setLoading(true));\n\n    if (expense?.expenseStoragePath) {\n      // Create a reference to the file to delete\n      const storageRef = firebaseApp.storage().ref();\n      var desertRef = storageRef.child(expense?.expenseStoragePath);\n\n      // Delete the file\n      await desertRef\n        .delete()\n        .then(async () => {\n          enqueueSnackbar(\"Image Url deleted successfully\");\n          dispatch(setLoading(false));\n        })\n        .catch((error) => {\n          // Uh-oh, an error occurred!\n          enqueueSnackbar(\n            `Error occured while deleting expense: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n\n    dispatch(setLoading(true));\n    // remove from firestore doc\n    let newExpenseList = [];\n\n    us_expense_invoice_data?.invoiceData?.invoiceExpensetData.forEach(\n      (expenseData) => {\n        if (\n          expenseData?.expenseDesc !== expense?.expenseDesc &&\n          ((expenseData.timestamp &&\n            moment(expenseData.timestamp.toDate()).format(\n              \"DD-MM-YYYY, HH:MM:ss\"\n            )) ||\n            \"\") !==\n            ((expense.timestamp &&\n              moment(expense.timestamp.toDate()).format(\n                \"DD-MM-YYYY, HH:MM:ss\"\n              )) ||\n              \"\")\n        ) {\n          newExpenseList.push({ ...expense });\n        }\n      }\n    );\n\n    // update doc\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(us_expense_invoice_data?.invoiceData?.docType)\n      .doc(us_expense_invoice_data?.invoiceId)\n      .set(\n        {\n          invoiceExpensetData: newExpenseList,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        set_us_expense_invoice_data({\n          ...us_expense_invoice_data,\n          invoiceData: {\n            ...us_expense_invoice_data?.invoiceData,\n            invoiceExpensetData: newExpenseList,\n          },\n        });\n\n        fetchInvoice();\n\n        enqueueSnackbar(\"Expense deleted successfully\");\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while deleting expense: ${err?.message || \"\"}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n\n  return (\n    <Page title=\"Payment/Expense\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Stack spacing={3} direction=\"row\" alignItems={\"center\"}>\n              <Button\n                startIcon={<KeyboardBackspaceIcon />}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => navigate(PATH_DASHBOARD.general.app1)}\n              >\n                Back\n              </Button>\n              <Typography variant=\"h3\">Payment/Expense section</Typography>\n            </Stack>\n          </Grid>\n\n          <Suspense fallback={<></>}>\n            <CompanyClientSelection type={\"payment\"} />\n          </Suspense>\n          <br />\n          <br />\n\n          {companyDetails && (\n            <>\n              <Grid item xs={12} md={12}>\n                <Stack spacing={3}>\n                  <hr />\n                  <Typography>\n                    Please choose any booking and insert an amount\n                  </Typography>\n\n                  <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n                    <DatePicker\n                      label=\"From\"\n                      value={us_fromDate || \"\"}\n                      onChange={(newValue) => {\n                        set_us_fromDate(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" />\n                      )}\n                      inputFormat=\"dd/MM/yyyy\"\n                    />\n                    <DatePicker\n                      label=\"To\"\n                      value={us_ToDate || \"\"}\n                      onChange={(newValue) => {\n                        set_us_ToDate(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" />\n                      )}\n                      inputFormat=\"dd/MM/yyyy\"\n                    />\n                  </Stack>\n\n                  <Card>\n                    <Stack style={{ padding: \"10px\" }}>\n                      <br />\n                      <FormControl\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ width: \"300px\" }}\n                        disabled={\n                          !us_invoicelist || us_invoicelist?.length === 0\n                        }\n                      >\n                        <InputLabel id=\"paymentType-select-label\">\n                          Filter\n                        </InputLabel>\n                        <Select\n                          labelId=\"paymentType-select-label\"\n                          label=\"Filter\"\n                          value={us_filter || \"\"}\n                          onChange={(event) => {\n                            set_us_filter(event.target.value);\n                          }}\n                        >\n                          <MenuItem value={\"\"}>All</MenuItem>\n                          <MenuItem value={\"Unpaid\"}>Unpaid</MenuItem>\n                          <MenuItem value={\"Partially paid\"}>\n                            Partially paid\n                          </MenuItem>\n                          <MenuItem value={\"Over paid\"}>Over paid</MenuItem>\n                          <MenuItem value={\"Paid\"}>Paid</MenuItem>\n                        </Select>\n                      </FormControl>\n\n                      <br />\n                      <TableContainer>\n                        <Table border={1}>\n                          <TableHead>\n                            <TableRow>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Status\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                View booking details\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Booking Number\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Datetime created\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Do full payment\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Add partial payment\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Bill to\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Booking amount\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Remaining amount\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Recent payment made\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{ whiteSpace: \"nowrap\" }}\n                              >\n                                Upload/view screenshot\n                              </TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {us_invoicelist &&\n                              us_invoicelist?.length > 0 &&\n                              us_invoicelist\n                                .filter(\n                                  (obj) =>\n                                    (us_filter === \"\" &&\n                                      obj?.data?.paymentStatus !== \"\") ||\n                                    (us_filter !== \"\" &&\n                                      obj?.data?.paymentStatus === us_filter)\n                                )\n                                ?.map((invoice, index) => (\n                                  <TableRow key={index}>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      {invoice?.data?.paymentStatus ||\n                                        \"Un Paid\"}\n                                    </TableCell>\n                                    <TableCell\n                                      align=\"center\"\n                                      size=\"small\"\n                                      style={{\n                                        whiteSpace: \"nowrap\",\n                                      }}\n                                    >\n                                      <Stack\n                                        direction={\"row\"}\n                                        alignItems={\"center\"}\n                                        justifyContent={\"center\"}\n                                        spacing={2}\n                                      >\n                                        <IconButton\n                                          variant=\"contained\"\n                                          color=\"primary\"\n                                          onClick={() => {\n                                            dispatch(\n                                              setBookingData({\n                                                ...invoice?.data,\n                                                bookingPickupDate:\n                                                  invoice?.data?.bookingPickupDate.toDate(),\n\n                                                bookingReturnDate:\n                                                  invoice?.data?.bookingReturnDate.toDate(),\n                                              })\n                                            );\n                                            setOpenUpdateDialog(true);\n                                          }}\n                                        >\n                                          <Iconify icon={\"carbon:view\"} />\n                                        </IconButton>\n                                      </Stack>\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      {invoice?.data?.bookingId || \"\"}\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      {moment(\n                                        invoice?.data?.dateCreated.toDate()\n                                      ).format(\"DD-MM-YYYY, HH:MM:ss\")}\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                          handleDoFullPayment(invoice?.id)\n                                        }\n                                        disabled={\n                                          (Number(\n                                            invoice?.data\n                                              ?.docRemainingPaymentAmt\n                                          ) <\n                                            Number(\n                                              invoice?.data?.bookingTotalAmount\n                                            ) &&\n                                            Number(\n                                              invoice?.data\n                                                ?.docRemainingPaymentAmt\n                                            ) > 0) ||\n                                          Number(\n                                            invoice?.data\n                                              ?.docRemainingPaymentAmt\n                                          ) === 0\n                                        }\n                                      >\n                                        Make full payment\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          set_partialPaymentAmountInvoiceId(\n                                            invoice?.id\n                                          );\n                                          set_openPartialPaymentFieldDialog(\n                                            true\n                                          );\n                                        }}\n                                        disabled={\n                                          Number(\n                                            invoice?.data\n                                              ?.docRemainingPaymentAmt\n                                          ) === 0\n                                        }\n                                      >\n                                        Add partial-payment\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      {invoice?.data?.clientName || \"\"}\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      <CurrencyFormat\n                                        value={Number(\n                                          invoice?.data?.bookingTotalAmount || 0\n                                        ).toFixed(2)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                      />\n                                    </TableCell>\n\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{\n                                        whiteSpace: \"nowrap\",\n                                        background:\n                                          Number(\n                                            invoice?.docRemainingPaymentAmt || 0\n                                          ) === 0\n                                            ? \"#C6FEBE\" // success flag\n                                            : Number(\n                                                invoice?.docRemainingPaymentAmt ||\n                                                  0\n                                              ) < 0\n                                            ? \"#FEC3BE\" // error flag\n                                            : \"#FEFEBE\", // warning flag\n                                      }}\n                                    >\n                                      {Number(\n                                        invoice?.docRemainingPaymentAmt || 0\n                                      ).toFixed(2)}\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      {invoice?.data?.attachedPaymentNumber &&\n                                      invoice?.data?.attachedPaymentNumber\n                                        ?.length > 0\n                                        ? invoice?.data?.attachedPaymentNumber?.map(\n                                            (recentPayment, index) => (\n                                              <Fragment key={index}>\n                                                <Stack\n                                                  direction={\"row\"}\n                                                  alignItems={\"center\"}\n                                                >\n                                                  <IconButton\n                                                    onClick={() =>\n                                                      deletePayment(\n                                                        recentPayment,\n                                                        invoice?.data\n                                                          ?.attachedPaymentNumber,\n                                                        invoice?.docRemainingPaymentAmt,\n                                                        invoice?.id,\n                                                        invoice?.data\n                                                          ?.bookingTotalAmount\n                                                      )\n                                                    }\n                                                    disabled={\n                                                      !user?.permissions?.deleteFullPartialPaymentChk?.assignedCompanyId?.includes(\n                                                        companyDetails?.id\n                                                      )\n                                                    }\n                                                  >\n                                                    <DeleteIcon color=\"error\" />\n                                                  </IconButton>\n                                                  <Typography>{`Date: ${\n                                                    recentPayment?.paymentDate\n                                                  }, Payment: ${Number(\n                                                    recentPayment?.paymentAmount\n                                                  ).toFixed(2)}`}</Typography>\n                                                </Stack>\n                                                <Divider />\n                                              </Fragment>\n                                            )\n                                          )\n                                        : \"No recent payment made\"}\n                                    </TableCell>\n                                    <TableCell\n                                      size=\"small\"\n                                      align=\"center\"\n                                      style={{ whiteSpace: \"nowrap\" }}\n                                    >\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          set_us_open_screenshot_dialog(true);\n                                          set_us_screenshot_invoice_data({\n                                            invoiceId: invoice?.id,\n                                            invoiceScreenshotData:\n                                              invoice?.data\n                                                ?.invoiceScreenshotData || null,\n                                            invoiceData: { ...invoice?.data },\n                                          });\n                                        }}\n                                      >\n                                        upload/view\n                                      </Button>\n                                    </TableCell>\n                                  </TableRow>\n                                ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Container>\n\n      {us_open_screenshot_dialog ? (\n        <>\n          <Dialog\n            open={us_open_screenshot_dialog}\n            onClose={() => {\n              set_us_open_screenshot_dialog(false);\n              set_us_screenshot_invoice_data(null);\n            }}\n            fullWidth\n            maxWidth={\"md\"}\n          >\n            <DialogTitle>Payment screenshots</DialogTitle>\n            <DialogContent>\n              <br />\n              <Typography>\n                Upload Screenshot{\" \"}\n                <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n              </Typography>\n              <TextField\n                className=\"uploadInput\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                name=\"image\"\n                type=\"file\"\n                id=\"image\"\n                accept=\".png,.jpeg\"\n                onChange={(event) => onFileChange(event)}\n              />\n              <br />\n              <br />\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\">Date</TableCell>\n                      <TableCell size=\"small\">View</TableCell>\n                      <TableCell size=\"small\">Delete</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_screenshot_invoice_data?.invoiceScreenshotData &&\n                      us_screenshot_invoice_data?.invoiceScreenshotData\n                        ?.length > 0 &&\n                      us_screenshot_invoice_data?.invoiceScreenshotData?.map(\n                        (screenshot, index) => (\n                          <TableRow key={index}>\n                            <TableCell size=\"small\">\n                              {screenshot?.dateString || \"\"}\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              {screenshot?.screenshotUrl &&\n                              screenshot?.screenshotUrl !== \"\" ? (\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  href={`${screenshot?.screenshotUrl}`}\n                                  target=\"_blank\"\n                                >\n                                  open\n                                </Button>\n                              ) : (\n                                <Typography>No url found</Typography>\n                              )}\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              <Button\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={() => deleteScreenshot(screenshot)}\n                              >\n                                delete\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  set_us_open_screenshot_dialog(false);\n                  set_us_screenshot_invoice_data(null);\n                }}\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {us_open_expense_dialog ? (\n        <>\n          <Dialog\n            open={us_open_expense_dialog}\n            onClose={() => {\n              set_us_open_expense_dialog(false);\n              set_us_display_add_expense(false);\n              set_us_expense_invoice_data(null);\n            }}\n            fullWidth\n            maxWidth={\"md\"}\n          >\n            <DialogTitle>Expenses</DialogTitle>\n            <DialogContent>\n              <br />\n              {!us_display_add_expense && (\n                <Button\n                  onClick={() => set_us_display_add_expense(true)}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Add expense\n                </Button>\n              )}\n\n              {us_display_add_expense && (\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"expenseAmount\"\n                      type=\"text\"\n                      id=\"expenseAmount\"\n                      label={\"Expense amount\"}\n                      onChange={(event) => {\n                        set_us_add_expense_data({\n                          ...us_add_expense_data,\n                          expenseAmt: event.target.value,\n                        });\n                      }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"expenseDesc\"\n                      type=\"text\"\n                      id=\"expenseDesc\"\n                      label={\"Expense description\"}\n                      onChange={(event) => {\n                        set_us_add_expense_data({\n                          ...us_add_expense_data,\n                          expenseDesc: event.target.value,\n                        });\n                      }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <Typography>\n                      Upload expense{\" \"}\n                      <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n                    </Typography>\n                    <TextField\n                      className=\"uploadInput\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"image\"\n                      type=\"file\"\n                      id=\"image\"\n                      accept=\".png,.jpeg,.pdf\"\n                      onChange={(event) => onExpenseFileChange(event)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <Button\n                      onClick={() => addExpense()}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={\n                        !us_add_expense_data?.expenseAmt ||\n                        !us_add_expense_data?.expenseDesc ||\n                        !user?.permissions?.addExpense\n                      }\n                    >\n                      add expense\n                    </Button>\n                  </Grid>\n                </Grid>\n              )}\n\n              <br />\n              <br />\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Date\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Amount\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Description\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        View uploaded image\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Delete\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_expense_invoice_data?.invoiceData\n                      ?.invoiceExpensetData &&\n                      us_expense_invoice_data?.invoiceData?.invoiceExpensetData\n                        ?.length > 0 &&\n                      us_expense_invoice_data?.invoiceData?.invoiceExpensetData?.map(\n                        (expense, index) => (\n                          <TableRow key={index}>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              {expense?.dateString ||\n                                (expense.timestamp &&\n                                  moment(expense.timestamp.toDate()).format(\n                                    \"DD-MM-YYYY, HH:MM:ss\"\n                                  )) ||\n                                \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <CurrencyFormat\n                                value={Math.round(\n                                  Number(expense?.expenseAmt || 0)\n                                )}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              {expense?.expenseDesc || \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              {expense?.expenseUrl &&\n                              expense?.expenseUrl !== \"\" ? (\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  href={`${expense?.expenseUrl}`}\n                                  target=\"_blank\"\n                                >\n                                  open\n                                </Button>\n                              ) : (\n                                <Typography>No url found</Typography>\n                              )}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <IconButton\n                                onClick={() => {\n                                  deleteExpense(expense, index);\n                                }}\n                                disabled={!user?.permissions?.deleteExpense}\n                                color=\"error\"\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  set_us_open_expense_dialog(false);\n                  set_us_display_add_expense(false);\n                  set_us_expense_invoice_data(null);\n                }}\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {openPartialPaymentFieldDialog ? (\n        <>\n          <Dialog\n            open={openPartialPaymentFieldDialog}\n            onClose={() => {\n              set_partialPaymentAmountInvoiceId(\"\");\n              set_partialPaymentAmount(\"\");\n              set_partialPaymentType(\"\");\n              set_openPartialPaymentFieldDialog(false);\n            }}\n            fullWidth\n            maxWidth={\"sm\"}\n          >\n            <DialogTitle>Add partial payment</DialogTitle>\n            <DialogContent>\n              <br />\n              <Stack spacing={3}>\n                <TextField\n                  variant=\"outlined\"\n                  name=\"payment\"\n                  label=\"Payment amount\"\n                  id=\"payment\"\n                  type=\"text\"\n                  value={partialPaymentAmount || \"\"}\n                  size=\"small\"\n                  fullWidth\n                  onChange={(event) =>\n                    set_partialPaymentAmount(event.target.value)\n                  }\n                  required\n                />\n\n                <FormControl\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  style={{\n                    background:\n                      Number(partialPaymentAmount || 0) > 0 &&\n                      partialPaymentType === \"\"\n                        ? \"#FEFEBE\"\n                        : \"transparent\",\n                  }}\n                  disabled={\n                    !partialPaymentAmount ||\n                    Number(partialPaymentAmount || 0) === 0 ||\n                    Number(partialPaymentAmount || 0) < 0\n                  }\n                >\n                  <InputLabel required id=\"paymentType-select-label\">\n                    Choose type\n                  </InputLabel>\n                  <Select\n                    required\n                    labelId=\"paymentType-select-label\"\n                    label=\"Choose type\"\n                    value={partialPaymentType || \"\"}\n                    onChange={(event) => {\n                      set_partialPaymentType(event.target.value);\n                    }}\n                  >\n                    <MenuItem value={\"\"}>Choose a payment type</MenuItem>\n                    <MenuItem value={\"cheque\"}>Cheque</MenuItem>\n                    <MenuItem value={\"cash\"}>Cash</MenuItem>\n                    <MenuItem value={\"JUICE\"}>JUICE</MenuItem>\n                    <MenuItem value={\"Bank Transfer\"}>Bank Transfer</MenuItem>\n                  </Select>\n                </FormControl>\n              </Stack>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => addPartialPayment()}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={\n                  !partialPaymentAmountInvoiceId ||\n                  !partialPaymentAmount ||\n                  !partialPaymentType\n                }\n              >\n                Add\n              </Button>\n              <Button\n                onClick={() => {\n                  set_partialPaymentAmountInvoiceId(\"\");\n                  set_partialPaymentAmount(\"\");\n                  set_partialPaymentType(\"\");\n                  set_openPartialPaymentFieldDialog(false);\n                }}\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {openUpdateDialog ? (\n        <UpdateVehicleBookingDialog\n          open={openUpdateDialog}\n          setOpen={setOpenUpdateDialog}\n          fetchBooking={fetchInvoice}\n          viewOnly={true}\n        />\n      ) : (\n        <></>\n      )}\n    </Page>\n  );\n}\n"],"sourceRoot":""}