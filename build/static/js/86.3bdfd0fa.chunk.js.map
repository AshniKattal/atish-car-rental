{"version":3,"sources":["pages/dashboard/expense/ExpenseIndex.js"],"names":["CompanyClientSelection","lazy","ExpenseIndex","user","useAuth","navigate","useNavigate","themeStretch","useSettings","dispatch","useDispatch","enqueueSnackbar","useSnackbar","temp_fetch_invoice_ref","useRef","useState","logo","setLogo","sigImage","setSigImage","temp_logo_image_ref","temp_signature_image_ref","useSelector","selectDocument","companyDetails","clientDocumentObjectSelected","paymentDocType","us_invoicelist","set_us_invoicelist","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","us_open_screenshot_dialog","set_us_open_screenshot_dialog","us_screenshot_invoice_data","set_us_screenshot_invoice_data","us_open_expense_dialog","set_us_open_expense_dialog","us_display_add_expense","set_us_display_add_expense","expenseAmt","expenseDesc","us_add_expense_data","set_us_add_expense_data","us_expense_invoice_data","set_us_expense_invoice_data","a","data","imageUrl","setLoading","toDataUrl","logoImage","sigUrl","url","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","console","log","fetchInvoice","undefined","variant","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","doc","id","where","firebase","firestore","Timestamp","fromDate","get","then","querySnapshot","invoiceArray","docs","length","forEach","invoiceDoc","clientId","deleted","isProformaConverted","remainingAmt","Number","docRemainingPaymentAmt","totalExpenseAmountForInvoice","invoiceExpensetData","expense","push","checked","paymentAmt","paymentType","catch","err","message","useEffect","current","onFileChange","e","type","preventDefault","target","files","fileUrl","todayDate","todayISOString","screenshotStoragePath","invoiceData","docType","file","storageRef","firebaseApp","storage","ref","fileRef","child","put","getDownloadURL","newScreenshotList","invoiceScreenshotData","dateString","screenshotUrl","timestamp","invoiceId","set","merge","screenshot","desertRef","delete","filter","shot","error","newExpenseList","expenseStoragePath","expenseFile","expenseUrl","index","expenseData","moment","toDate","format","title","maxWidth","container","spacing","item","xs","md","direction","alignItems","startIcon","color","onClick","PATH_DASHBOARD","general","app1","fallback","label","value","onChange","newValue","renderInput","params","size","inputFormat","style","padding","border","align","whiteSpace","map","invoice","background","docTotal","Math","round","displayType","thousandSeparator","justifyContent","handleViewDownload","icon","docString","docDate","name","open","onClose","fullWidth","className","accept","event","href","deleteScreenshot","disabled","permissions","addExpense","assignedCompanyId","includes","required","onExpenseFileChange","deleteExpense"],"mappings":"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","file":"static/js/86.3bdfd0fa.chunk.js","sourcesContent":["import { lazy, Suspense, useRef, useState, useEffect, Fragment } from \"react\";\n// @mui\nimport {\n  Button,\n  Card,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n// hooks\nimport useSettings from \"../../../hooks/useSettings\";\n// components\nimport Page from \"../../../components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport db, { firebaseApp } from \"../../../firebase\";\nimport firebase from \"firebase/compat\";\nimport { useNavigate } from \"react-router\";\nimport { PATH_DASHBOARD } from \"../../../routes/paths\";\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { DatePicker } from \"@mui/lab\";\nimport { selectDocument } from \"../../../features/documentSlice\";\nimport CurrencyFormat from \"react-currency-format\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport Iconify from \"../../../components/Iconify\";\nimport { handleViewDownload } from \"../../../components/core-functions/SelectionCoreFunctions\";\n\nconst CompanyClientSelection = lazy(() =>\n  import(\"../../../components/selection-component/CompanyClientSelection\")\n);\n\n// ----------------------------------------------------------------------\n\nexport default function ExpenseIndex() {\n  const { user } = useAuth();\n\n  const navigate = useNavigate();\n\n  const { themeStretch } = useSettings();\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const temp_fetch_invoice_ref = useRef();\n\n  const [logo, setLogo] = useState(\"\");\n\n  const [sigImage, setSigImage] = useState(\"\");\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  /*   const { companyPaymentSelected, clientPaymentSelected } =\n    useSelector(selectPaymentSection); */\n\n  const { companyDetails, clientDocumentObjectSelected, paymentDocType } =\n    useSelector(selectDocument);\n\n  const [us_invoicelist, set_us_invoicelist] = useState([]);\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [us_open_screenshot_dialog, set_us_open_screenshot_dialog] =\n    useState(false);\n\n  const [us_screenshot_invoice_data, set_us_screenshot_invoice_data] =\n    useState(null);\n\n  const [us_open_expense_dialog, set_us_open_expense_dialog] = useState(false);\n\n  const [us_display_add_expense, set_us_display_add_expense] = useState(false);\n\n  const [us_add_expense_data, set_us_add_expense_data] = useState({\n    expenseAmt: 0,\n    expenseDesc: \"\",\n  });\n\n  const [us_expense_invoice_data, set_us_expense_invoice_data] = useState(null);\n\n  useEffect(() => {\n    // convert logo image to adaptable react-pdf image\n    temp_logo_image_ref.current();\n    // convert signature image to adaptable react-pdf image\n    temp_signature_image_ref.current();\n  }, [companyDetails]);\n\n  useEffect(() => {\n    temp_fetch_invoice_ref.current();\n  }, [\n    us_fromDate,\n    us_ToDate,\n    companyDetails,\n    clientDocumentObjectSelected,\n    paymentDocType,\n  ]);\n\n  async function getLogoImage() {\n    if (\n      companyDetails?.data?.imageUrl &&\n      companyDetails?.data?.imageUrl !== \"\"\n    ) {\n      dispatch(setLoading(true));\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      setLogo(logoImage);\n    }\n  }\n\n  temp_logo_image_ref.current = getLogoImage;\n\n  async function getSignatureImage() {\n    if (companyDetails?.data?.sigUrl && companyDetails?.data?.sigUrl !== \"\") {\n      dispatch(setLoading(true));\n      let sigImage = await toDataUrl(companyDetails?.data?.sigUrl);\n      setSigImage(sigImage);\n    }\n  }\n\n  temp_signature_image_ref.current = getSignatureImage;\n\n  async function toDataUrl(url) {\n    if (url === \"\") {\n      return \"\";\n    } else {\n      try {\n        const data = await fetch(url);\n        const blob = await data.blob();\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  async function fetchInvoice() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\" &&\n      companyDetails &&\n      clientDocumentObjectSelected &&\n      paymentDocType\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(paymentDocType)\n          .where(\n            \"docDate\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"docDate\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let invoiceArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((invoiceDoc) => {\n                if (\n                  invoiceDoc?.data()?.clientId ===\n                    clientDocumentObjectSelected?.id &&\n                  !invoiceDoc?.data()?.deleted\n                ) {\n                  let valid = false;\n\n                  // if its proforma - check if its has been converted\n                  if (\n                    paymentDocType === \"proforma\" &&\n                    invoiceDoc?.data()?.isProformaConverted\n                  ) {\n                    valid = false;\n                  } else {\n                    // for report - we take all documents\n                    valid = true;\n                  }\n\n                  if (valid) {\n                    let remainingAmt = Number(\n                      invoiceDoc?.data()?.docRemainingPaymentAmt || 0\n                    );\n\n                    let totalExpenseAmountForInvoice = 0;\n\n                    if (\n                      invoiceDoc?.data()?.invoiceExpensetData &&\n                      invoiceDoc?.data()?.invoiceExpensetData?.length > 0\n                    ) {\n                      invoiceDoc\n                        ?.data()\n                        ?.invoiceExpensetData.forEach((expense) => {\n                          totalExpenseAmountForInvoice =\n                            totalExpenseAmountForInvoice +\n                            Number(expense?.expenseAmt || 0);\n                        });\n                    }\n\n                    invoiceArray.push({\n                      checked: false,\n                      id: invoiceDoc?.id,\n                      data: {\n                        ...invoiceDoc?.data(),\n                      },\n                      paymentAmt: 0,\n                      paymentType: \"\",\n                      docRemainingPaymentAmt: remainingAmt,\n                      totalExpenseAmountForInvoice:\n                        totalExpenseAmountForInvoice,\n                    });\n                  }\n                }\n              });\n              set_us_invoicelist(invoiceArray);\n            } else {\n              set_us_invoicelist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching invoices: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_invoice_ref.current = fetchInvoice;\n\n  const onFileChange = async (e, type) => {\n    e.preventDefault();\n    if (e.target.files && e.target.files.length > 0) {\n      dispatch(setLoading(true));\n\n      let fileUrl = \"\";\n      const todayDate = new Date();\n      const todayISOString = todayDate.toISOString();\n      const screenshotStoragePath = `/screenshot/${companyDetails?.id}/${us_screenshot_invoice_data?.invoiceData?.docType}/${todayISOString}`;\n      const file = e.target.files[0];\n      const storageRef = firebaseApp.storage().ref();\n      const fileRef = storageRef.child(screenshotStoragePath);\n\n      //upload screenshot in firebase storage\n      await fileRef.put(file);\n      fileUrl = await fileRef.getDownloadURL();\n\n      if (fileUrl) {\n        let newScreenshotList = [\n          ...(us_screenshot_invoice_data?.invoiceScreenshotData || []),\n        ];\n        newScreenshotList.push({\n          dateString: todayISOString,\n          screenshotUrl: fileUrl,\n          screenshotStoragePath: screenshotStoragePath,\n          timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n        });\n\n        // store download link url in firestore\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(us_screenshot_invoice_data?.invoiceData?.docType)\n          .doc(us_screenshot_invoice_data?.invoiceId)\n          .set(\n            {\n              invoiceScreenshotData: newScreenshotList,\n            },\n            { merge: true }\n          )\n          .then(() => {\n            set_us_screenshot_invoice_data({\n              ...us_screenshot_invoice_data,\n              invoiceScreenshotData: newScreenshotList,\n            });\n            enqueueSnackbar(\"Sreenshot uploaded successfully\");\n            dispatch(setLoading(false));\n\n            fetchInvoice();\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while uploading screenshot: ${err?.message || \"\"}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      } else {\n        enqueueSnackbar(`Error occured while getting screenshot storage url`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      }\n    }\n  };\n\n  async function deleteScreenshot(screenshot) {\n    if (screenshot?.screenshotStoragePath) {\n      dispatch(setLoading(true));\n\n      // Create a reference to the file to delete\n      const storageRef = firebaseApp.storage().ref();\n      var desertRef = storageRef.child(screenshot?.screenshotStoragePath);\n\n      // Delete the file\n      await desertRef\n        .delete()\n        .then(async () => {\n          // File deleted successfully\n          // remove from firestore doc\n          let newScreenshotList = [\n            ...(us_screenshot_invoice_data?.invoiceScreenshotData || []),\n          ];\n\n          newScreenshotList = newScreenshotList.filter(\n            (shot) =>\n              shot?.screenshotStoragePath !== screenshot?.screenshotStoragePath\n          );\n\n          // update doc\n          await db\n            .collection(\"company\")\n            .doc(companyDetails?.id)\n            .collection(us_screenshot_invoice_data?.invoiceData?.docType)\n            .doc(us_screenshot_invoice_data?.invoiceId)\n            .set(\n              {\n                invoiceScreenshotData: newScreenshotList,\n              },\n              { merge: true }\n            )\n            .then(() => {\n              set_us_screenshot_invoice_data({\n                ...us_screenshot_invoice_data,\n                invoiceScreenshotData: newScreenshotList,\n              });\n\n              enqueueSnackbar(\"Sreenshot deleted successfully\");\n              dispatch(setLoading(false));\n\n              fetchInvoice();\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while deleting screenshot: ${\n                  err?.message || \"\"\n                }`,\n                { variant: \"error\" }\n              );\n              dispatch(setLoading(false));\n            });\n        })\n        .catch((error) => {\n          // Uh-oh, an error occurred!\n          enqueueSnackbar(\n            `Error occured while deleting screenshot: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  }\n\n  function onExpenseFileChange(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const todayDate = new Date();\n      const todayISOString = todayDate.toISOString();\n      const expenseStoragePath = `/expense/${companyDetails?.id}/${us_expense_invoice_data?.invoiceData?.docType}/${todayISOString}`;\n      const file = e.target.files[0];\n      set_us_add_expense_data({\n        ...us_add_expense_data,\n        dateString: todayISOString,\n        expenseStoragePath: expenseStoragePath,\n        expenseFile: file,\n      });\n    }\n  }\n\n  async function addExpense() {\n    /* if (\n      !us_add_expense_data?.expenseStoragePath ||\n      us_add_expense_data?.expenseStoragePath !== \"\" ||\n      us_add_expense_data?.expenseFile\n    ) { */\n    dispatch(setLoading(true));\n\n    let fileUrl = \"\";\n\n    let newExpenseList = [\n      ...(us_expense_invoice_data?.invoiceData?.invoiceExpensetData || []),\n    ];\n\n    if (us_add_expense_data?.expenseStoragePath) {\n      const storageRef = firebaseApp.storage().ref();\n      const fileRef = storageRef.child(us_add_expense_data?.expenseStoragePath);\n\n      //upload expense file in firebase storage\n      await fileRef.put(us_add_expense_data?.expenseFile);\n      fileUrl = await fileRef.getDownloadURL();\n    }\n\n    if (fileUrl) {\n      newExpenseList.push({\n        dateString: us_add_expense_data?.dateString,\n        expenseAmt: us_add_expense_data?.expenseAmt,\n        expenseDesc: us_add_expense_data?.expenseDesc,\n        expenseUrl: fileUrl,\n        expenseStoragePath: us_add_expense_data?.expenseStoragePath,\n        timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      });\n    } else {\n      newExpenseList.push({\n        dateString: \"\",\n        expenseAmt: us_add_expense_data?.expenseAmt,\n        expenseDesc: us_add_expense_data?.expenseDesc,\n        expenseUrl: \"\",\n        expenseStoragePath: \"\",\n        timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      });\n    }\n\n    // store download link url in firestore\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(us_expense_invoice_data?.invoiceData?.docType)\n      .doc(us_expense_invoice_data?.invoiceId)\n      .set(\n        {\n          invoiceExpensetData: newExpenseList,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        set_us_expense_invoice_data({\n          ...us_expense_invoice_data,\n          invoiceData: {\n            ...us_expense_invoice_data?.invoiceData,\n            invoiceExpensetData: newExpenseList,\n          },\n        });\n\n        fetchInvoice();\n        enqueueSnackbar(\"Expense uploaded successfully\");\n        set_us_display_add_expense(false);\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while uploading expense: ${err?.message || \"\"}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function deleteExpense(expense, index) {\n    dispatch(setLoading(true));\n\n    if (expense?.expenseStoragePath) {\n      // Create a reference to the file to delete\n      const storageRef = firebaseApp.storage().ref();\n      var desertRef = storageRef.child(expense?.expenseStoragePath);\n\n      // Delete the file\n      await desertRef\n        .delete()\n        .then(async () => {\n          enqueueSnackbar(\"Image Url deleted successfully\");\n          dispatch(setLoading(false));\n        })\n        .catch((error) => {\n          // Uh-oh, an error occurred!\n          enqueueSnackbar(\n            `Error occured while deleting expense: ${error?.message || \"\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n\n    dispatch(setLoading(true));\n    // remove from firestore doc\n    let newExpenseList = [];\n\n    us_expense_invoice_data?.invoiceData?.invoiceExpensetData.forEach(\n      (expenseData) => {\n        if (\n          expenseData?.expenseDesc !== expense?.expenseDesc &&\n          ((expenseData.timestamp &&\n            moment(expenseData.timestamp.toDate()).format(\n              \"DD-MM-YYYY, HH:MM:ss\"\n            )) ||\n            \"\") !==\n            ((expense.timestamp &&\n              moment(expense.timestamp.toDate()).format(\n                \"DD-MM-YYYY, HH:MM:ss\"\n              )) ||\n              \"\")\n        ) {\n          newExpenseList.push({ ...expense });\n        }\n      }\n    );\n\n    // update doc\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(us_expense_invoice_data?.invoiceData?.docType)\n      .doc(us_expense_invoice_data?.invoiceId)\n      .set(\n        {\n          invoiceExpensetData: newExpenseList,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        set_us_expense_invoice_data({\n          ...us_expense_invoice_data,\n          invoiceData: {\n            ...us_expense_invoice_data?.invoiceData,\n            invoiceExpensetData: newExpenseList,\n          },\n        });\n\n        fetchInvoice();\n\n        enqueueSnackbar(\"Expense deleted successfully\");\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while deleting expense: ${err?.message || \"\"}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  return (\n    <Page title=\"Payment/Expense\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Stack spacing={3} direction=\"row\" alignItems={\"center\"}>\n              <Button\n                startIcon={<KeyboardBackspaceIcon />}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => navigate(PATH_DASHBOARD.general.app1)}\n              >\n                Back\n              </Button>\n              <Typography variant=\"h3\">Expense section</Typography>\n            </Stack>\n          </Grid>\n\n          <Suspense fallback={<></>}>\n            <CompanyClientSelection type={\"expense\"} />\n          </Suspense>\n          <br />\n          <br />\n\n          {companyDetails && clientDocumentObjectSelected && paymentDocType && (\n            <>\n              <Grid item xs={12} md={12}>\n                <Stack spacing={3}>\n                  <hr />\n                  <Typography>\n                    Please choose any invoices and insert an expense amount\n                  </Typography>\n\n                  <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n                    <DatePicker\n                      label=\"From\"\n                      value={us_fromDate || \"\"}\n                      onChange={(newValue) => {\n                        set_us_fromDate(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" />\n                      )}\n                      inputFormat=\"dd/MM/yyyy\"\n                    />\n                    <DatePicker\n                      label=\"To\"\n                      value={us_ToDate || \"\"}\n                      onChange={(newValue) => {\n                        set_us_ToDate(newValue);\n                      }}\n                      renderInput={(params) => (\n                        <TextField {...params} size=\"small\" />\n                      )}\n                      inputFormat=\"dd/MM/yyyy\"\n                    />\n                  </Stack>\n\n                  <Card>\n                    <Stack style={{ padding: \"10px\" }}>\n                      <TableContainer>\n                        <Table border={1}>\n                          <TableHead>\n                            <TableRow>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                Add/update/delete Expense\n                              </TableCell>\n\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                View/Download\n                              </TableCell>\n\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                Invoice Number\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                Datetime created\n                              </TableCell>\n\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                Bill to\n                              </TableCell>\n                              <TableCell\n                                size=\"small\"\n                                align=\"center\"\n                                style={{\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                Invoice amount\n                              </TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {us_invoicelist &&\n                              us_invoicelist?.length > 0 &&\n                              us_invoicelist?.map((invoice, index) => (\n                                <TableRow key={index}>\n                                  <TableCell\n                                    size=\"small\"\n                                    align=\"center\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                      background:\n                                        Number(\n                                          invoice?.totalExpenseAmountForInvoice ||\n                                            0\n                                        ) >=\n                                        Number(invoice?.data?.docTotal || 0)\n                                          ? \"#FEC3BE\"\n                                          : \"transparent\",\n                                    }}\n                                  >\n                                    <Stack\n                                      spacing={2}\n                                      direction=\"row\"\n                                      alignItems={\"center\"}\n                                    >\n                                      <CurrencyFormat\n                                        value={Math.round(\n                                          Number(\n                                            invoice?.totalExpenseAmountForInvoice ||\n                                              0\n                                          )\n                                        )}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                      />\n\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          set_us_open_expense_dialog(true);\n                                          set_us_expense_invoice_data({\n                                            invoiceId: invoice?.id,\n                                            invoiceData: {\n                                              ...invoice?.data,\n                                            },\n                                            totalExpenseAmountForInvoice:\n                                              invoice?.totalExpenseAmountForInvoice ||\n                                              0,\n                                          });\n                                        }}\n                                        style={{\n                                          whiteSpace: \"nowrap\",\n                                        }}\n                                      >\n                                        Show expense\n                                      </Button>\n                                    </Stack>\n                                  </TableCell>\n\n                                  <TableCell\n                                    align=\"center\"\n                                    size=\"small\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                    }}\n                                  >\n                                    <Stack\n                                      direction={\"row\"}\n                                      alignItems={\"center\"}\n                                      justifyContent={\"center\"}\n                                      spacing={2}\n                                    >\n                                      <IconButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                          handleViewDownload(\n                                            companyDetails,\n                                            clientDocumentObjectSelected,\n                                            invoice,\n                                            logo,\n                                            sigImage,\n                                            \"view\"\n                                          )\n                                        }\n                                      >\n                                        <Iconify icon={\"carbon:view\"} />\n                                      </IconButton>\n\n                                      <IconButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                          handleViewDownload(\n                                            companyDetails,\n                                            clientDocumentObjectSelected,\n                                            invoice,\n                                            logo,\n                                            sigImage,\n                                            \"download\"\n                                          )\n                                        }\n                                      >\n                                        <Iconify icon={\"eva:download-fill\"} />\n                                      </IconButton>\n                                    </Stack>\n                                  </TableCell>\n                                  <TableCell\n                                    size=\"small\"\n                                    align=\"center\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                    }}\n                                  >\n                                    {invoice?.data?.docString}\n                                  </TableCell>\n                                  <TableCell\n                                    size=\"small\"\n                                    align=\"center\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                    }}\n                                  >\n                                    {moment(\n                                      invoice?.data?.docDate.toDate()\n                                    ).format(\"DD-MM-YYYY, HH:MM:ss\")}\n                                  </TableCell>\n\n                                  <TableCell\n                                    size=\"small\"\n                                    align=\"center\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                    }}\n                                  >\n                                    {/* {invoice?.data?.clientDetails?.name ||\n                                          \"\" */}\n                                    {clientDocumentObjectSelected?.name || \"\"}\n                                  </TableCell>\n\n                                  <TableCell\n                                    size=\"small\"\n                                    align=\"center\"\n                                    style={{\n                                      whiteSpace: \"nowrap\",\n                                    }}\n                                  >\n                                    <CurrencyFormat\n                                      value={Math.round(\n                                        Number(invoice?.data?.docTotal || 0)\n                                      )}\n                                      displayType={\"text\"}\n                                      thousandSeparator={true}\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </Stack>\n                  </Card>\n                </Stack>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Container>\n\n      {us_open_screenshot_dialog ? (\n        <>\n          <Dialog\n            open={us_open_screenshot_dialog}\n            onClose={() => {\n              set_us_open_screenshot_dialog(false);\n              set_us_screenshot_invoice_data(null);\n            }}\n            fullWidth\n            maxWidth={\"md\"}\n          >\n            <DialogTitle>Payment screenshots</DialogTitle>\n            <DialogContent>\n              <br />\n              <Typography>\n                Upload Screenshot{\" \"}\n                <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n              </Typography>\n              <TextField\n                className=\"uploadInput\"\n                variant=\"outlined\"\n                size=\"small\"\n                fullWidth\n                name=\"image\"\n                type=\"file\"\n                id=\"image\"\n                accept=\".png,.jpeg\"\n                onChange={(event) => onFileChange(event)}\n              />\n              <br />\n              <br />\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\">Date</TableCell>\n                      <TableCell size=\"small\">View</TableCell>\n                      <TableCell size=\"small\">Delete</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_screenshot_invoice_data?.invoiceScreenshotData &&\n                      us_screenshot_invoice_data?.invoiceScreenshotData\n                        ?.length > 0 &&\n                      us_screenshot_invoice_data?.invoiceScreenshotData?.map(\n                        (screenshot, index) => (\n                          <TableRow key={index}>\n                            <TableCell size=\"small\">\n                              {screenshot?.dateString || \"\"}\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              {screenshot?.screenshotUrl &&\n                              screenshot?.screenshotUrl !== \"\" ? (\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  href={`${screenshot?.screenshotUrl}`}\n                                  target=\"_blank\"\n                                >\n                                  open\n                                </Button>\n                              ) : (\n                                <Typography>No url found</Typography>\n                              )}\n                            </TableCell>\n                            <TableCell size=\"small\">\n                              <Button\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={() => deleteScreenshot(screenshot)}\n                              >\n                                delete\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  set_us_open_screenshot_dialog(false);\n                  set_us_screenshot_invoice_data(null);\n                }}\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n\n      {us_open_expense_dialog ? (\n        <>\n          <Dialog\n            open={us_open_expense_dialog}\n            onClose={() => {\n              set_us_open_expense_dialog(false);\n              set_us_display_add_expense(false);\n              set_us_expense_invoice_data(null);\n            }}\n            fullWidth\n            maxWidth={\"md\"}\n          >\n            <DialogTitle>Expenses</DialogTitle>\n            <DialogContent>\n              <br />\n              {!us_display_add_expense && (\n                <Button\n                  onClick={() => set_us_display_add_expense(true)}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={\n                    !user?.permissions?.addExpense?.assignedCompanyId?.includes(\n                      companyDetails?.id\n                    )\n                  }\n                >\n                  Add expense\n                </Button>\n              )}\n\n              {us_display_add_expense && (\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"expenseAmount\"\n                      type=\"text\"\n                      id=\"expenseAmount\"\n                      label={\"Expense amount\"}\n                      onChange={(event) => {\n                        set_us_add_expense_data({\n                          ...us_add_expense_data,\n                          expenseAmt: event.target.value,\n                        });\n                      }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"expenseDesc\"\n                      type=\"text\"\n                      id=\"expenseDesc\"\n                      label={\"Expense description\"}\n                      onChange={(event) => {\n                        set_us_add_expense_data({\n                          ...us_add_expense_data,\n                          expenseDesc: event.target.value,\n                        });\n                      }}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <Typography>\n                      Upload expense{\" \"}\n                      <span style={{ color: \"red\" }}>(Max Size of 25 KB)</span>:{\" \"}\n                    </Typography>\n                    <TextField\n                      className=\"uploadInput\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      name=\"image\"\n                      type=\"file\"\n                      id=\"image\"\n                      accept=\".png,.jpeg,.pdf\"\n                      onChange={(event) => onExpenseFileChange(event)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={12}>\n                    <Button\n                      onClick={() => addExpense()}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={\n                        !us_add_expense_data?.expenseAmt ||\n                        !us_add_expense_data?.expenseDesc ||\n                        !user?.permissions?.addExpense\n                        // !us_add_expense_data?.expenseStoragePath ||\n                        // !us_add_expense_data?.expenseFile\n                      }\n                    >\n                      add expense\n                    </Button>\n                  </Grid>\n                </Grid>\n              )}\n\n              <br />\n              <br />\n              <TableContainer>\n                <Table border={1}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Date\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Amount\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Description\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        View uploaded image\n                      </TableCell>\n                      <TableCell size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                        Delete\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {us_expense_invoice_data?.invoiceData\n                      ?.invoiceExpensetData &&\n                      us_expense_invoice_data?.invoiceData?.invoiceExpensetData\n                        ?.length > 0 &&\n                      us_expense_invoice_data?.invoiceData?.invoiceExpensetData?.map(\n                        (expense, index) => (\n                          <TableRow key={index}>\n                            <TableCell\n                              size=\"small\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              {expense?.dateString ||\n                                (expense.timestamp &&\n                                  moment(expense.timestamp.toDate()).format(\n                                    \"DD-MM-YYYY, HH:MM:ss\"\n                                  )) ||\n                                \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              <CurrencyFormat\n                                value={Math.round(\n                                  Number(expense?.expenseAmt || 0)\n                                )}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              {expense?.expenseDesc || \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              {expense?.expenseUrl &&\n                              expense?.expenseUrl !== \"\" ? (\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  href={`${expense?.expenseUrl}`}\n                                  target=\"_blank\"\n                                >\n                                  open\n                                </Button>\n                              ) : (\n                                <Typography>No url found</Typography>\n                              )}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  deleteExpense(expense, index);\n                                }}\n                                disabled={\n                                  !user?.permissions?.deleteExpense?.assignedCompanyId?.includes(\n                                    companyDetails?.id\n                                  )\n                                }\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  set_us_open_expense_dialog(false);\n                  set_us_display_add_expense(false);\n                  set_us_expense_invoice_data(null);\n                }}\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      ) : (\n        <></>\n      )}\n    </Page>\n  );\n}\n"],"sourceRoot":""}