{"version":3,"sources":["pages/dashboard/permisssions/Permissions.js","pages/dashboard/manage-admin/AdminDetail.js"],"names":["getPermissions","b_chk","a","Promise","resolve","func","viewAllSectionChk","name","id","title","rowSpan","assignedCompanyId","uploadBankStatementChk","accessReport","viewUnpaidInvoiceOnly","accessPayment","addFullPartialPaymentChk","deleteFullPartialPaymentChk","accessExpense","addExpense","deleteExpense","viewQuotation","createQuotation","updateQuotation","deleteQuotation","viewInvoice","createInvoice","updateInvoice","deleteInvoice","viewVatInvoice","createVatInvoice","updateVatInvoice","deleteVatInvoice","viewPurchaseOrder","createPurchaseOrder","updatePurchaseOrder","deletePurchaseOrder","viewProforma","createProforma","updateProforma","deleteProforma","viewCreditNote","createCreditNote","updateCreditNote","deleteCreditNote","viewDebitNote","createDebitNote","updateDebitNote","deleteDebitNote","viewCashTransaction","createCashTransaction","updateCashTransaction","deleteCashTransaction","viewDeletedDocuments","undoDeletion","viewConvertedProforma","viewCalendar","addCalendarTask","updateCalendarTask","deleteCalendarTask","viewEmployee","addEmployee","updateEmployee","deleteEmployee","viewCompChk","createCompChk","updateCompChk","deleteCompChk","viewClientChk","createClientChk","updateClientChk","deleteClientChk","viewAdminChk","createAdminChk","updateAdminChk","deleteAdminChk","viewSuperAdminChk","createSuperAdminChk","updateSuperAdminChk","deleteSuperAdminChk","viewAllClientSurveyChk","TableCRUDAdmin","lazy","CreateAdminDialog","UpdateAdminDialog","AdminDetail","themeStretch","useSettings","dispatch","useDispatch","user","useAuth","enqueueSnackbar","useSnackbar","companyList","useSelector","selectCompanyList","temp_initializeCompanies","useRef","useState","selectedCompany","setSelectedCompany","adminSlice","selectAdmin","adminListTable","setAdminListTable","firstName","lastName","a_dep","contactNumber","email","password","role","access","sysFunc","a_comp","adminDetails","setAdminDetails","openDialog","setOpenDialog","dialogType","setDialogType","temp_init_adminList_ref","temp_init_adminTable_ref","temp_checkPermission_ref","viewPermissionGranted","setViewPermissionGranted","useEffect","current","permissions","includes","variant","initializeCompanies","length","setLoading","getCompanies","result","error","msg","setCompanyList","init_admin_list","db","collection","where","get","then","snapshot","arr","docs","forEach","doc","validDocument","data","find","adminCompany","push","toLowerCase","sort","dynamicSort","setUsersList","catch","err","message","usersList","arrTable","a_permissions","obj","handleCloseDialog","addBtnFunc","maxWidth","container","spacing","item","xs","md","ListboxProps","style","maxHeight","size","label","options","value","renderInput","params","onChange","e","reason","getOptionLabel","option","renderOption","props","key","fallback","companyId","type","headers","aCollection","addBtnDisplay","addBtnLabel","emptyColMsg","updateBtnDisplay","deleteBtnDisplay","updateBtnFunc","deleteBtnFunc","functions","httpsCallable","deleteUserByAdmin"],"mappings":"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","file":"static/js/60.5fadf219.chunk.js","sourcesContent":["export async function getPermissions(b_chk) {\n  return new Promise((resolve) => {\n    resolve([\n      // allow access to home section in vertical navbar\n      {\n        func: \"View home section\",\n        viewAllSectionChk: b_chk,\n        name: \"viewAllSectionChk\",\n        id: \"home\",\n        title: \"Home section\",\n        rowSpan: 1,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Bank statement upload\n      {\n        func: \"Upload Bank Statement\",\n        uploadBankStatementChk: b_chk,\n        name: \"uploadBankStatementChk\",\n        id: \"bankStatement\",\n        title: \"Bank Statement section\",\n        rowSpan: 1,\n        assignedCompanyId: [],\n      },\n\n      //------------------------------------------------------------------------------------------------------------------\n      // Report section\n      {\n        func: \"Access to Report\",\n        accessReport: b_chk,\n        name: \"accessReport\",\n        id: \"report\",\n        title: \"Report section \",\n        rowSpan: 2,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"View unpaid invoices only\",\n        viewUnpaidInvoiceOnly: b_chk,\n        name: \"viewUnpaidInvoiceOnly\",\n        id: \"report\",\n        title: \"\",\n        rowSpan: 2,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Payment section\n      {\n        func: \"Access to payment section\",\n        accessPayment: b_chk,\n        name: \"accessPayment\",\n        id: \"payment\",\n        title: \"Payment section\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Add full payment/ partial payment\",\n        addFullPartialPaymentChk: b_chk,\n        name: \"addFullPartialPaymentChk\",\n        id: \"payment\",\n        title: \"Payment section\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete full payment/ partial payment\",\n        deleteFullPartialPaymentChk: b_chk,\n        name: \"deleteFullPartialPaymentChk\",\n        id: \"payment\",\n        title: \"Payment section\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Expense section\n      {\n        func: \"Access to expense section\",\n        accessExpense: b_chk,\n        name: \"accessExpense\",\n        id: \"expense\",\n        title: \"Expense\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Add expense\",\n        addExpense: b_chk,\n        name: \"addExpense\",\n        id: \"expense\",\n        title: \"Expense\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete expense\",\n        deleteExpense: b_chk,\n        name: \"deleteExpense\",\n        id: \"expense\",\n        title: \"Expense\",\n        rowSpan: 3,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Quotaion\n      {\n        func: \"View quotation\",\n        viewQuotation: b_chk,\n        name: \"viewQuotation\",\n        id: \"quotation\",\n        title: \"Quotation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create quotation\",\n        createQuotation: b_chk,\n        name: \"createQuotation\",\n        id: \"quotation\",\n        title: \"Quotation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update quotation\",\n        updateQuotation: b_chk,\n        name: \"updateQuotation\",\n        id: \"quotation\",\n        title: \"Quotation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete quotation\",\n        deleteQuotation: b_chk,\n        name: \"deleteQuotation\",\n        id: \"quotation\",\n        title: \"Quotation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Invoice\n      {\n        func: \"View Invoice\",\n        viewInvoice: b_chk,\n        name: \"viewInvoice\",\n        id: \"invoice\",\n        title: \"Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Invoice\",\n        createInvoice: b_chk,\n        name: \"createInvoice\",\n        id: \"invoice\",\n        title: \"Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Invoice\",\n        updateInvoice: b_chk,\n        name: \"updateInvoice\",\n        id: \"invoice\",\n        title: \"Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Invoice\",\n        deleteInvoice: b_chk,\n        name: \"deleteInvoice\",\n        id: \"invoice\",\n        title: \"Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // VAT Invoice\n      {\n        func: \"View VAT Invoice\",\n        viewVatInvoice: b_chk,\n        name: \"viewVatInvoice\",\n        id: \"vatInvoice\",\n        title: \"VAT Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create VAT Invoice\",\n        createVatInvoice: b_chk,\n        name: \"createVatInvoice\",\n        id: \"vatInvoice\",\n        title: \"VAT Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update VAT Invoice\",\n        updateVatInvoice: b_chk,\n        name: \"updateVatInvoice\",\n        id: \"vatInvoice\",\n        title: \"VAT Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete VAT Invoice\",\n        deleteVatInvoice: b_chk,\n        name: \"deleteVatInvoice\",\n        id: \"vatInvoice\",\n        title: \"VAT Invoice section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Purchase order\n      {\n        func: \"View Purchase order\",\n        viewPurchaseOrder: b_chk,\n        name: \"viewPurchaseOrder\",\n        id: \"purchaseOrder\",\n        title: \"Purchase order section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Purchase order\",\n        createPurchaseOrder: b_chk,\n        name: \"createPurchaseOrder\",\n        id: \"purchaseOrder\",\n        title: \"Purchase order section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Purchase order\",\n        updatePurchaseOrder: b_chk,\n        name: \"updatePurchaseOrder\",\n        id: \"purchaseOrder\",\n        title: \"Purchase order section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Purchase order\",\n        deletePurchaseOrder: b_chk,\n        name: \"deletePurchaseOrder\",\n        id: \"purchaseOrder\",\n        title: \"Purchase order section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Proforma\n      {\n        func: \"View Proforma\",\n        viewProforma: b_chk,\n        name: \"viewProforma\",\n        id: \"viewProforma\",\n        title: \"Proforma section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Proforma\",\n        createProforma: b_chk,\n        name: \"createProforma\",\n        id: \"viewProforma\",\n        title: \"Proforma section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Proforma\",\n        updateProforma: b_chk,\n        name: \"updateProforma\",\n        id: \"viewProforma\",\n        title: \"Proforma section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Proforma\",\n        deleteProforma: b_chk,\n        name: \"deleteProforma\",\n        id: \"viewProforma\",\n        title: \"Proforma section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Credit note\n      {\n        func: \"View Credit Note\",\n        viewCreditNote: b_chk,\n        name: \"viewCreditNote\",\n        id: \"creditNote\",\n        title: \"Credit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Credit Note\",\n        createCreditNote: b_chk,\n        name: \"createCreditNote\",\n        id: \"creditNote\",\n        title: \"Credit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Credit Note\",\n        updateCreditNote: b_chk,\n        name: \"updateCreditNote\",\n        id: \"creditNote\",\n        title: \"Credit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Credit Note\",\n        deleteCreditNote: b_chk,\n        name: \"deleteCreditNote\",\n        id: \"creditNote\",\n        title: \"Credit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Debit note\n      {\n        func: \"View Debit Note\",\n        viewDebitNote: b_chk,\n        name: \"viewDebitNote\",\n        id: \"debitNote\",\n        title: \"Debit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Debit Note\",\n        createDebitNote: b_chk,\n        name: \"createDebitNote\",\n        id: \"debitNote\",\n        title: \"Debit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Debit Note\",\n        updateDebitNote: b_chk,\n        name: \"updateDebitNote\",\n        id: \"debitNote\",\n        title: \"Debit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Debit Note\",\n        deleteDebitNote: b_chk,\n        name: \"deleteDebitNote\",\n        id: \"debitNote\",\n        title: \"Debit note section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Cash Transaction\n      {\n        func: \"View Cash Transation\",\n        viewCashTransaction: b_chk,\n        name: \"viewCashTransaction\",\n        id: \"cashTransaction\",\n        title: \"Cash transation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Cash Transation\",\n        createCashTransaction: b_chk,\n        name: \"createCashTransaction\",\n        id: \"cashTransaction\",\n        title: \"Cash transation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Cash Transation\",\n        updateCashTransaction: b_chk,\n        name: \"updateCashTransaction\",\n        id: \"cashTransaction\",\n        title: \"Cash transation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Cash Transation\",\n        deleteCashTransaction: b_chk,\n        name: \"deleteCashTransaction\",\n        id: \"cashTransaction\",\n        title: \"Cash transation section\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Deleted documents\n      {\n        func: \"View Deleted documents\",\n        viewDeletedDocuments: b_chk,\n        name: \"viewDeletedDocuments\",\n        id: \"deletedDoc\",\n        title: \"Deleted documents section\",\n        rowSpan: 2,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Undo deletion of a document\",\n        undoDeletion: b_chk,\n        name: \"undoDeletion\",\n        id: \"deletedDoc\",\n        title: \"Deleted documents section\",\n        rowSpan: 2,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Converted proforma\n      {\n        func: \"View converted proforma\",\n        viewConvertedProforma: b_chk,\n        name: \"viewConvertedProforma\",\n        id: \"convertedProforma\",\n        title: \"Converted proforma\",\n        rowSpan: 1,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Calendar\n      {\n        func: \"View calendar\",\n        viewCalendar: b_chk,\n        name: \"viewCalendar\",\n        id: \"calendar\",\n        title: \"Calendar\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Add calendar task\",\n        addCalendarTask: b_chk,\n        name: \"addCalendarTask\",\n        id: \"calendar\",\n        title: \"Calendar\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update calendar task\",\n        updateCalendarTask: b_chk,\n        name: \"updateCalendarTask\",\n        id: \"calendar\",\n        title: \"Calendar\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete calendar task\",\n        deleteCalendarTask: b_chk,\n        name: \"deleteCalendarTask\",\n        id: \"calendar\",\n        title: \"Calendar\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Employee\n      {\n        func: \"View Employee\",\n        viewEmployee: b_chk,\n        name: \"viewEmployee\",\n        id: \"employee\",\n        title: \"Employee\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Add employee\",\n        addEmployee: b_chk,\n        name: \"addEmployee\",\n        id: \"employee\",\n        title: \"Employee\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update employee\",\n        updateEmployee: b_chk,\n        name: \"updateEmployee\",\n        id: \"employee\",\n        title: \"Employee\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete employee\",\n        deleteEmployee: b_chk,\n        name: \"deleteEmployee\",\n        id: \"employee\",\n        title: \"Employee\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Company\n      {\n        func: \"View Company details\",\n        viewCompChk: b_chk,\n        name: \"viewCompChk\",\n        id: \"company\",\n        title: \"Company\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Company\",\n        createCompChk: b_chk,\n        name: \"createCompChk\",\n        id: \"company\",\n        title: \"Company\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Company\",\n        updateCompChk: b_chk,\n        name: \"updateCompChk\",\n        id: \"company\",\n        title: \"Company\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Company\",\n        deleteCompChk: b_chk,\n        name: \"deleteCompChk\",\n        id: \"company\",\n        title: \"Company\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Client\n      {\n        func: \"View Client details\",\n        viewClientChk: b_chk,\n        name: \"viewClientChk\",\n        id: \"client\",\n        title: \"Client\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Client\",\n        createClientChk: b_chk,\n        name: \"createClientChk\",\n        id: \"client\",\n        title: \"Client\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Client\",\n        updateClientChk: b_chk,\n        name: \"updateClientChk\",\n        id: \"client\",\n        title: \"Client\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Client\",\n        deleteClientChk: b_chk,\n        name: \"deleteClientChk\",\n        id: \"client\",\n        title: \"Client\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Admins\n      {\n        func: \"View Admin details\",\n        viewAdminChk: b_chk,\n        name: \"viewAdminChk\",\n        id: \"admin\",\n        title: \"Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Admin\",\n        createAdminChk: b_chk,\n        name: \"createAdminChk\",\n        id: \"admin\",\n        title: \"Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Admin\",\n        updateAdminChk: b_chk,\n        name: \"updateAdminChk\",\n        id: \"admin\",\n        title: \"Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Admin\",\n        deleteAdminChk: b_chk,\n        name: \"deleteAdminChk\",\n        id: \"admin\",\n        title: \"Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      // Super admin\n      {\n        func: \"View Super Admin details\",\n        viewSuperAdminChk: b_chk,\n        name: \"viewSuperAdminChk\",\n        id: \"super-admin\",\n        title: \"Super Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Create Super Admin\",\n        createSuperAdminChk: b_chk,\n        name: \"createSuperAdminChk\",\n        id: \"super-admin\",\n        title: \"Super Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Update Super Admin\",\n        updateSuperAdminChk: b_chk,\n        name: \"updateSuperAdminChk\",\n        id: \"super-admin\",\n        title: \"Super Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      {\n        func: \"Delete Super Admin\",\n        deleteSuperAdminChk: b_chk,\n        name: \"deleteSuperAdminChk\",\n        id: \"super-admin\",\n        title: \"Super Admin\",\n        rowSpan: 4,\n        assignedCompanyId: [],\n      },\n      //------------------------------------------------------------------------------------------------------------------\n      {\n        func: \"View client survey\",\n        viewAllClientSurveyChk: b_chk,\n        name: \"viewAllClientSurveyChk\",\n        id: \"bugsBeGone\",\n        title: \"Bugs Be Gone Custom Settings\",\n        rowSpan: 1,\n        assignedCompanyId: [],\n      },\n    ]);\n  });\n}\n","import { useState, useEffect, lazy, Suspense, useRef } from \"react\";\nimport { Alert, Autocomplete, Container, Grid, TextField } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAdmin, setUsersList } from \"../../../features/adminSlice\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport db, { functions } from \"../../../firebase\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { useSnackbar } from \"notistack\";\nimport { getPermissions } from \"../permisssions/Permissions\";\nimport {\n  dynamicSort,\n  getCompanies,\n} from \"src/components/core-functions/SelectionCoreFunctions\";\nimport { selectCompanyList, setCompanyList } from \"src/features/companySlice\";\nimport useSettings from \"src/hooks/useSettings\";\n\nconst TableCRUDAdmin = lazy(() =>\n  import(\"../../../components/table/TableCRUDAdmin\")\n);\nconst CreateAdminDialog = lazy(() => import(\"./CreateAdminDialog\"));\nconst UpdateAdminDialog = lazy(() => import(\"./UpdateAdminDialog\"));\n\nconst AdminDetail = () => {\n  const { themeStretch } = useSettings();\n\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { companyList } = useSelector(selectCompanyList);\n\n  const temp_initializeCompanies = useRef();\n\n  const [selectedCompany, setSelectedCompany] = useState(null);\n\n  const adminSlice = useSelector(selectAdmin);\n  const [adminListTable, setAdminListTable] = useState([]);\n  const [adminDetails, setAdminDetails] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    a_dep: [], // array of departments\n    contactNumber: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"admin\",\n    access: true,\n    sysFunc: [],\n    a_comp: [],\n  });\n\n  const headers = [\n    { id: \"list\", label: \"List\" },\n    { id: \"update\", label: \"Update\" },\n    { id: \"delete\", label: \"Delete\" },\n    { id: \"firstName\", label: \"First Name\" },\n    { id: \"lastName\", label: \"Last Name\" },\n    /*     { id: \"a_dep\", label: \"Department\" }, */\n    { id: \"contactNumber\", label: \"contactNumber\" },\n    { id: \"email\", label: \"Email\" },\n    /*{ id: \"password\", label: \"Password\" },*/\n    { id: \"role\", label: \"Role\" },\n    { id: \"a_comp\", label: \"assigned Companies\" },\n    /*{ id: \"access\", label: \"Access\" },*/\n    /*{ id: \"sysFunc\", label: \"Permissions\" },*/\n  ];\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"\");\n\n  const temp_init_adminList_ref = useRef();\n\n  const temp_init_adminTable_ref = useRef();\n\n  const temp_checkPermission_ref = useRef();\n\n  const [viewPermissionGranted, setViewPermissionGranted] = useState(false);\n\n  useEffect(() => {\n    temp_checkPermission_ref.current();\n  }, [selectedCompany]);\n\n  function checkPermission() {\n    if (selectedCompany && selectedCompany?.id) {\n      if (\n        !user?.permissions?.viewAdminChk?.assignedCompanyId?.includes(\n          selectedCompany?.id\n        )\n      ) {\n        enqueueSnackbar(\n          \"You do not have the permission to view admin for this company\",\n          { variant: \"error\" }\n        );\n\n        setViewPermissionGranted(false);\n      } else {\n        setViewPermissionGranted(true);\n      }\n    }\n  }\n\n  temp_checkPermission_ref.current = checkPermission;\n\n  useEffect(() => {\n    temp_initializeCompanies.current();\n  }, [companyList]);\n\n  useEffect(() => {\n    temp_init_adminList_ref.current();\n  }, [selectedCompany, viewPermissionGranted]);\n\n  useEffect(() => {\n    temp_init_adminTable_ref.current();\n  }, [adminSlice]);\n\n  const initializeCompanies = async () => {\n    // if (user?.id !== \"\" && user?.role !== \"admin_member\") {\n    if (companyList && companyList.length === 0) {\n      dispatch(setLoading(true));\n      let result = await getCompanies(user?.id, user?.a_comp, user?.role);\n\n      if (result.error) {\n        enqueueSnackbar(result.msg || \"\", { variant: result.variant });\n        dispatch(setLoading(false));\n      } else {\n        dispatch(setCompanyList(result));\n        dispatch(setLoading(false));\n      }\n    }\n    // }\n  };\n\n  temp_initializeCompanies.current = initializeCompanies;\n\n  async function init_admin_list() {\n    if (user?.id !== \"\" && selectedCompany && viewPermissionGranted) {\n      dispatch(setLoading(true));\n      await db\n        .collection(\"users\")\n        .where(\"role\", \"!=\", \"super-admin\")\n        .get()\n        .then((snapshot) => {\n          var arr = [];\n          if (snapshot.docs && snapshot.docs?.length > 0) {\n            snapshot.docs.forEach((doc) => {\n              let validDocument = false;\n\n              if (\n                //user?.role === \"super-admin\" ||\n                doc\n                  ?.data()\n                  ?.a_comp.find(\n                    (adminCompany) => adminCompany.id === selectedCompany?.id\n                  )\n              ) {\n                validDocument = true;\n              }\n\n              if (validDocument) {\n                arr.push({\n                  id: doc.id,\n                  data: doc.data(),\n                  firstName:\n                    (doc?.data()?.firstName &&\n                      doc?.data()?.firstName.toLowerCase()) ||\n                    \"\",\n                });\n\n                arr.sort(dynamicSort(\"firstName\"));\n              }\n            });\n            dispatch(setUsersList(arr));\n            dispatch(setLoading(false));\n          } else {\n            dispatch(setUsersList([]));\n            dispatch(setLoading(false));\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while fetching administrators: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else {\n      dispatch(setUsersList([]));\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_init_adminList_ref.current = init_admin_list;\n\n  async function init_adminTable() {\n    if (\n      adminSlice &&\n      adminSlice.usersList &&\n      adminSlice.usersList.length !== 0\n    ) {\n      let arr = [];\n      let arrTable = [];\n      let a_permissions = await getPermissions();\n      adminSlice.usersList.forEach((obj) => {\n        arr.push({\n          id: obj.id,\n          data: obj.data,\n          firstName: obj.data.firstName,\n          lastName: obj.data.lastName,\n          a_dep: obj.data.a_dep || [],\n          contactNumber: obj.data.contactNumber,\n          email: obj.data.email,\n          password: obj.data.password,\n          role: obj.data.role,\n          access: obj.data.access,\n          sysFunc: obj.data.sysFunc || a_permissions,\n          a_comp: obj?.data?.a_comp || [],\n        });\n        arrTable.push({\n          id: obj.id,\n          data: obj.data,\n          firstName: obj.data.firstName,\n          lastName: obj.data.lastName,\n          a_dep: obj.data.a_dep || [],\n          contactNumber: obj.data.contactNumber,\n          email: obj.data.email,\n          //password: obj.data.password,\n          role: obj.data.role,\n          a_comp: obj?.data?.a_comp || [],\n          //access: obj.data.access,\n          //sysFunc: JSON.stringify(obj.data.sysFunc),\n        });\n      });\n      setAdminListTable(arrTable);\n    } else {\n      setAdminListTable([]);\n    }\n  }\n\n  temp_init_adminTable_ref.current = init_adminTable;\n\n  const handleCloseDialog = async () => {\n    setOpenDialog(false);\n    let a_permissions = await getPermissions(true);\n    setAdminDetails({\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      a_dep: [],\n      contactNumber: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\",\n      access: \"\",\n      sysFunc: a_permissions,\n      a_comp: [],\n    });\n  };\n\n  const addBtnFunc = async () => {\n    setDialogType(\"add\");\n    setOpenDialog(true);\n    let a_permissions = await getPermissions(true);\n    setAdminDetails({\n      id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      a_dep: [],\n      contactNumber: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\",\n      access: \"\",\n      sysFunc: a_permissions,\n      a_comp: [],\n    });\n  };\n\n  const updateBtnFunc = (id, data) => {\n    setDialogType(\"update\");\n    setOpenDialog(true);\n    setAdminDetails({\n      id: id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      a_dep: data.a_dep,\n      contactNumber: data.contactNumber,\n      email: data.email,\n      password: data.password,\n      role: data.role,\n      access: data.access,\n      sysFunc: data.sysFunc || [],\n      a_comp: data?.a_comp || [],\n    });\n  };\n\n  const deleteBtnFunc = (id) => {\n    dispatch(setLoading(true));\n    const deleteUserByAdmin = functions.httpsCallable(\"deleteuserbyadminnew\");\n    deleteUserByAdmin({\n      id: id,\n    })\n      .then((result) => {\n        init_admin_list();\n        enqueueSnackbar(result?.data?.result, { variant: \"success\" });\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        let msg = \"\";\n        if (err.message) {\n          msg = err.message;\n        } else {\n          msg = err;\n        }\n        enqueueSnackbar(msg, { variant: \"error\" });\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Container maxWidth={themeStretch ? false : \"xl\"}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Autocomplete\n            ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n            size=\"small\"\n            label=\"Please select company\"\n            id=\"client-drop-down\"\n            options={companyList || []}\n            value={selectedCompany || null}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Please select company\" />\n            )}\n            onChange={(e, value, reason) => {\n              if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n                setSelectedCompany(value);\n              } else if (reason === \"removeOption\" || reason === \"clear\") {\n                setSelectedCompany(null);\n              }\n            }}\n            getOptionLabel={(option) => option?.name || \"\"}\n            renderOption={(props, option) => (\n              <li {...props} key={option?.id}>\n                <span>{option?.name || \"\"}</span>\n              </li>\n            )}\n          />\n        </Grid>\n\n        {selectedCompany && viewPermissionGranted ? (\n          <Grid item xs={12} md={12}>\n            <Suspense fallback={<p></p>}>\n              <TableCRUDAdmin\n                companyId={selectedCompany?.id}\n                type=\"admin\"\n                headers={headers}\n                aCollection={adminListTable}\n                addBtnDisplay={true}\n                addBtnLabel={\"Create a User\"}\n                addBtnFunc={addBtnFunc}\n                openDialog={openDialog}\n                handleCloseDialog={handleCloseDialog}\n                emptyColMsg={\n                  \"Sorry, not a User has been created yet. Please create a user.\"\n                }\n                updateBtnDisplay={true}\n                deleteBtnDisplay={true}\n                updateBtnFunc={updateBtnFunc}\n                deleteBtnFunc={deleteBtnFunc}\n              />\n            </Suspense>\n          </Grid>\n        ) : (\n          <></>\n        )}\n      </Grid>\n\n      {dialogType && dialogType === \"add\" ? (\n        <Suspense fallback={<p></p>}>\n          <CreateAdminDialog\n            openDialog={openDialog}\n            handleCloseDialog={handleCloseDialog}\n            adminDetails={adminDetails}\n            setAdminDetails={setAdminDetails}\n            init_admin_list={init_admin_list}\n          />\n        </Suspense>\n      ) : (\n        <Suspense fallback={<p></p>}>\n          <UpdateAdminDialog\n            openDialog={openDialog}\n            handleCloseDialog={handleCloseDialog}\n            adminDetails={adminDetails}\n            setAdminDetails={setAdminDetails}\n            init_admin_list={init_admin_list}\n          />\n        </Suspense>\n      )}\n    </Container>\n  );\n};\n\nexport default AdminDetail;\n"],"sourceRoot":""}