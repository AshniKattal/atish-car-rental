{"version":3,"sources":["sections/auth/reset-password/ResetPasswordForm.js","pages/auth/ResetPassword.js"],"names":["ResetPasswordForm","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useState","us_s_email","set_us_s_email","resetPassword","a","setLoading","auth","sendPasswordResetEmail","then","catch","error","message","variant","Stack","spacing","TextField","fullWidth","required","id","name","type","value","label","onChange","event","target","Button","size","onClick","RootStyle","styled","display","minHeight","alignItems","justifyContent","padding","theme","ResetPassword","Page","title","sx","height","LogoOnlyLayout","Container","Box","maxWidth","mx","Typography","paragraph","color","mb","component","RouterLink","to","PATH_AUTH","login","mt"],"mappings":"qXAUe,SAASA,IACtB,IAAMC,EAAWC,cAETC,EAAoBC,cAApBD,gBAER,EAAqCE,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAa,uCAAG,sBAAAC,EAAA,yDACpBR,EAASS,aAAW,IACD,KAAfJ,EAFgB,gCAGZK,IACHC,uBAAuBN,GACvBO,MAAK,WACJV,EAAgB,4CAChBF,EAASS,aAAW,OAErBI,OAAM,SAACC,GACNZ,EAAgB,kBAAD,cAAmBY,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAOC,UACzCf,EAASS,aAAW,OAXN,6BAclBP,EAAgB,oBAAqB,CAAEc,QAAS,UAChDhB,EAASS,aAAW,IAfF,2CAAH,qDAmBnB,OACE,eAACQ,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTJ,QAAQ,WACRK,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,KAAK,OACLC,MAAOpB,GAAc,GACrBqB,MAAM,gBACNC,SAAU,SAACC,GAAD,OAAWtB,EAAesB,EAAMC,OAAOJ,UAGnD,cAACK,EAAA,EAAD,CACEV,WAAS,EACTW,KAAK,QACLf,QAAQ,YACRgB,QAAS,kBAAMzB,KAJjB,+BClCN,IAAM0B,EAAYC,YAAO,MAAPA,EAAc,kBAAgB,CAC9CC,QAAS,OACTC,UAAW,OACXC,WAAY,SACZC,eAAgB,SAChBC,QAL8B,EAAGC,MAKlBtB,QAAQ,GAAI,OAKd,SAASuB,IACtB,OACE,cAACC,EAAA,EAAD,CAAMC,MAAM,iBAAiBC,GAAI,CAAEC,OAAQ,GAA3C,SACE,eAACZ,EAAD,WACE,cAACa,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKJ,GAAI,CAAEK,SAAU,IAAKC,GAAI,QAA9B,SACE,qCACE,cAACC,EAAA,EAAD,CAAYnC,QAAQ,KAAKoC,WAAS,EAAlC,mCAGA,cAACD,EAAA,EAAD,CAAYP,GAAI,CAAES,MAAO,iBAAkBC,GAAI,GAA/C,8HAKA,cAACvD,EAAD,IAEA,cAAC+B,EAAA,EAAD,CACEV,WAAS,EACTW,KAAK,QACLwB,UAAWC,IACXC,GAAIC,IAAUC,MACdf,GAAI,CAAEgB,GAAI,GALZ","file":"static/js/78.6e8e5883.chunk.js","sourcesContent":["// @mui\nimport { Button, Stack, TextField } from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport { auth } from \"../../../firebase\";\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPasswordForm() {\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [us_s_email, set_us_s_email] = useState(\"\");\n\n  const resetPassword = async () => {\n    dispatch(setLoading(true));\n    if (us_s_email !== \"\") {\n      await auth\n        .sendPasswordResetEmail(us_s_email)\n        .then(() => {\n          enqueueSnackbar(\"Reset url has been sent to you by email.\");\n          dispatch(setLoading(false));\n        })\n        .catch((error) => {\n          enqueueSnackbar(`Error occured: ${error?.message}`);\n          dispatch(setLoading(false));\n        });\n    } else {\n      enqueueSnackbar(\"Email is required\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    }\n  };\n\n  return (\n    <Stack spacing={3}>\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        required\n        id=\"email\"\n        name=\"email\"\n        type=\"text\"\n        value={us_s_email || \"\"}\n        label=\"Email address\"\n        onChange={(event) => set_us_s_email(event.target.value)}\n      />\n\n      <Button\n        fullWidth\n        size=\"large\"\n        variant=\"contained\"\n        onClick={() => resetPassword()}\n      >\n        Reset Password\n      </Button>\n    </Stack>\n  );\n}\n","import { Link as RouterLink } from \"react-router-dom\";\n// @mui\nimport { styled } from \"@mui/material/styles\";\nimport { Box, Button, Container, Typography } from \"@mui/material\";\n// layouts\nimport LogoOnlyLayout from \"../../layouts/LogoOnlyLayout\";\n// routes\nimport { PATH_AUTH } from \"../../routes/paths\";\n// components\nimport Page from \"../../components/Page\";\n// sections\nimport { ResetPasswordForm } from \"../../sections/auth/reset-password\";\n// assets\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  minHeight: \"100%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: theme.spacing(12, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPassword() {\n  return (\n    <Page title=\"Reset Password\" sx={{ height: 1 }}>\n      <RootStyle>\n        <LogoOnlyLayout />\n\n        <Container>\n          <Box sx={{ maxWidth: 480, mx: \"auto\" }}>\n            <>\n              <Typography variant=\"h3\" paragraph>\n                Forgot your password?\n              </Typography>\n              <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\n                Please enter the email address associated with your account and\n                We will email you a link to reset your password.\n              </Typography>\n\n              <ResetPasswordForm />\n\n              <Button\n                fullWidth\n                size=\"large\"\n                component={RouterLink}\n                to={PATH_AUTH.login}\n                sx={{ mt: 1 }}\n              >\n                Back\n              </Button>\n            </>\n          </Box>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}