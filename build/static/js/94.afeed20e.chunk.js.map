{"version":3,"sources":["pages/dashboard/manage-company/CompanyDetail.js"],"names":["CreateCompanyDialog","lazy","UpdateCompanyDialog","TableCRUDTemplate","CompanyDetail","themeStretch","useSettings","enqueueSnackbar","useSnackbar","dispatch","useDispatch","user","useAuth","companyList","useSelector","selectCompanyList","useState","us_a_companyList","set_us_a_companyList","init_companies_temp","useRef","id","name","vatPercentage","imageName","imageUrl","imageSig","sigUrl","stampName","stampUrl","companyType","vatOrNonVatRegistered","tan","address","contactNumber","mobileNumber","email","brn","beneficiaryName","bankName","bankAccNo","bankIban","bankSwiftCode","MRATemplateFlag","displayMRAFiscalisationButton","documentTemplate","companyDetails","setCompanyDetails","openDialog","setOpenDialog","dialogType","setDialogType","useEffect","current","initializeCompanies","a","setLoading","db","collection","orderBy","get","then","querySnapshot","arr","companyListRedux","docs","length","forEach","doc","role","a_comp","find","comp","permissions","viewCompChk","assignedCompanyId","includes","push","data","JSON","stringify","sort","dynamicSort","setCompanyList","catch","err","message","variant","handleCloseDialog","deleteBtnFunc","delete","Promise","resolve","companyListArr","companyListArrLength","idIndex","i","splice","promiseResult","set","companyIdArray","merge","maxWidth","fallback","type","headers","label","lable","aCollection","addBtnDisplay","addBtnLabel","addBtnFunc","emptyColMsg","updateBtnDisplay","deleteBtnDisplay","updateBtnFunc"],"mappings":"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","file":"static/js/94.afeed20e.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy, Suspense, useRef } from \"react\";\nimport db from \"../../../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectCompanyList,\n  setCompanyList,\n} from \"../../../features/companySlice\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport { dynamicSort } from \"../../../components/core-functions/SelectionCoreFunctions\";\nimport { Container } from \"@mui/material\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { useSnackbar } from \"notistack\";\nimport useSettings from \"src/hooks/useSettings\";\n\nconst CreateCompanyDialog = lazy(() => import(\"./CreateCompanyDialog\"));\nconst UpdateCompanyDialog = lazy(() => import(\"./UpdateCompanyDialog\"));\nconst TableCRUDTemplate = lazy(() =>\n  import(\"../../../components/table/TableCRUDTemplate\")\n);\n\nconst CompanyDetail = () => {\n  const { themeStretch } = useSettings();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { companyList } = useSelector(selectCompanyList);\n  const [us_a_companyList, set_us_a_companyList] = useState([]);\n\n  const init_companies_temp = useRef();\n\n  const [companyDetails, setCompanyDetails] = useState({\n    id: \"\",\n    name: \"\",\n    vatPercentage: 0,\n    imageName: \"\",\n    imageUrl: \"\",\n    imageSig: \"\",\n    sigUrl: \"\",\n    stampName: \"\",\n    stampUrl: \"\",\n    companyType: \"\",\n    // natureOfBusiness: \"\",\n    // incorDate: \"\",\n    // payeRegNo: \"\",\n    vatOrNonVatRegistered: null,\n    tan: \"\",\n    address: \"\",\n    // country: \"\",\n    contactNumber: \"\",\n    mobileNumber: \"\",\n    email: \"\",\n    brn: \"\",\n    // nic: \"\",\n    // absenceTariff: [],\n    beneficiaryName: \"\",\n    bankName: \"\",\n    bankAccNo: \"\",\n    bankIban: \"\",\n    bankSwiftCode: \"\",\n    MRATemplateFlag: null,\n    displayMRAFiscalisationButton: false,\n    documentTemplate: \"\",\n  });\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"\");\n\n  const headers = [\n    // { id: \"list\", label: \"List\" },\n    { id: \"update\", label: \"Update\" },\n    { id: \"delete\", label: \"Delete\" },\n    { id: \"name\", label: \"Name\" },\n    { id: \"MRATemplateFlag\", label: \"Apply MRA new template\" },\n    { id: \"displayMRAFiscalisationButton\", lable: \"Display MRA Send Button\" },\n    { id: \"vatOrNonVatRegistered\", label: \"VAT/Non-VAT Registered\" },\n    { id: \"vatPercentage\", label: \"VAT_Percentage\" },\n    { id: \"imageName\", label: \"Image_Logo\" },\n    { id: \"imageSig\", label: \"Image_Sig.\" },\n    { id: \"stampName\", label: \"Stamp_Pic\" },\n    { id: \"companyType\", label: \"Type\" },\n    // { id: \"natureOfBusiness\", label: \"Nature_Of_Business\" },\n    // { id: \"incorDate\", label: \"Date_Of_Incorporation\" },\n    // { id: \"payeRegNo\", label: \"PAYE_Reg_No\" },\n\n    { id: \"tan\", label: \"VAT\" },\n    { id: \"brn\", label: \"BRN\" },\n    // { id: \"nic\", label: \"NIC\" },\n    { id: \"address\", label: \"Address\" },\n    // { id: \"country\", label: \"Country\" },\n    { id: \"contactNumber\", label: \"Contact_Number\" },\n    { id: \"mobileNumber\", label: \"Mobile_Number\" },\n    { id: \"email\", label: \"Email\" },\n    { id: \"beneficiaryName\", label: \"Beneficiary_Name\" },\n    { id: \"bankName\", label: \"Bank_Name\" },\n    { id: \"bankAccNo\", label: \"Bank_Account_No\" },\n    { id: \"bankIban\", label: \"Bank IBAN\" },\n    { id: \"bankSwiftCode\", label: \"Bank Swift Code\" },\n    // { id: 'absenceTariff', label: 'Absence_sum' },\n  ];\n\n  useEffect(() => {\n    init_companies_temp.current();\n  }, []);\n\n  const initializeCompanies = async () => {\n    if (user?.id !== \"\") {\n      dispatch(setLoading(true));\n\n      await db\n        .collection(\"company\")\n        .orderBy(\"name\", \"asc\")\n        .get()\n        .then((querySnapshot) => {\n          var arr = [];\n          var companyListRedux = [];\n\n          if (querySnapshot.docs && querySnapshot.docs.length > 0) {\n            querySnapshot.docs.forEach((doc) => {\n              /* if (\n                (doc.id !== \"companyIds\" &&\n                  doc.id !== process.env.REACT_APP_PROTECTED_COMPANY) ||\n                (doc.id !== \"companyIds\" &&\n                  doc.id === process.env.REACT_APP_PROTECTED_COMPANY &&\n                  user?.id === process.env.REACT_APP_PROTECTED_USER)\n              ) { */\n              if (\n                (user?.role === \"super-admin\" ||\n                  (user?.a_comp &&\n                    user?.a_comp?.length > 0 &&\n                    user?.a_comp.find((comp) => comp.id === doc.id))) &&\n                doc?.id !== \"companyIds\"\n              ) {\n                if (\n                  user?.permissions?.viewCompChk?.assignedCompanyId.includes(\n                    doc.id\n                  )\n                ) {\n                  arr.push({\n                    id: doc?.id,\n                    data: doc?.data(),\n                    name: doc?.data()?.name || \"\",\n                    MRATemplateFlag: doc?.data()?.MRATemplateFlag\n                      ? JSON.stringify(doc?.data()?.MRATemplateFlag)\n                      : null,\n                    displayMRAFiscalisationButton:\n                      doc?.data()?.displayMRAFiscalisationButton || false,\n                    vatOrNonVatRegistered: doc?.data()?.vatOrNonVatRegistered\n                      ? JSON.stringify(doc?.data()?.vatOrNonVatRegistered)\n                      : null,\n                    vatPercentage: doc?.data()?.vatPercentage || 0,\n                    imageName: doc?.data()?.imageName || \"\",\n                    imageSig: doc?.data()?.imageSig || \"\",\n                    imageUrl: doc?.data()?.imageUrl || \"\",\n                    sigUrl: doc?.data()?.sigUrl || \"\",\n                    stampName: doc?.data()?.stampName || \"\",\n                    stampUrl: doc?.data()?.stampUrl || \"\",\n                    companyType: doc?.data()?.companyType || \"\",\n                    // natureOfBusiness: doc.data().natureOfBusiness,\n                    // incorDate: doc.data().incorDate,\n                    // payeRegNo: doc.data().payeRegNo,\n\n                    tan: doc?.data()?.tan || \"\",\n                    brn: doc?.data()?.brn || \"\",\n                    // nic: doc.data().nic,\n                    address: doc?.data()?.address || \"\",\n                    // country: doc.data().country,\n                    contactNumber: doc?.data()?.contactNumber || \"\",\n                    mobileNumber: doc?.data()?.mobileNumber || \"\",\n                    email: doc?.data()?.email || \"\",\n                    // absenceTariff: doc?.data()?.absenceTariff || [],\n                    beneficiaryName: doc?.data()?.beneficiaryName || \"\",\n                    bankName: doc?.data()?.bankName || \"\",\n                    bankAccNo: doc?.data()?.bankAccNo || \"\",\n                    bankIban: doc?.data()?.bankIban || \"\",\n                    bankSwiftCode: doc?.data()?.bankSwiftCode || \"\",\n                    documentTemplate: doc?.data()?.documentTemplate || \"\",\n                  });\n\n                  companyListRedux.push({\n                    id: doc.id,\n                    name: doc.data().name,\n                    data: { ...doc.data() },\n                  });\n                }\n              }\n            });\n            arr.sort(dynamicSort(\"name\"));\n\n            set_us_a_companyList(arr);\n\n            dispatch(setCompanyList(companyListRedux));\n\n            dispatch(setLoading(false));\n          } else {\n            set_us_a_companyList([]);\n\n            dispatch(setCompanyList([]));\n\n            dispatch(setLoading(false));\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while fetching companies: ${err?.message}`,\n            { variant: \"error\" }\n          );\n        });\n    } else {\n      enqueueSnackbar(\n        \"Your session has been terminated due to greater than 30 minutes of inactivity. Please log in again.\",\n        { variant: \"error\" }\n      );\n    }\n  };\n\n  init_companies_temp.current = initializeCompanies;\n\n  const handleCloseDialog = () => {\n    setCompanyDetails({\n      name: \"\",\n      vatPercentage: 0,\n      imageName: \"\",\n      imageSig: \"\",\n      imageUrl: \"\",\n      sigUrl: \"\",\n      stampName: \"\",\n      stampUrl: \"\",\n      companyType: \"\",\n      // natureOfBusiness: \"\",\n      // incorDate: \"\",\n      // payeRegNo: \"\",\n      vatOrNonVatRegistered: null,\n      tan: \"\",\n      address: \"\",\n      // country: \"\",\n      email: \"\",\n      contactNumber: \"\",\n      mobileNumber: \"\",\n      brn: \"\",\n      // nic: \"\",\n      // absenceTariff: [],\n      beneficiaryName: \"\",\n      bankName: \"\",\n      bankAccNo: \"\",\n      bankIban: \"\",\n      bankSwiftCode: \"\",\n      MRATemplateFlag: null,\n      displayMRAFiscalisationButton: false,\n      documentTemplate: \"\",\n    });\n    setOpenDialog(false);\n  };\n\n  const addBtnFunc = () => {\n    setDialogType(\"add\");\n    setOpenDialog(true);\n    setCompanyDetails({\n      name: \"\",\n      vatPercentage: 0,\n      imageName: \"\",\n      imageSig: \"\",\n      imageUrl: \"\",\n      sigUrl: \"\",\n      stampName: \"\",\n      stampUrl: \"\",\n      companyType: \"\",\n      // natureOfBusiness: \"\",\n      // incorDate: \"\",\n      // payeRegNo: \"\",\n      vatOrNonVatRegistered: null,\n      tan: \"\",\n      address: \"\",\n      // country: \"\",\n      email: \"\",\n      contactNumber: \"\",\n      mobileNumber: \"\",\n      brn: \"\",\n      // nic: \"\",\n      // absenceTariff: [],\n      beneficiaryName: \"\",\n      bankName: \"\",\n      bankAccNo: \"\",\n      bankIban: \"\",\n      bankSwiftCode: \"\",\n      documentTemplate: \"\",\n\n      // this flag will allow new MRA template\n      MRATemplateFlag: null,\n      displayMRAFiscalisationButton: false,\n    });\n  };\n\n  const updateBtnFunc = (id, data) => {\n    setDialogType(\"update\");\n    setOpenDialog(true);\n    setCompanyDetails({\n      id: id,\n      name: data?.name || \"\",\n      vatPercentage: data?.vatPercentage || 0,\n      MRATemplateFlag: data?.MRATemplateFlag || null,\n      displayMRAFiscalisationButton:\n        data?.displayMRAFiscalisationButton || false,\n      /*  ? JSON.parse(data?.MRATemplateFlag)\n        : null, */\n      vatOrNonVatRegistered: data?.vatOrNonVatRegistered || null /* \n        ? JSON.parse(data?.vatOrNonVatRegistered)\n        : null, */,\n      imageName: data?.imageName || \"\",\n      imageSig: data?.imageSig || \"\",\n      imageUrl: data?.imageUrl || \"\",\n      sigUrl: data?.sigUrl || \"\",\n      stampName: data?.stampName || \"\",\n      stampUrl: data?.stampUrl || \"\",\n      companyType: data?.companyType || \"\",\n      // natureOfBusiness: data?.natureOfBusiness,\n      // incorDate: data?.incorDate,\n      // payeRegNo: data?.payeRegNo,\n\n      tan: data?.tan || \"\",\n      address: data?.address || \"\",\n      // country: data?.country,\n      email: data?.email || \"\",\n      contactNumber: data?.contactNumber || \"\",\n      mobileNumber: data?.mobileNumber || \"\",\n      brn: data?.brn || \"\",\n      // nic: data?.nic,\n      // absenceTariff: data?.absenceTariff || [],\n      beneficiaryName: data?.beneficiaryName || \"\",\n      bankName: data?.bankName || \"\",\n      bankAccNo: data?.bankAccNo || \"\",\n      bankIban: data?.bankIban || \"\",\n      bankSwiftCode: data?.bankSwiftCode || \"\",\n      documentTemplate: data?.documentTemplate || \"\",\n    });\n  };\n\n  const deleteBtnFunc = async (id) => {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"company\")\n      .doc(id)\n      .delete()\n      .then(async () => {\n        let promiseResult = await new Promise((resolve) => {\n          let companyListArr = [...companyList];\n          let companyListArrLength = companyListArr.length;\n          let idIndex = 0;\n          for (let i = 0; i < companyListArrLength; i++) {\n            if (companyListArr[i].id === id) {\n              idIndex = i;\n            }\n          }\n          companyListArr.splice(idIndex, 1);\n          companyListArr.sort(dynamicSort(\"name\"));\n          resolve(companyListArr);\n        });\n\n        if (promiseResult) {\n          await db\n            .collection(\"company\")\n            .doc(\"companyIds\")\n            .set({ companyIdArray: promiseResult }, { merge: true })\n            .then(() => {\n              initializeCompanies();\n\n              enqueueSnackbar(\"Row deleted successfully\", {\n                variant: \"success\",\n              });\n              dispatch(setLoading(false));\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while deleting company: ${err?.message}`,\n                {\n                  variant: \"error\",\n                }\n              );\n              dispatch(setLoading(false));\n            });\n        }\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while deleting company: ${err?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Container maxWidth={themeStretch ? false : \"xl\"}>\n      {/*  <div\n        style={{\n          display: !user?.permissions?.viewCompChk ? \"\" : \"none\",\n        }}\n      >\n        <Alert severity=\"error\">\n          Sorry, you do not have access to this section. Please contact Admin\n          for more info. Thank you.\n        </Alert>\n      </div>\n\n      <div\n        style={{\n          display: user?.permissions?.viewCompChk ? \"\" : \"none\",\n        }}\n      > */}\n      <Suspense fallback={<p></p>}>\n        <TableCRUDTemplate\n          type=\"company\"\n          headers={headers}\n          aCollection={us_a_companyList}\n          addBtnDisplay={user?.role === \"super-admin\" ? true : false}\n          addBtnLabel={\"Create a company\"}\n          addBtnFunc={addBtnFunc}\n          openDialog={openDialog}\n          handleCloseDialog={handleCloseDialog}\n          emptyColMsg={\n            \"Sorry, not a single company has been created yet. Please create a company.\"\n          }\n          updateBtnDisplay={true}\n          deleteBtnDisplay={true}\n          updateBtnFunc={updateBtnFunc}\n          deleteBtnFunc={deleteBtnFunc}\n        />\n      </Suspense>\n\n      <div>\n        {dialogType && dialogType === \"add\" ? (\n          <Suspense fallback={<p></p>}>\n            <CreateCompanyDialog\n              openDialog={openDialog}\n              handleCloseDialog={handleCloseDialog}\n              companyDetails={companyDetails}\n              setCompanyDetails={setCompanyDetails}\n              initializeCompanies={initializeCompanies}\n            />\n          </Suspense>\n        ) : (\n          <Suspense fallback={<p></p>}>\n            <UpdateCompanyDialog\n              openDialog={openDialog}\n              handleCloseDialog={handleCloseDialog}\n              companyDetails={companyDetails}\n              setCompanyDetails={setCompanyDetails}\n              initializeCompanies={initializeCompanies}\n            />\n          </Suspense>\n        )}\n      </div>\n      {/*       </div> */}\n    </Container>\n  );\n};\n\nexport default CompanyDetail;\n"],"sourceRoot":""}