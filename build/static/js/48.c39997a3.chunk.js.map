{"version":3,"sources":["../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","components/invoice-view-details/InvViewDetails.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","CCDialog","lazy","InvViewDetails","viewOnly","searchAndChoose","chooseDocument","useState","navigator","onLine","isOnline","setIsOnline","user","useAuth","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","selectDocument","documentType","companyIdSelected","companyDetails","clientDocumentObjectSelected","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","logo","setLogo","sigImage","setSigImage","us_documentlist","set_us_documentlist","temp_logo_image_ref","useRef","temp_signature_image_ref","temp_fetch_document_ref","openUpdateDialog","setOpenUpdateDialog","us_open_convertTo_dialog","set_us_open_convertTo_dialog","conversionValue","set_conversionValue","selectedProformaDoc","set_selectedProformaDoc","selectedProformaFilter","set_selectedProformaFilter","open","type","us_openCCDialog","set_us_openCCDialog","fetchDocument","a","undefined","id","variant","setLoading","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","doc","where","firebase","firestore","Timestamp","fromDate","get","then","querySnapshot","docArray","docs","length","forEach","document","data","clientId","deleted","valid","isProformaConverted","push","checked","catch","err","title","message","imageUrl","toDataUrl","logoImage","sigUrl","url","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","console","log","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","current","handleCloseUpdateDialog","isUpdateDone","setUpdateDocumentData","invoiceDocumentData","createdFromProfroma","previousProformaDocId","documentDocRef","runTransaction","transaction","sfDoc","exists","update","documentIndex","newDocumentNumber","Number","documentNumber","toString","documentTitle","find","newDocumentData","docString","docTitle","docType","docDate","convertedByUserId","convertedByUserEmail","email","convertedByUserTime","process","REACT_APP_CUSTOM_SMART_PROMOTE_ID","docParticulars","row","inventoryItemData","itemData","allInventoryItemTransactions","newAllInventoryItemTransactions","proformaIndex","findIndex","set","merge","applyPayment","conversionDocId","conversionDocTitle","deleteDocument","documentId","deletedCollectionName","allInventoryItemTransactionsData","isDocFoundIndex","totalQtySold","qtySold","totalQtyRemaining","qtyRemaining","newTotalAmountReceivedWithoutVAT","totalAmountReceivedWithoutVAT","newTotalAmountReceivedWithVAT","totalAmountReceivedWithVAT","OldQtySold","itemQtySold","rowDiscountedAmount","rowAmount","rowAmountWithVAT","toFixed","error","add","deletedByUserId","deletedByUserEmail","deletedByUserTime","delete","uploadToMRA","invoiceData","transactionType","vatOrNonVatRegistered","docIssuedDateTime","invoiceTypeDesc","invoiceRefIdentifier","checkedInvoices","functions","httpsCallable","submitMultipleInvoicesToMra","JSON","stringify","invoices","brn","filter","errorFound","applyVoid","voidBool","invoiceId","isVoid","invoiceSelected","paymentType","paymentCounterDocRef","paymentCounter","executePayment","paymentNumberDoc","remainingAmount","paymentAmount","paymentStatus","docTotal","batch","paymentdocRefId","paymentDocRef","invoiceDocRef","invoiceList","paymentDate","moment","format","dateCreated","docRemainingPaymentAmt","attachedPaymentNumber","paymentNumber","paymentNumberString","paymentRemainingAmount","commit","item","xs","md","style","width","direction","spacing","alignItems","label","onChange","newValue","renderInput","params","size","inputFormat","display","displayMRAFiscalisationButton","color","onClick","submitMultipleInvoiceToMRA","disabled","sendEmail","invoice","container","ListboxProps","maxHeight","options","e","reason","getOptionLabel","option","fullWidth","border","MRATemplateFlag","align","whiteSpace","REACT_APP_CUSTOM_ASHLEY_ID","fontWeight","REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS","includes","documentTemplate","map","index","displayBool","docQuoteNumber","docPurchaseOrderNumber","docPurchaseOrderNumbe","background","event","newDocumentlist","target","permissions","deletePermission","assignedCompanyId","documentTypeId","documentTypeTitle","keywords","updatePermission","toDate","name","particular","customDetail","invJobRef","emailAlreadySent","invoiceContent","justifyContent","handleViewDownload","viewPermission","icon","mraCompliantStatus","mraCompliantMessage","docVatFee","displayType","thousandSeparator","docSubTotal","severity","maxWidth","action","control","confirmConversion","fallback","close","sendMultipleEmail","ccField","serviceKey","templateKey","selectedInvoices","promises","content","companyChosenObj","clientChosenObj","invDetails","docBillTo","docShipTo","docTermsAndCondition","invDate","invParticulars","invTotal","invoiceString","invVatFee","invSubTotal","docBLNumber","docSupplier","docContainerNumber","docPackages","docDescription","docGrossWeight","docVolume","docPortOfLoading","docETA","docVesselName","docRoE","docPlaceOfLanding","discountTotalAmount","discountedTotalAmount","invStorageFee","invScanningFee","invGatePassFee","invVehicleNo","transportFees","transportDesc","invApplyVat","docShipper","docMarkNos","docCommodity","docHbl","docDepot","qrCodeUri","mraFinalisationData","fiscalisedInvoices","qrCode","dataUri","documentPdfComponent","customTemplate1","newTemplate","MRATemplateApplied","pdf","toBlob","blobPDF","base64String","sFormat","blobResponse","all","allPdfs","invoiceNumberList","invoiceNumberSubjectList","invoice_number_customerName","customerName","particulars","customerParticular","toEmail","email2","email3","email4","emailParameters","from_name","to_name","from_email","to_email","reply_to","fileName","invoiceNumber","subject","invoice_number","seperatedByCommas","newCC","i","emailjs","send","promisesEmailSent","resolveEmailSent","text"],"mappings":"qJAGA,IAAIA,EAAyBC,EAAQ,IACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAClB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAChDO,EAAcP,EAAQ,GACXG,EAAQE,SAAU,EAAIC,EAAeD,UAAuB,EAAIE,EAAYC,KAAK,OAAQ,CACtGC,EAAG,6EACD,W,kCCTJ,IAAIV,EAAyBC,EAAQ,IACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAClB,IAAIC,EAAiBP,EAAuBC,EAAQ,MAChDO,EAAcP,EAAQ,GACXG,EAAQE,SAAU,EAAIC,EAAeD,UAAuB,EAAIE,EAAYC,KAAK,OAAQ,CACtGC,EAAG,uIACD,S,+lBCwCEC,GAAWC,gBAAK,kBAAM,mCAMb,SAASC,GAAT,GAIX,IAAD,cAHDC,GAGC,EAHDA,SACAC,GAEC,EAFDA,gBACAC,GACC,EADDA,eAEA,GAAgCC,mBAASC,UAAUC,QAAnD,qBAAOC,GAAP,MAAiBC,GAAjB,MAEQC,GAASC,cAATD,KAEFE,GAAWC,cAETC,GAAoBC,cAApBD,gBAER,GAKIE,YAAYC,KAJdC,GADF,GACEA,aACAC,GAFF,GAEEA,kBACAC,GAHF,GAGEA,eACAC,GAJF,GAIEA,6BASF,GAAuChB,mBAAS,IAAIiB,MAApD,qBAAOC,GAAP,MAAoBC,GAApB,MAEA,GAAmCnB,mBAAS,IAAIiB,MAAhD,qBAAOG,GAAP,MAAkBC,GAAlB,MAEA,GAAwBrB,mBAAS,IAAjC,qBAAOsB,GAAP,MAAaC,GAAb,MAEA,GAAgCvB,mBAAS,IAAzC,qBAAOwB,GAAP,MAAiBC,GAAjB,MAEA,GAA+CzB,mBAAS,IAAxD,qBAAO0B,GAAP,MAAwBC,GAAxB,MAEMC,GAAsBC,mBAEtBC,GAA2BD,mBAE3BE,GAA0BF,mBAEhC,GAAgD7B,oBAAS,GAAzD,qBAAOgC,GAAP,MAAyBC,GAAzB,MAEA,GACEjC,oBAAS,GADX,qBAAOkC,GAAP,MAAiCC,GAAjC,MAGA,GAA+CnC,mBAAS,eAAxD,qBAAOoC,GAAP,MAAwBC,GAAxB,MAEA,GAAuDrC,mBAAS,MAAhE,qBAAOsC,GAAP,MAA4BC,GAA5B,MAEA,GAA6DvC,mBAAS,MAAtE,qBAAOwC,GAAP,MAA+BC,GAA/B,MAEA,GAA+CzC,mBAAS,CACtD0C,MAAM,EACNC,KAAM,KAFR,qBAAOC,GAAP,MAAwBC,GAAxB,MAjDC,SA0FcC,KA1Fd,8EA0FD,sCAAAC,EAAA,8DAEoBC,IAAhB9B,IACgB,KAAhBA,SACc8B,IAAd5B,IACc,KAAdA,IAHA,OAIAP,SAJA,IAIAA,QAAcoC,IACO,MAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAPlB,sBASQ,IAAIhC,KAAKC,IAAe,IAAID,KAAKG,KATzC,gBAUMX,GAAgB,sDAAuD,CACrEyC,QAAS,UAEX3C,GAAS4C,aAAW,IAb1B,+BAeyBH,IAAnBjC,SACiCiC,IAAjChC,GAhBN,wBAkBMT,GAAS4C,aAAW,IAEdC,EAAqBlC,GAAYmC,cACjCC,EAAuBF,EAAmBG,MAAM,KAEhDC,EAAmBpC,GAAUiC,cAC7BI,EAAqBD,EAAiBD,MAAM,KAE5CG,EAAY,IAAIzC,KAAJ,UAAYqC,EAAqB,GAAjC,mBACZK,EAAU,IAAI1C,KAAJ,UAAYwC,EAAmB,GAA/B,mBA3BtB,UA6BYG,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAHG,OAGQhD,SAHR,IAGQA,QAHR,EAGQA,GAAcoC,IACzBc,MACC,UACA,KACAC,IAASC,UAAUC,UAAUC,SAAST,IAEvCK,MACC,UACA,KACAC,IAASC,UAAUC,UAAUC,SAASR,IAEvCS,MACAC,MAAK,SAACC,GAAmB,IAAD,EACnBC,EAAW,IACE,OAAbD,QAAa,IAAbA,GAAA,UAAAA,EAAeE,YAAf,eAAqBC,QAAS,GACnB,OAAbH,QAAa,IAAbA,KAAeE,KAAKE,SAAQ,SAACC,GAAc,IAAD,IAExC,IACU,OAARA,QAAQ,IAARA,GAAA,UAAAA,EAAUC,cAAV,eAAkBC,aAAlB,OACE7D,SADF,IACEA,QADF,EACEA,GAA8BiC,MAChC,OAAC0B,QAAD,IAACA,GAAD,UAACA,EAAUC,cAAX,QAAC,EAAkBE,SACnB,CAAC,IAAD,EACIC,GAAQ,EAEW,cAAT,OAAZlE,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KAAd,OACA0B,QADA,IACAA,GADA,UACAA,EAAUC,cADV,OACA,EAAkBI,sBAElBD,GAAQ,GAGNA,GACFR,EAASU,KAAK,CACZhC,GAAE,OAAE0B,QAAF,IAAEA,OAAF,EAAEA,EAAU1B,GACd2B,KAAI,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAUC,OAChBM,SAAS,QAKjBvD,GAAoB4C,IAEpB5C,GAAoB,IAEtBpB,GAAS4C,aAAW,OAErBgC,OAAM,SAACC,GACN3E,GAAgB,gCAAD,cACmBI,SADnB,IACmBA,QADnB,EACmBA,GAAcwE,MADjC,8BACqDD,QADrD,IACqDA,OADrD,EACqDA,EAAKE,SACvE,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OAlF9B,gCAsFI5C,GAAS4C,aAAW,IAtFxB,6CA1FC,oEAsLD,kCAAAJ,EAAA,yDAEkB,OAAdhC,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,UAAsBW,UACa,MAArB,OAAdxE,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsBW,UAH1B,uBAKIhF,GAAS4C,aAAW,IALxB,SAM0BqC,GAAS,OAACzE,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,aAAC,EAAsBW,UAN1D,OAMQE,EANR,OAOIlE,GAAQkE,GAPZ,4CAtLC,oEAmMD,kCAAA1C,EAAA,yDACoB,OAAdhC,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,UAAsBc,QAA2C,MAAnB,OAAd3E,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsBc,QAD5D,uBAEInF,GAAS4C,aAAW,IAFxB,SAGyBqC,GAAS,OAACzE,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,aAAC,EAAsBc,QAHzD,OAGQlE,EAHR,OAIIC,GAAYD,GAJhB,4CAnMC,+BA6McgE,GA7Md,iFA6MD,WAAyBG,GAAzB,iBAAA5C,EAAA,yDACc,KAAR4C,EADN,yCAEW,IAFX,gCAKyBC,MAAMD,GAL/B,cAKYf,EALZ,iBAMyBA,EAAKiB,OAN9B,eAMYA,EANZ,yBAOa,IAAIC,SAAQ,SAACC,GAClB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,GACrBG,EAAOG,UAAY,WACjB,IAAMC,EAAaJ,EAAOK,OAC1BN,EAAQK,QAZlB,kCAgBME,QAAQC,IAAR,MAhBN,2DA7MC,sBAsDDC,qBAAU,WACR,IAAMC,EAAe,WACnBrG,IAAY,IAGRsG,EAAgB,WACpBtG,IAAY,IAOd,OAJAuG,OAAOC,iBAAiB,SAAUH,GAClCE,OAAOC,iBAAiB,UAAWF,GAG5B,WACLC,OAAOE,oBAAoB,SAAUJ,GACrCE,OAAOE,oBAAoB,UAAWH,MAEvC,IAEHF,qBAAU,WAER5E,GAAoBkF,UAEpBhF,GAAyBgF,YACxB,CAAC/F,KAEJyF,qBAAU,WACRzE,GAAwB+E,YACvB,CACDjG,GACAK,GACAE,GACAL,GACAC,KA6FFe,GAAwB+E,QAAUhE,GAalClB,GAAoBkF,QAjMnB,4CA2MDhF,GAAyBgF,QA3MxB,4CA8PD,IAAMC,GAA0B,SAACC,GAC/BzG,GAAS0G,iBAAsBjE,IAC/Bf,IAAoB,GAEhB+E,GACFlE,MAnQH,8CAuQD,8BAAAC,EAAA,sDACMX,IACF7B,GAAS4C,aAAW,IAGhB+D,EAJe,kCAKd5E,SALc,IAKdA,QALc,EAKdA,GAAqBsC,MALP,IAMjBuC,qBAAqB,EACrBC,sBAAqB,OAAE9E,SAAF,IAAEA,QAAF,EAAEA,GAAqBW,KAG1CoE,EAAiBzD,IAClBC,WAAW,WACXC,IAAIhD,IACJ+C,WAAWzB,IACX0B,IAAI,iBAEPF,IAAG0D,gBAAe,SAACC,GACjB,OAAOA,EAAYnD,IAAIiD,GAAgBhD,MAAK,SAACmD,GAC3C,IAAKA,EAAMC,OAKT,OAHAF,EAAYG,OAAOL,EAAgB,CACjCM,cAAe,IAEV,EAGT,IAAIC,EAAoBC,OAAOL,EAAM5C,OAAO+C,eAAiB,EAI7D,OAHAJ,EAAYG,OAAOL,EAAgB,CACjCM,cAAeC,IAEVA,QAGRvD,KAjBH,uCAiBQ,WAAOuD,GAAP,6BAAA7E,EAAA,6DACA+E,EAAiBF,EAAkBG,WACR,KAAb,QAAd,EAAAD,SAAA,eAAgBrD,QAClBqD,EAAc,cAAUA,GACY,KAAb,QAAd,EAAAA,SAAA,eAAgBrD,QACzBqD,EAAc,aAASA,GACa,KAAb,QAAd,EAAAA,SAAA,eAAgBrD,QACzBqD,EAAc,YAAQA,GACc,KAAb,QAAd,EAAAA,SAAA,eAAgBrD,UACzBqD,EAAc,WAAOA,IA0BnBE,EAnCA,UAYc,CAChB,CACE/E,GAAI,YACJoC,MAAO,aAET,CACEpC,GAAI,UACJoC,MAAO,WAET,CACEpC,GAAI,cACJoC,MAAO,eAET,CACEpC,GAAI,iBACJoC,MAAO,kBAET,CACEpC,GAAI,WACJoC,MAAO,aAImB4C,MAC5B,SAACnE,GAAD,OAAY,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKb,MAAOb,aApCnB,aAmCgB,EAEjBiD,MAEG6C,EAvCF,2BAwCChB,GAxCD,IAyCFjE,GAAI2E,EAAkBG,WACtBI,UAAWL,EACXM,SAAUJ,EACVK,QAASjG,GACTkG,QAAStE,IAASC,UAAUC,UAAUC,SAAS,IAAIlD,MACnDsH,mBAAuB,OAAJlI,SAAI,IAAJA,QAAA,EAAAA,GAAM4C,KAAM,GAC/BuF,sBAA0B,OAAJnI,SAAI,IAAJA,QAAA,EAAAA,GAAMoI,QAAS,GACrCC,oBAAqB,IAAIzH,QAMX,OAAdF,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MAAO0F,+sIAAYC,mCAEnC1B,EAAoB2B,eAAenE,QAAnC,uCAA2C,WAAOoE,GAAP,eAAA/F,EAAA,gEACrC+F,QADqC,IACrCA,MAAKC,kBADgC,gCAEjCnF,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAAW,aACXC,IAJG,OAICgF,QAJD,IAICA,GAJD,UAICA,EAAKC,yBAJN,aAIC,EAAwB9F,IAC5BmB,MACAC,KANG,uCAME,WAAO2E,GAAP,yBAAAjG,EAAA,0DACAiG,EAASvB,OADT,mBAEEwB,GACM,OAARD,QAAQ,IAARA,GAAA,UAAAA,EAAUpE,cAAV,eAAkBqE,+BAAgC,GAGhDC,EANF,YAOID,GAAgC,OAElCE,EACFF,EAA6BG,WAC3B,SAAC7B,GAAD,MAC2B,cAAd,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAac,WACF,OAAXd,QAAW,IAAXA,OAAA,EAAAA,EAAaY,cAAb,OAA2B7F,SAA3B,IAA2BA,QAA3B,EAA2BA,GAAqBW,SAGjC,GAhBnB,uBAiBAiG,EAAgCC,GAAhC,2BACKD,EAAgCC,IADrC,OAEErB,eAAgBF,EAAkBG,WAClCI,UAAWL,EACXM,SAAUJ,EACVK,QAASjG,GACTkG,QAAStE,IAASC,UAAUC,UAAUC,SACpC,IAAIlD,OAPR,wBASW,IAAIA,MATf,kCAUoB,GAVpB,8CAW0BqB,SAX1B,IAW0BA,QAX1B,EAW0BA,GAAqBW,IAX/C,IAjBA,SA+BMW,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAAW,aACXC,IAJG,OAICgF,QAJD,IAICA,GAJD,UAICA,EAAKC,yBAJN,aAIC,EAAwB9F,IAC5BoG,IACC,CACEJ,6BACEC,GAAmC,IAEvC,CAAEI,OAAO,IAzCb,2CANF,uDAFiC,2CAA3C,uDAxDE,SAmHE1F,IACHC,WAAW,WACXC,IAAIhD,IACJ+C,WAAWzB,IACX0B,IAAIgE,EAAeC,YACnBsB,IALG,eAOGnB,GAEL,CAAEoB,OAAO,IAEVjF,KAXG,sBAWE,sBAAAtB,EAAA,yDACJtC,GAAgB,OAAD,OACNuH,EADM,4CAMblH,KACA6H,+sIAAYC,kCARV,gCAUIW,GACJ,CACEtG,GAAI6E,EAAeC,WACnBnD,KAAK,eAAMsD,IAEb,QAfA,cAoBJ3H,GAAS4C,aAAW,IApBhB,SAqBES,IACHC,WAAW,WACXC,IAAIhD,IACJ+C,WAAW,YACXC,IAJG,OAICxB,SAJD,IAICA,QAJD,EAICA,GAAqBW,IACzBoG,IACC,CACEG,gBAAiBpH,GACjBqH,mBAAoBzB,EACpBhD,qBAAqB,GAEvB,CAAEsE,OAAO,IAEVjF,MAAK,WACJ5D,GAAgB,wCAGhB0B,IAA6B,GAG7BE,GAAoB,eACpBE,GAAwB,MAExBO,KAEAvC,GAAS4C,aAAW,OAErBgC,OAAM,SAACC,GACN3E,GAAgB,iDAAD,cACoC2E,QADpC,IACoCA,OADpC,EACoCA,EAAKE,SACtD,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OArDpB,4CAwDLgC,OAAM,SAACC,GACN3E,GAAgB,uCAAD,cAC0B2E,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAKE,SAC5C,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OA3LpB,2CAjBR,uDA+MGgC,OAAM,SAACC,GACN3E,GAAgB,4DAAD,cAC+C2E,QAD/C,IAC+CA,OAD/C,EAC+CA,EAAKE,SACjE,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,QAGxB1C,GAAgB,mCAxOpB,2CAvQC,yBAmfD,IAAMiJ,GAAc,uCAAG,WAAOC,EAAY/E,GAAnB,eAAA7B,EAAA,6DACrBxC,GAAS4C,aAAW,IAGhByG,EAJiB,wBAIiB/I,SAJjB,IAIiBA,QAJjB,EAIiBA,GAAcoC,KAGpC,OAAdlC,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MAAO0F,+sIAAYC,mCACb,cAAT,OAAZ/H,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACQ,aAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACO,iBAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACO,sBAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KAChB,aAE8B,OAAJ2B,QAAI,IAAJA,OAAA,EAAAA,EAAMiE,iBAAkB,IACnCnE,QAAf,uCAAuB,WAAOoE,GAAP,eAAA/F,EAAA,gEACjB+F,QADiB,IACjBA,MAAKC,kBADY,gCAGbnF,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAAW,aACXC,IAJG,OAICgF,QAJD,IAICA,GAJD,UAICA,EAAKC,yBAJN,aAIC,EAAwB9F,IAC5BmB,MACAC,KANG,uCAME,WAAOP,GAAP,iDAAAf,EAAA,0DACAe,EAAI2D,OADJ,wBAGEoC,GACC,OAAH/F,QAAG,IAAHA,GAAA,UAAAA,EAAKc,cAAL,eAAaqE,+BAAgC,GAG3Ca,GAAmB,EAEnBD,EAAiCpF,OAAS,IAC5CqF,EAAkBD,EAAiCT,WACjD,SAAC7B,GAAD,OACEA,EAAYY,YAAcwB,IACf,OAAXpC,QAAW,IAAXA,OAAA,EAAAA,EAAac,YAAb,OAAyBxH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAcoC,QAIzC8G,EAAelC,QAAU,OAAH/D,QAAG,IAAHA,GAAA,UAAAA,EAAKc,cAAL,eAAaoF,UAAW,GAC9CC,EAAoBpC,QAAU,OAAH/D,QAAG,IAAHA,GAAA,UAAAA,EAAKc,cAAL,eAAasF,eAAgB,GAExDC,EAAmCtC,QAClC,OAAH/D,QAAG,IAAHA,GAAA,UAAAA,EAAKc,cAAL,eAAawF,gCAAiC,GAG5CC,EAAgCxC,QAC/B,OAAH/D,QAAG,IAAHA,GAAA,UAAAA,EAAKc,cAAL,eAAa0F,6BAA8B,GAGzCR,GAAmB,IAEjBS,EAAa1C,QACf,UAAAgC,EAAiCC,UAAjC,eACIU,cAAe,GAIrBP,GAAwCM,EAGxCR,GAA8BQ,EAE9BJ,GAEEtC,QACE,UAAAgC,EAAiCC,UAAjC,eACIW,uBADJ,UAEEZ,EAAiCC,UAFnC,aAEE,EACIY,YACJ,GAGNL,GAEExC,QACE,UAAAgC,EAAiCC,UAAjC,eACIa,mBAAoB,IAI1B1B,EAA+B,GAE/Ba,GAAmB,GAGrBD,EAAiCnF,SAAQ,SAAC6C,KAG3B,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaY,aAAcwB,IAChB,OAAXpC,QAAW,IAAXA,OAAA,EAAAA,EAAac,YAAb,OAAyBxH,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAcoC,MAQvCgG,EAA6BhE,KAA7B,eAAuCsC,OA5E3C,UAiFI3D,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAAW,aACXC,IAJG,OAICgF,QAJD,IAICA,GAJD,UAICA,EAAKC,yBAJN,aAIC,EAAwB9F,IAC5BoG,IACC,CACEe,8BAA+BvC,OAC7BsC,GAAoC,GACpCS,QAAQ,GACVN,2BAA4BzC,OAC1BwC,GAAiC,GACjCO,QAAQ,GACVZ,QAASD,GAAgB,EACzBG,aAAcD,GAAqB,EACnChB,6BACEA,GAAgC,IAEpC,CAAEK,OAAO,IAEVjF,MAAK,WACJ5D,GAAgB,iCAEjB0E,OAAM,SAAC0F,GACNpK,GAAgB,4DAAD,cAC+CoK,QAD/C,IAC+CA,OAD/C,EAC+CA,EAAOvF,SACnE,CAAEpC,QAAS,aA3Gf,gCA+GFzC,GACE,gFACA,CAAEyC,QAAS,UAjHX,4CANF,uDAHa,2CAAvB,uDAfmB,SAiJfU,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAAW+F,GACXkB,IAJG,aAKFhG,SAAS,EACTiG,gBAAe,OAAE1K,SAAF,IAAEA,QAAF,EAAEA,GAAM4C,GACvB+H,mBAAkB,OAAE3K,SAAF,IAAEA,QAAF,EAAEA,GAAMoI,MAC1BwC,kBAAmB,IAAIhK,KACvBgC,GAAI0G,GACD/E,IAEJP,KAZG,sBAYE,sBAAAtB,EAAA,sEACEa,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAHG,OAGQhD,SAHR,IAGQA,QAHR,EAGQA,GAAcoC,IACzBa,IAAI6F,GACJuB,SACA7G,MAAK,WACJ5D,GAAgB,gCAAiC,CAC/CyC,QAAS,YAGXJ,KACAvC,GAAS4C,aAAW,OAErBgC,OAAM,SAAC0F,GACNpK,GAAgB,0CAAD,cAC6BoK,QAD7B,IAC6BA,OAD7B,EAC6BA,EAAOvF,SACjD,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OApBpB,4CAuBLgC,OAAM,SAAC0F,GACNpK,GAAgB,0CAAD,cAC6BoK,QAD7B,IAC6BA,OAD7B,EAC6BA,EAAOvF,SACjD,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OAzLH,2CAAH,wDAnfnB,SAgrBcgI,GAhrBd,iFAgrBD,WAA2BC,GAA3B,yCAAArI,EAAA,sDACM,OAACqI,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,iBAAC,EAAmByG,uBAApB,OAAC,EAAoCpI,GAI9B,OAAClC,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,iBAAC,EAAsB0G,6BAAvB,OAAC,EAA6CrI,GAO9C,OAACmI,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,OAAC,EAAmB2G,kBAIpB,OAACH,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,iBAAC,EAAmB4G,uBAApB,OAAC,EAAoCvI,GAKF,SAAhC,OAAXmI,QAAW,IAAXA,GAAA,UAAAA,EAAaxG,YAAb,mBAAmB4G,uBAAnB,eAAoCvI,KACQ,SAAhC,OAAXmI,QAAW,IAAXA,GAAA,UAAAA,EAAaxG,YAAb,mBAAmB4G,uBAAnB,eAAoCvI,KACtC,OAACmI,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,OAAC,EAAmB6G,qBAMhBtL,IACIuL,EAAkB,CAAC,eAAKN,IAEMO,IAAUC,cAC5C,8BAEFC,CAA4B,CAC1BxL,KAAMyL,KAAKC,UAAU1L,IACrB2L,SAAUF,KAAKC,UAAUL,GACzB5K,kBAAmBA,GACnBD,aAAciL,KAAKC,UAAUlL,IAC7BoL,IAAG,OAAElL,SAAF,IAAEA,IAAF,UAAEA,GAAgB6D,YAAlB,aAAE,EAAsBqH,IAC3BlL,eAAgB+K,KAAKC,UAAUhL,IAC/BC,6BAA8B8K,KAAKC,UACjC/K,MAIJ8B,KACAvC,GAAS4C,aAAW,MAEpB1C,GAAgB,6BAA8B,CAAEyC,QAAS,UACzD3C,GAAS4C,aAAW,KA1BtB1C,GAAgB,4BAA6B,CAC3CyC,QAAS,YATXzC,GAAgB,6BAA8B,CAC5CyC,QAAS,YALXzC,GAAgB,mCAAoC,CAClDyC,QAAS,YARXzC,GACE,4EACA,CACEyC,QAAS,YAPbzC,GAAgB,uCAAwC,CACtDyC,QAAS,YAHf,4CAhrBC,oEAwuBD,oCAAAH,EAAA,sDACM,OAAChC,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,iBAAC,EAAsB0G,6BAAvB,OAAC,EAA6CrI,IAQ1CyI,EAAkBhK,GAAgBwK,QACtC,SAACpI,GAAD,OAA0B,KAAd,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKoB,cAGOwG,EAAgBjH,OAAS,IAC1C0H,GAAa,EACjBT,EAAgBhH,SAAQ,SAAC0G,GAAiB,IAAD,UACM,EAA7C,GAAI,OAACA,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,iBAAC,EAAmByG,uBAApB,OAAC,EAAoCpI,GAQlC,GAAI,OAACmI,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,OAAC,EAAmB2G,mBAQxB,GAAI,OAACH,QAAD,IAACA,GAAD,UAACA,EAAaxG,YAAd,iBAAC,EAAmB4G,uBAApB,QAAC,EAAoCvI,GAAI,CAAC,IAAD,EAClDkJ,GAAa,EACb1L,GAAgB,wBAAD,cACW2K,QADX,IACWA,GADX,UACWA,EAAaxG,YADxB,aACW,EAAmBuD,UAD9B,+BAEb,CACEjF,QAAS,iBAbmC,CAAC,IAAD,EAChDiJ,GAAa,EACb1L,GAAgB,wBAAD,cACW2K,QADX,IACWA,GADX,UACWA,EAAaxG,YADxB,aACW,EAAmBuD,UAD9B,uCAEb,CACEjF,QAAS,iBAZbiJ,GAAa,EACb1L,GAAgB,wBAAD,cACW2K,QADX,IACWA,GADX,UACWA,EAAaxG,YADxB,aACW,EAAmBuD,UAD9B,0CAEb,CACEjF,QAAS,eAsBZiJ,IACChM,IACkCwL,IAAUC,cAC5C,8BAEFC,CAA4B,CAC1BxL,KAAMyL,KAAKC,UAAU1L,IACrB2L,SAAUF,KAAKC,UAAUL,GACzB5K,kBAAmBA,GACnBD,aAAciL,KAAKC,UAAUlL,IAC7BoL,IAAG,OAAElL,SAAF,IAAEA,IAAF,UAAEA,GAAgB6D,YAAlB,aAAE,EAAsBqH,IAC3BlL,eAAgB+K,KAAKC,UAAUhL,IAC/BC,6BAA8B8K,KAAKC,UACjC/K,MAIJ8B,KACAvC,GAAS4C,aAAW,MAEpB1C,GAAgB,6BAA8B,CAAEyC,QAAS,UACzD3C,GAAS4C,aAAW,OA9D1B1C,GACE,4EACA,CACEyC,QAAS,YALjB,4CAxuBC,+BAinCckJ,GAjnCd,mFAinCD,WAAyBC,EAAUC,GAAnC,SAAAvJ,EAAA,6DACExC,GAAS4C,aAAW,IADtB,SAEQS,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAHG,OAGQhD,SAHR,IAGQA,QAHR,EAGQA,GAAcoC,IACzBa,IAAIwI,GACJjD,IAAI,CAAEkD,OAAQF,GAAY,CAAE/C,OAAO,IACnCjF,KANG,sBAME,sBAAAtB,EAAA,sEACED,KADF,OAEJrC,GAAgB,GAAD,cAAII,SAAJ,IAAIA,QAAJ,EAAIA,GAAcwE,MAAlB,yBAAgD,CAC7DnC,QAAS,YAEX3C,GAAS4C,aAAW,IALhB,4CAOLgC,OAAM,SAACC,GACN3E,GAAgB,sCAAD,cAAuC2E,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAKE,SAAW,CACpEpC,QAAS,UAEX3C,GAAS4C,aAAW,OAnB1B,4CAjnCC,+BAwoCcoG,GAxoCd,mFAwoCD,WAA4BiD,EAAiBC,GAA7C,SAAA1J,EAAA,sEACe,IAAI+C,SAAQ,SAACC,GACxBxF,GAAS4C,aAAW,IAGpB,IAAIuJ,EAAuB9I,IACxBC,WAAW,WACXC,IAAIhD,IACJ+C,WAAW,WACXC,IAAI,kBAEPF,IAAG0D,eAAH,uCAAkB,WAAOC,GAAP,SAAAxE,EAAA,+EACTwE,EAAYnD,IAAIsI,GAAsBrI,MAAK,SAACmD,GACjD,OAAKA,EAAMC,OAIaI,OAAOL,EAAM5C,OAAO+H,gBAAkB,GAAK,EAH1D,SAHK,2CAAlB,uDAUGtI,KAVH,uCAUQ,WAAOgC,GAAP,SAAAtD,EAAA,yDACW,OAAXsD,EADA,gCAEIzC,IACHC,WAAW,WACXC,IAAIhD,IACJ+C,WAAW,WACXC,IAAI,kBACJuF,IAAI,CAAEsD,eAAgB,IACtBtI,KANG,sBAME,sBAAAtB,EAAA,sEACsB6J,GACxB,EACAJ,EACAC,GAJE,eAOF1G,GAAQ,GAPN,4CAULZ,OAAM,SAACC,GACN3E,GAAgB,iDAAD,cACoC2E,QADpC,IACoCA,OADpC,EACoCA,EAAKE,SACtD,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,OAvBtB,mCAyBOkD,GAAUwB,OAAOxB,GAAU,GAzBlC,iCA0BwBuG,GACxBvG,EACAmG,EACAC,GA7BA,eAiCA1G,GAAQ,GAjCR,4CAVR,uDA+CGZ,OAAM,SAACC,GACN3E,GAAgB,sDAAD,cACyC2E,QADzC,IACyCA,OADzC,EACyCA,EAAKE,SAC3D,CAAEpC,QAAS,UAEb3C,GAAS4C,aAAW,IACpB4C,GAAQ,SAhEhB,mFAxoCC,kCA6sCc6G,GA7sCd,qFA6sCD,WAA8BvG,EAAQmG,EAAiBC,GAAvD,SAAA1J,EAAA,sEACe,IAAI+C,SAAQ,SAACC,GAAa,IAAD,QAChC8G,EAAmBxG,EAAO0B,WACG,KAAb,QAAhB,EAAA8E,SAAA,eAAkBpI,QACpBoI,EAAgB,cAAUA,GACY,KAAb,QAAhB,EAAAA,SAAA,eAAkBpI,QAC3BoI,EAAgB,aAASA,GACa,KAAb,QAAhB,EAAAA,SAAA,eAAkBpI,QAC3BoI,EAAgB,YAAQA,GACc,KAAb,QAAhB,EAAAA,SAAA,eAAkBpI,UAC3BoI,EAAgB,WAAOA,IAGzB,IAI4B,EAJxBC,EAAkB,EAClBC,EAAgB,EAChBC,EAAgB,GAEA,SAAhBP,IACFK,EAAkB,EAClBC,EAAa,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAiB5H,YAApB,aAAG,EAAuBqI,SACvCD,EAAgB,QAIlB,IAAIE,EAAQtJ,IAAGsJ,QAGTC,EAAkB9G,EAAO0B,WAE3B2E,EAAuB9I,IACxBC,WAAW,WACXC,IAAI/C,GAAekC,IACnBY,WAAW,WACXC,IAAI,kBAEHsJ,EAAgBxJ,IACjBC,WAAW,WACXC,IAAI/C,GAAekC,IACnBY,WAAW,WACXC,IAAIqJ,GAEHE,EAAgBzJ,IACjBC,WAAW,WACXC,IAAI/C,GAAekC,IACnBY,WAAWzB,IACX0B,IAAI0I,EAAgBvJ,IAGvBiK,EAAM7D,IACJqD,EACA,CAAEC,eAAgB9E,OAAOxB,IACzB,CAAEiD,OAAO,IAIX4D,EAAM7D,IACJ+D,EACA,CACEE,YAAa,CAAC,CAAEhB,UAAS,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAiBvJ,KAC5CsK,YAAaC,IAAO,IAAIvM,MAAQwM,OAAO,cACvCC,YAAa1J,IAASC,UAAUC,UAAUC,SAAS,IAAIlD,OAEzD,CAAEqI,OAAO,IAGX4D,EAAM7D,IACJgE,EACA,CACEL,cAAeA,EACfW,uBAAwBb,EACxBc,sBAAuB,CACrB,CACEC,cAAeV,EACfW,oBAAqBjB,EACrBJ,YAAa,GACbM,cAAeA,EACfgB,uBAAwBjB,EACxBS,YAAaC,IAAO,IAAIvM,MAAQwM,OAAO,iBAI7C,CAAEnE,OAAO,IAIX4D,EACGc,SACA3J,KAFH,sBAEQ,sBAAAtB,EAAA,sDACJtC,GAAgB,GAAD,OAAIgM,EAAJ,kCACflM,GAAS4C,aAAW,IACpB4C,GAAQ,GAHJ,4CAKLZ,OAAM,SAAC0F,GACNpK,GAAgB,8BAAD,OACiBgM,EADjB,4BACyC5B,QADzC,IACyCA,OADzC,EACyCA,EAAOvF,SAC7D,CACEpC,QAAS,UAGb3C,GAAS4C,aAAW,IACpB4C,GAAQ,SApGhB,oFA7sCC,sBAszCD,OACE,uCACE,gBAAC,IAAD,CAAMkI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,UACE,wBACA,wBACA,eAAC,IAAD,sCAGF,eAAC,IAAD,CAAMF,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,MAAO,CAAEC,MAAO,QAA3C,SACE,gBAAC,IAAD,CAAOC,UAAW,MAAOC,QAAS,EAAGC,WAAY,SAAjD,UACE,eAAC,IAAD,CACEC,MAAM,OACNrP,MAAO8B,IAAe,GACtBwN,SAAU,SAACC,GACTxN,GAAgBwN,IAElBC,YAAa,SAACC,GAAD,OAAY,eAAC,IAAD,2BAAeA,GAAf,IAAuBC,KAAK,YACrDC,YAAY,eAGd,eAAC,IAAD,CACEN,MAAM,KACNrP,MAAOgC,IAAa,GACpBsN,SAAU,SAACC,GACTtN,GAAcsN,IAEhBC,YAAa,SAACC,GAAD,OAAY,eAAC,IAAD,2BAAeA,GAAf,IAAuBC,KAAK,YACrDC,YAAY,oBAKlB,gBAAC,IAAD,CACEd,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,MAAO,CACLY,QAAStN,KAAkC,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB+C,QAAS,EAAI,GAAK,OAC/D4J,MAAO,QANX,UASiB,OAAdtN,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsBqK,8BACrB,uCACE,eAAC,IAAD,CACE/L,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBAp2CpB,2CAo2C0BC,IACfC,WACE3N,KACe,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB+C,QAAS,GAD1B,OAEA/C,SAFA,IAEAA,OAAiBuG,MAAK,SAACnE,GAAD,OAA0B,KAAd,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKoB,aAPxC,kCAcA,wBACA,2BAGF,+BAGa,OAAdnE,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsB0K,WACvB5N,KACe,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB+C,QAAS,GAC1B/C,GAAgBuG,MAAK,SAACsH,GAAD,OAAiC,IAApBA,EAAQrK,WACxC,uCACE,gBAAC,IAAD,CAAOqJ,QAAS,EAAGD,UAAW,MAAOE,WAAY,SAAjD,UACE,eAAC,IAAD,8BAEI9M,GAAgBwK,QAAO,SAACqD,GAAD,OAAiC,IAApBA,EAAQrK,kBAFhD,aAEI,EACIT,OAHR,cAOA,eAAC,IAAD,CACEvB,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBACmBtM,GAAoB,CAC5CH,MAAM,EACNC,KAAM,cAGVyL,MAAO,CAAEC,MAAO,KATlB,mDAcF,2BAGF,+BAGDxN,IAAqC,cAAT,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAC7B,gBAAC,IAAD,CAAMgL,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,UACE,eAAC,IAAD,CAAMqB,WAAS,EAACjB,QAAS,EAAzB,SACE,eAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,IAAD,CACEsB,aAAc,CAAErB,MAAO,CAAEsB,UAAW,SACpCZ,KAAK,QACLL,MAAM,kBACNxL,GAAG,mBACH0M,QAAS,CACP,WACA,oBACA,iCACA,QAEFvQ,MAAOoD,GACPoM,YAAa,SAACC,GAAD,OACX,eAAC,IAAD,2BAAeA,GAAf,IAAuBJ,MAAO,sBAEhCC,SAAU,SAACkB,EAAGxQ,EAAOyQ,GAMjBpN,GAJW,iBAAXoN,GACW,UAAXA,GACAzQ,EAE2BA,EAEA,OAG/B0Q,eAAgB,SAACC,GAAD,OAAYA,GAC5BC,WAAS,QAIf,2BAGF,+BAGF,eAAC,IAAD,UACE,gBAAC,IAAD,CAAOC,OAAQ,EAAf,UACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACiB,OAAdlP,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsBsL,gBACrB,eAAC,IAAD,CACEpB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,YAGvB,+BAGDvQ,IAAYC,GACX,eAAC,IAAD,CACEgP,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,oBAQA,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,oBASDvQ,IAAYC,GACX,+BAEA,eAAC,IAAD,CACEgP,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,oBASF,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,+BAOA,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,oBAQA,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,0BAKMvP,SALN,IAKMA,QALN,EAKMA,GAAcwE,MALpB,cAQe,OAAdtE,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MACjB0F,+sIAAY0H,2BACV,eAAC,IAAD,CACEvB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLkC,WAAY,SACZF,WAAY,UALhB,wBAWA,gCAGa,OAAdrP,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MACf0F,+sIAAY0H,4BADb,OAEDrP,SAFC,IAEDA,OAA8BiC,IAC9B0F,+sIAAY4H,sCACZ5H,+sIAAY4H,qCAAqCC,SAAjD,OACExP,SADF,IACEA,QADF,EACEA,GAA8BiC,IAE9B,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,UAJhB,qBAUA,+BAGa,OAAdrP,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsB0K,UACrB,qCACE,eAAC,IAAD,CAAWR,KAAK,QAAQqB,MAAM,SAA9B,kCAKF,+BAGDtP,IAAqC,cAAT,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAC7B,uCACE,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,8BAOA,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,2BASF,+BAeF,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,2BAQe,OAAdrP,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsBqK,8BACrB,qCACE,eAAC,IAAD,CACEH,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,iCASF,+BAGW,OAAZvP,SAAY,IAAZA,OAAcoC,IAA2B,aAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IACjC,uCACE,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,wBAOA,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,gCASF,+BAGF,eAAC,IAAD,CACEtB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,0BAQ4C,eAA7B,OAAdrP,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBACF,iBAAT,OAAZ5P,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IACZ,eAAC,IAAD,CAAW6L,KAAK,QAAQqB,MAAM,SAA9B,+BAIA,gCAGW,OAAZtP,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KAA2B,cAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACjC,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,8BASW,OAAZvP,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,MACS,cAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACQ,iBAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACO,aAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,MACd,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,SAKwB,cAAT,OAAZvP,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IACX,iCACA,iCAKd,eAAC,IAAD,UACGvB,KACgB,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB+C,QAAS,IAD3B,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAiBgP,KAAI,SAAC5M,EAAK6M,GACzB,IAEqD,YAuBpC,+JAzBbC,IAAc,EAEd/P,IAAqC,cAAT,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAe9B2N,OAb4B,sBAA3BpO,IAAA,OACCsB,QADD,IACCA,GADD,UACCA,EAAKc,YADN,OACC,EAAWiM,gBACe,aAA3BrO,IAAA,OACCsB,QADD,IACCA,GADD,UACCA,EAAKc,YADN,OACC,EAAWkM,wBAEX,mCADDtO,IAAA,OAECsB,QAFD,IAECA,GAFD,UAECA,EAAKc,YAFN,OAEC,EAAWiM,gBAFZ,OAGC/M,QAHD,IAGCA,GAHD,UAGCA,EAAKc,YAHN,OAGC,EAAWkM,0BACe,SAA3BtO,IACC,OAACsB,QAAD,IAACA,GAAD,UAACA,EAAKc,YAAN,OAAC,EAAWiM,gBACZ,OAAC/M,QAAD,IAACA,GAAD,UAACA,EAAKc,YAAN,OAAC,EAAWmM,wBACbvO,IAOHoO,IAAc,EAGhB,OAAIA,GAEA,gBAAC,IAAD,WACiB,OAAd7P,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsBsL,gBACrB,eAAC,IAAD,CACEpB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,SAYE,eAAC,IAAD,CACErH,QAAO,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAKoB,QACdwJ,SAAU,SAACuC,GACT,IAAIC,EAAe,YAAOxP,IAC1BwP,EAAgBP,GAAhB,2BACKO,EAAgBP,IADrB,IAEEzL,QAAS+L,EAAME,OAAOjM,UAExBvD,GAAoBuP,QAK1B,+BAGDrR,IAAYC,GACX,eAAC,IAAD,CACEgP,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,SAYE,eAAC,IAAD,CACErJ,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBAAMpP,GAAe+D,IAHhC,sBASF,eAAC,IAAD,CACEgL,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,SAYE,eAAC,IAAD,CACE2C,MAAM,QACNC,QAAS,kBACPzF,GAAc,OAAC5F,QAAD,IAACA,OAAD,EAACA,EAAKb,GAAN,sBAAea,QAAf,IAAeA,OAAf,EAAeA,EAAKc,QAEpCyK,WACE,OAAChP,SAAD,IAACA,IAAD,UAACA,GAAM+Q,YAAN,OACCvQ,SADD,IACCA,QADD,EACCA,GAAcwQ,yBADhB,iBAAC,EAEEC,yBAFH,OAAC,EAEqBd,SAFrB,OAGCzP,SAHD,IAGCA,QAHD,EAGCA,GAAgBkC,KATtB,SAaE,eAAC,IAAD,QAKLpD,IAAYC,GACX,+BAEA,eAAC,IAAD,CACEqQ,MAAM,SACNrB,KAAK,QACLV,MAAO,CACLgC,WAAY,UAJhB,SAOE,eAAC,IAAD,CACEjB,QAAS,WAAO,IAAD,EACb5O,GACE0G,YAAsB,2BACjBnD,GADgB,IAEnByN,eAAc,OAAE1Q,SAAF,IAAEA,QAAF,EAAEA,GAAcoC,GAC9BuO,kBAAiB,OAAE3Q,SAAF,IAAEA,QAAF,EAAEA,GAAcwE,MACjCoM,UAAa,OAAH3N,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW6M,WAAY,OAGrCxP,IAAoB,IAEtBoN,WACE,OAAChP,SAAD,IAACA,OAAM+Q,gBACP,OAAC/Q,SAAD,IAACA,IAAD,UAACA,GAAM+Q,YAAN,OACCvQ,SADD,IACCA,QADD,EACCA,GAAc6Q,yBADhB,iBAAC,EAEEJ,yBAFH,OAAC,EAEqBd,SAFrB,OAGCzP,SAHD,IAGCA,QAHD,EAGCA,GAAgBkC,OAEd,OAAHa,QAAG,IAAHA,OAAA,EAAAA,EAAKc,QAAL,OACCd,QADD,IACCA,GADD,UACCA,EAAKc,YADN,aACC,EAAWI,sBACU,cAAT,OAAZnE,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IArBpB,SAwBE,eAAC,IAAD,CAAUiM,MAAM,gBAKtB,eAAC,IAAD,CACEiB,MAAM,SACNrB,KAAK,QACLV,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,SAYGiB,IAAM,OAAC1J,QAAD,IAACA,GAAD,UAACA,EAAKc,YAAN,aAAC,EAAW0D,QAAQqJ,UAAUlE,OACnC,0BAGJ,eAAC,IAAD,CACEqB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,SAYGvL,IAA4B,OAC7BA,SAD6B,IAC7BA,OAA8B4Q,MACS,MAAX,OAA5B5Q,SAA4B,IAA5BA,QAAA,EAAAA,GAA8B4Q,MAF7B,OAGG5Q,SAHH,IAGGA,QAHH,EAGGA,GAA8B4Q,KAC9B,KAUN,eAAC,IAAD,CACEzB,MAAM,SACNrB,KAAK,QACLV,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,0BAWKzI,QAXL,IAWKA,GAXL,UAWKA,EAAKc,YAXV,aAWK,EAAWuD,cAED,OAAdpH,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MACjB0F,+sIAAY0H,2BACV,eAAC,IAAD,CACEvB,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,UAJhB,UAOM,OAAHtM,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,mBAAWiE,eAAeZ,MACzB,SAAC4J,GAAD,MAAqC,eAArBA,EAAWxM,gBAD5B,eAEEyM,eAAgB,KAGrB,gCAGa,OAAd/Q,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MACf0F,+sIAAY0H,4BADb,OAEDrP,SAFC,IAEDA,OAA8BiC,IAC9B0F,+sIAAY4H,sCACZ5H,+sIAAY4H,qCAAqCC,SAAjD,OACExP,SADF,IACEA,QADF,EACEA,GAA8BiC,IAE9B,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,UAJhB,UAOM,OAAHtM,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWmN,YAAa,KAG3B,+BAGa,OAAdhR,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,SAAsB0K,UACrB,eAAC,IAAD,CACEa,MAAM,SACNrB,KAAK,QACLV,MAAO,CACLgC,WAAY,SACZY,YACkC,KAA7B,OAAHlN,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWoN,kBACP,UAEE,eADY,OAAdjR,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OAC5B,UACA,eAXV,SAcE,eAAC,IAAD,CACErJ,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBACPtM,GAAoB,CAClBH,MAAM,EACNC,KAAM,SACNsP,eAAgBnO,KAPtB,0BAeF,+BAGDjD,IAAqC,cAAT,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAC7B,uCACE,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,UACiBA,EAAKc,YADtB,OACiB,EAAW2H,OACxB,UACA,eATV,UAYM,OAAHzI,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiM,iBAAkB,KAEhC,eAAC,IAAD,CACE/B,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eATV,UAYM,OAAHzI,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAWkM,yBAA0B,QAI1C,+BAGF,eAAC,IAAD,CACEX,MAAM,SACNrB,KAAK,QACLV,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eATV,SAYE,gBAAC,IAAD,CACE+B,UAAW,MACXE,WAAY,SACZ0D,eAAgB,SAChB3D,QAAS,EAJX,UAME,eAAC,IAAD,CACErL,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBACPgD,aACEpR,GACAC,GACA8C,EACAxC,GACAE,GACA,SAGJ6N,WACE,OAAChP,SAAD,IAACA,IAAD,WAACA,GAAM+Q,YAAN,OACCvQ,SADD,IACCA,QADD,EACCA,GAAcuR,uBADhB,mBAAC,GAEEd,yBAFH,QAAC,GAEqBd,SAFrB,OAGCzP,SAHD,IAGCA,QAHD,EAGCA,GAAgBkC,KAjBtB,SAqBE,eAAC,IAAD,CAASoP,KAAM,kBAGjB,eAAC,IAAD,CACEnP,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBACPgD,aACEpR,GACAC,GACA8C,EACAxC,GACAE,GACA,aAGJ6N,WACE,OAAChP,SAAD,IAACA,IAAD,WAACA,GAAM+Q,YAAN,OACCvQ,SADD,IACCA,QADD,EACCA,GAAcuR,uBADhB,mBAAC,GAEEd,yBAFH,QAAC,GAEqBd,SAFrB,OAGCzP,SAHD,IAGCA,QAHD,EAGCA,GAAgBkC,KAjBtB,SAqBE,eAAC,IAAD,CAASoP,KAAM,6BAKN,OAAdtR,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,WAAsBqK,8BACrB,eAAC,IAAD,CACEH,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eATV,SAYqC,eAA/B,OAAHzI,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAW0N,oBACV,eAAC,IAAD,wBACoC,WAA/B,OAAHxO,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAW0N,oBACb,gBAAC,IAAD,CAAO/D,QAAS,EAAGD,UAAW,MAA9B,UACE,eAAC,IAAD,CAASjJ,MAAK,OAAEvB,QAAF,IAAEA,GAAF,WAAEA,EAAKc,YAAP,cAAE,GAAW2N,oBAA3B,SACE,eAAC,IAAD,8BAGF,eAAC,IAAD,CACErP,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBAAMhE,GAAYrH,IAH7B,6BASF,eAAC,IAAD,CACEZ,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBAAMhE,GAAYrH,IAH7B,sBAUJ,+BAGW,OAAZjD,SAAY,IAAZA,OAAcoC,IAA2B,aAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IACjC,uCACE,eAAC,IAAD,CACE6L,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eATV,SAYE,eAAC,IAAD,CACEnN,MAAOyI,QACF,OAAH/D,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAW4N,YAAa,GACxB5H,QAAQ,GACV6H,YAAa,OACbC,mBAAmB,MAGvB,eAAC,IAAD,CACE5D,KAAK,QACLqB,MAAM,SACN/B,MAAO,CAAEgC,WAAY,UAHvB,SAKE,eAAC,IAAD,CACEhR,MAAOyI,QACF,OAAH/D,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAW+N,cAAe,GAC1B/H,QAAQ,GACV6H,YAAa,OACbC,mBAAmB,SAKzB,+BAGF,eAAC,IAAD,CACE5D,KAAK,QACLqB,MAAM,SACN/B,MAAO,CACLgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eATV,SAYE,eAAC,IAAD,CACEnN,MAAOyI,QAAU,OAAH/D,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAWqI,WAAY,GAAGrC,QAAQ,GAChD6H,YAAa,OACbC,mBAAmB,MAKrB,eADa,OAAd3R,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBACe,iBAAT,OAAZ5P,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAC7B,eAAC,IAAD,CACEkN,MAAM,SACNrB,KAAK,QACLV,MAAO,CACL4C,WAAe,OAAHlN,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,WAAW2H,OACnB,UACA,eANR,SASM,OAAHzI,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,WAAW2H,OACV,eAAC,IAAD,CACErJ,QAAQ,YACRiM,QAAS,kBAAM/C,IAAU,EAAD,OAAQtI,QAAR,IAAQA,OAAR,EAAQA,EAAKb,KACrCiM,MAAM,UAHR,yBAQA,eAAC,IAAD,CACEhM,QAAQ,YACRiM,QAAS,kBAAM/C,IAAU,EAAD,OAAOtI,QAAP,IAAOA,OAAP,EAAOA,EAAKb,KACpCiM,MAAM,UAHR,oBAUJ,gCAGW,OAAZrO,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KAA2B,cAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACjC,eAAC,IAAD,CACEkN,MAAM,SACNrB,KAAK,QACLV,MAAO,CACL4C,WAEK,OAAHlN,QAAG,IAAHA,KAAKc,MAAL,OAAad,QAAb,IAAaA,GAAb,WAAaA,EAAKc,YAAlB,QAAa,GAAWI,oBACpB,UACA,cACNoL,WAAY,UAThB,SAYM,OAAHtM,QAAG,IAAHA,KAAKc,MAAL,OAAad,QAAb,IAAaA,GAAb,WAAaA,EAAKc,YAAlB,QAAa,GAAWI,oBAAxB,8BACmBlB,QADnB,IACmBA,GADnB,WACmBA,EAAKc,YADxB,cACmB,GAAW6E,oBAC3B,mBAIK,OAAZ5I,SAAY,IAAZA,OAAcoC,IAA2B,cAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IACjC,eAAC,IAAD,CACEkN,MAAM,SACNrB,KAAK,QACLV,MAAO,CAILgC,WAAY,SACZY,WAEI,eADY,OAAdjQ,SAAc,IAAdA,IAAA,WAAAA,GAAgB6D,YAAhB,iBAAsB6L,mBAAtB,OACiB3M,QADjB,IACiBA,GADjB,WACiBA,EAAKc,YADtB,QACiB,GAAW2H,OACxB,UACA,eAZV,SAeE,eAAC,IAAD,CACErJ,QAAQ,YACRgM,MAAM,UACNC,QAAS,WACP5M,GAAwB,CACtBU,GAAE,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAKb,GACT2B,KAAK,eAAD,OAAOd,QAAP,IAAOA,OAAP,EAAOA,EAAKc,QAElBzC,IAA6B,IAE/BkN,UACK,OAAHvL,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,iBAAWI,sBACVnF,IAAYC,GAZjB,uBAkBY,OAAZe,SAAY,IAAZA,QAAcoC,IACM,iBAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,KACQ,aAAT,OAAZpC,SAAY,IAAZA,QAAA,EAAAA,GAAcoC,IAchB,+BAbA,eAAC,IAAD,CACEkN,MAAM,SACNrB,KAAK,QACLV,MAAO,CACL4C,WAAe,OAAHlN,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,WAAWuC,oBACnB,UACA,cACJiJ,WAAY,UAPhB,SAUM,OAAHtM,QAAG,IAAHA,GAAA,WAAAA,EAAKc,YAAL,WAAWuC,oBAAsB,MAAQ,SAtiBjCwJ,GA6iBL,6CAO1B,eAAC,IAAD,CAAM1C,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACIzM,IAA+C,KAAb,OAAfA,SAAe,IAAfA,QAAA,EAAAA,GAAiB+C,QAGpC,GAFA,eAAC,IAAD,CAAOmO,SAAS,UAAhB,4CAMJ,gBAAC,IAAD,CAAQlQ,KAAMV,GAAkB6Q,SAAU,KAAM7C,WAAS,EAAzD,UACE,eAAC,IAAD,4BAAoC,OAAZnP,SAAY,IAAZA,QAAA,EAAAA,GAAcwE,QAAS,MAC/C,eAAC,IAAD,UACE,eAAC,IAAD,CAAMmK,WAAS,EAACjB,QAAS,EAAzB,SACE,eAAC,UAAD,CACEuE,OAAQ,SACR/L,wBAAyBA,SAI/B,eAAC,IAAD,UACE,eAAC,IAAD,CACE7D,QAAQ,YACRgM,MAAM,QACNC,QAAS,kBAAMpI,IAAwB,IAHzC,wBAUJ,gBAAC,IAAD,CAAQrE,KAAMR,GAA0B2Q,SAAU,KAAM7C,WAAS,EAAjE,UACE,eAAC,IAAD,6CACA,eAAC,IAAD,UACE,eAAC,IAAD,CAAMR,WAAS,EAACjB,QAAS,EAAzB,SACE,eAAC,IAAD,CAAMN,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAWlL,GAAG,iCAAd,8BAGA,gBAAC,IAAD,CACE,kBAAgB,iCAChB2O,KAAK,sBACLxS,MAAOgD,GACPsM,SAAU,SAACkB,GAAD,OAAOvN,GAAoBuN,EAAEuB,OAAO/R,QAJhD,UAME,eAAC,IAAD,CACEA,MAAM,UACN2T,QAAS,eAAC,IAAD,IACTtE,MAAM,YAER,eAAC,IAAD,CACErP,MAAM,cACN2T,QAAS,eAAC,IAAD,IACTtE,MAAM,4BAOlB,gBAAC,IAAD,WACE,eAAC,IAAD,CACEvL,QAAQ,YACRgM,MAAM,UACNC,QAAS,kBA1zElB,2CA0zEwB6D,IAHjB,qBAOA,eAAC,IAAD,CACE9P,QAAQ,YACRgM,MAAM,QACNC,QAAS,kBAAMhN,IAA6B,IAH9C,yBAsBJ,eAAC,WAAD,CAAU8Q,SAAU,+BAApB,SACE,eAACvT,GAAD,CACEgD,KAAI,OAAEE,SAAF,IAAEA,QAAF,EAAEA,GAAiBF,KACvBwQ,MAAO,kBACLrQ,GAAoB,CAClBH,MAAM,EACNC,KAAM,MAGVC,gBAAiBA,GACjBuQ,kBA/iDkB,SAACxQ,EAAMsP,EAAgBmB,GAAa,IAAD,UAG3D,GAFA7S,GAAS4C,aAAW,IAEhB,OAACnC,SAAD,IAACA,IAAD,UAACA,GAA8B4D,YAA/B,OAAC,EAAoCgN,KAGlC,GAAI,OAAC5Q,SAAD,IAACA,IAAD,UAACA,GAA8B4D,YAA/B,OAAC,EAAoCgN,KAGzC,GAAI,OAAC5Q,SAAD,IAACA,IAAD,UAACA,GAA8B4D,YAA/B,OAAC,EAAoC6D,MAGzC,GAAI,OAACzH,SAAD,IAACA,OAA8B4D,KAAK6D,MAGxC,GAAI,OAAC1H,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,OAAC,EAAsByO,WAG3B,GAAI,OAACtS,SAAD,IAACA,IAAD,UAACA,GAAgB6D,YAAjB,OAAC,EAAsB0O,YAG3B,CACL,IAAIC,EAAmB,GAEV,WAAT5Q,EACF4Q,EAAiBtO,KAAjB,eAA2BgN,IAE3BsB,EAAmB7R,GAAgBwK,QACjC,SAACqD,GAAD,OAAiC,IAApBA,EAAQrK,WAIzB,IAAMsO,EAAW,GACjBD,EAAiB7O,SAAQ,SAACZ,GACxB0P,EAASvO,KACP,IAAIa,QAAJ,uCAAY,WAAOC,GAAP,4IAAAhD,EAAA,6DACJ0Q,GAAU,CACdC,iBAAkB,CAChBzQ,GACgB,OAAdlC,SAAc,IAAdA,OAAgBkC,IAA6B,MAAT,OAAdlC,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,IAAtC,OACIlC,SADJ,IACIA,QADJ,EACIA,GAAgBkC,GAChB,GACN2B,KAAK,eAAD,OACC7D,SADD,IACCA,QADD,EACCA,GAAgB6D,OAGvB+O,gBAAiB,CACf/O,KAAK,eAAD,OACC5D,SADD,IACCA,QADD,EACCA,GAA8B4D,OAGrCgP,WAAY,CACVxL,UAAa,OAAHtE,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWwD,WAAY,GACjCC,SAAY,OAAHvE,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWyD,UAAW,GAC/BwI,gBAAmB,OAAH/M,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiM,iBAAkB,GAC7CC,wBAA2B,OAAHhN,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWkM,yBAA0B,GAC7D+C,WAAc,OAAH/P,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiP,YAAa,GACnCC,WAAc,OAAHhQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWkP,YAAa,GACnCC,sBAAyB,OAAHjQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWmP,uBAAwB,GACzDC,QACExG,IAAM,OAAC1J,QAAD,IAACA,GAAD,UAACA,EAAKc,YAAN,aAAC,EAAW0D,QAAQqJ,UAAUlE,OAAO,eAC3C,GACFwG,gBAAmB,OAAHnQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiE,iBAAkB,GAC7CqL,UAAa,OAAHpQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWqI,WAAY,EACjCkH,eAAkB,OAAHrQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWuD,YAAa,GACvCiM,WAAc,OAAHtQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW4N,YAAa,EACnC6B,aAAgB,OAAHvQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW+N,cAAe,EACvC3F,eAAkB,OAAHlJ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWoI,gBAAiB,GAG3CsH,aAAgB,OAAHxQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW0P,cAAe,GACvCC,aAAgB,OAAHzQ,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW2P,cAAe,GACvCC,oBAAuB,OAAH1Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW4P,qBAAsB,GACrDC,aAAgB,OAAH3Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW6P,cAAe,GACvCC,gBAAmB,OAAH5Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW8P,iBAAkB,GAC7CC,gBAAmB,OAAH7Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW+P,iBAAkB,GAC7CC,WAAc,OAAH9Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWgQ,YAAa,GACnCC,kBAAqB,OAAH/Q,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiQ,mBAAoB,GACjDC,QAAW,OAAHhR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWkQ,SAAU,GAC7BC,eAAkB,OAAHjR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWmQ,gBAAiB,GAC3CC,QAAW,OAAHlR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWoQ,SAAU,GAC7BC,mBAAsB,OAAHnR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWqQ,oBAAqB,GAGnDC,qBAAwB,OAAHpR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWsQ,sBAAuB,GACvDC,uBAA0B,OAAHrR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWuQ,wBAAyB,GAG3DpD,WAAc,OAAHjO,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWmN,YAAa,GACnCqD,eAAkB,OAAHtR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWwQ,gBAAiB,GAC3CC,gBAAmB,OAAHvR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWyQ,iBAAkB,GAC7CC,gBAAmB,OAAHxR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW0Q,iBAAkB,GAC7CC,cAAiB,OAAHzR,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW2Q,eAAgB,GACzCC,eAAkB,OAAH1R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW4Q,gBAAiB,GAC3CC,eAAkB,OAAH3R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW6Q,gBAAiB,GAC3CC,aAAgB,OAAH5R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW8Q,eAAe,EAGvCC,YAAe,OAAH7R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAW+Q,aAAc,GACrCC,YAAe,OAAH9R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWgR,aAAc,GACrCC,cAAiB,OAAH/R,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWiR,eAAgB,GACzCC,QAAW,OAAHhS,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWkR,SAAU,GAC7BC,UAAa,OAAHjS,QAAG,IAAHA,GAAA,UAAAA,EAAKc,YAAL,eAAWmR,WAAY,IAEnCzU,KAAMA,IAAQ,GACdE,SAAUA,IAAY,IAGpBwU,GAAY,GAChB,OAAIlS,QAAJ,IAAIA,GAAJ,UAAIA,EAAKc,YAAT,iBAAI,EAAWqR,2BAAf,OAAI,EAAgCC,qBAC9BC,GADkD,OAEpDrS,QAFoD,IAEpDA,GAFoD,WAEpDA,EAAKc,YAF+C,mBAEpD,GAAWqR,2BAFyC,mBAEpD,GAAgCC,mBAAmB,UAFC,cAEpD,GAAuDC,OAGnDC,GALgD,qCAKRD,IAE9CH,GAAYI,IAGRC,GACuC,eAA7B,OAAdtV,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,eAAsB6L,kBACpB,eAAC,KAAD,CACEiD,iBAAkBD,GAAQC,iBAC1BC,gBAAiBF,GAAQE,gBACzBC,WAAYH,GAAQG,WACpBtS,KAAMmS,GAAQnS,KACdE,SAAUiS,GAAQjS,WAGpB,eAAC,KAAD,CAEE8U,kBACE,OAEAvV,SAFA,IAEAA,QAAgBkC,KAChB0F,2BAA2D6H,SAA3D,OACEzP,SADF,IACEA,QADF,EACEA,GAAgBkC,KAMpBsT,eACgB,OAAdxV,SAAc,IAAdA,IAAA,UAAAA,GAAgB6D,YAAhB,mBAAsBsL,uBAAtB,SAAuC9Q,OAAvC,OACAqU,SADA,IACAA,IADA,UACAA,GAASG,kBADT,kBACA,EAAqBhP,YADrB,QACA,GAA2B4R,oBAI7B9C,iBAAkBD,GAAQC,iBAC1BC,gBAAiBF,GAAQE,gBACzBC,WAAYH,GAAQG,WACpBtS,KAAMmS,GAAQnS,KACdE,SAAUiS,GAAQjS,SAClBwU,UAAWA,IAAa,KAtHpB,SA0HUS,eAAIJ,IAAsBK,SA1HpC,YA0HNC,GA1HM,0CA6HiB,IAAI7Q,SAAQ,SAACC,GACpC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,cAAcyQ,IAErB3Q,EAAOG,UAAP,sBAAmB,8BAAApD,EAAA,sDACb6T,EAAe5Q,EAAOK,OACtBwQ,EAAUD,EAAarT,MAAM,KACjCwC,EAAQ8Q,EAAQ,IAHC,8CAjIb,SA6HJC,GA7HI,SAyIN/Q,EAAQ+Q,IAzIF,4CAAZ,2DAgJJhR,QAAQiR,IAAIvD,GAAUnP,MAAK,SAAC2S,GAAa,IAAD,oBAClCC,EAAoB,GACpBC,EAA2B,GAC3BC,EAA8B,GAClC5D,EAAiB7O,SAAQ,SAAC6K,GAAa,IAAD,IAMpC,GALA0H,GACmB,mBAAQ1H,QAAR,IAAQA,GAAR,UAAQA,EAAS3K,YAAjB,aAAQ,EAAeuD,UAAvB,OACnB+O,GAC0B,kBAAO3H,QAAP,IAAOA,GAAP,UAAOA,EAAS3K,YAAhB,aAAO,EAAeuD,UAAtB,MAER,OAAdpH,SAAc,IAAdA,QAAA,EAAAA,GAAgBkC,MAAO0F,+sIAAY0H,2BAA4B,CAAC,IAAD,IAC7D+G,EAAe,GACbC,GAAqB,OAAP9H,QAAO,IAAPA,GAAA,UAAAA,EAAS3K,YAAT,eAAeiE,iBAAkB,GACrD,IAAe,OAAXwO,QAAW,IAAXA,OAAA,EAAAA,EAAa5S,QAAS,EAAG,CAC3B,IAAM6S,EAAqBD,EAAYpP,MACrC,SAAC4J,GAAD,MAAqC,eAArBA,EAAWxM,SAEzBiS,IACFF,EAAeE,EAAmBxF,cAItCqF,GAC6B,mBACtB5H,QADsB,IACtBA,GADsB,UACtBA,EAAS3K,YADa,aACtB,EAAeuD,UADO,0BACoBiP,EADpB,YAKjC,IAEgD,EAGA,EAGA,EAR5CG,GAAsC,OAA5BvW,SAA4B,IAA5BA,IAAA,UAAAA,GAA8B4D,YAA9B,eAAoC6D,QAAS,GAE3D,OAAIzH,SAAJ,IAAIA,IAAJ,UAAIA,GAA8B4D,YAAlC,OAAI,EAAoC4S,SACtCD,GAAiB,kBAAOvW,SAAP,IAAOA,IAAP,UAAOA,GAA8B4D,YAArC,aAAO,EAAoC4S,SAE9D,OAAIxW,SAAJ,IAAIA,IAAJ,UAAIA,GAA8B4D,YAAlC,OAAI,EAAoC6S,SACtCF,GAAiB,kBAAOvW,SAAP,IAAOA,IAAP,UAAOA,GAA8B4D,YAArC,aAAO,EAAoC6S,SAE9D,OAAIzW,SAAJ,IAAIA,IAAJ,UAAIA,GAA8B4D,YAAlC,OAAI,EAAoC8S,SACtCH,GAAiB,kBAAOvW,SAAP,IAAOA,IAAP,UAAOA,GAA8B4D,YAArC,aAAO,EAAoC8S,SAG9D,IAUkE,EAQ3D,EAlBHC,EAAkB,CACpBC,UAAS,OAAE7W,SAAF,IAAEA,IAAF,UAAEA,GAAgB6D,YAAlB,aAAE,EAAsBgN,KACjCiG,QAAO,OAAE7W,SAAF,IAAEA,IAAF,UAAEA,GAA8B4D,YAAhC,aAAE,EAAoCgN,KAC7CkG,WAAU,OAAE/W,SAAF,IAAEA,IAAF,UAAEA,GAAgB6D,YAAlB,aAAE,EAAsB6D,MAClCsP,SAAUR,EACVS,SAAQ,OAAEjX,SAAF,IAAEA,IAAF,UAAEA,GAAgB6D,YAAlB,aAAE,EAAsB6D,MAChCwP,SAAS,GAAD,cAAKpX,SAAL,IAAKA,QAAL,EAAKA,GAAcwE,MAAnB,QACRoO,QAASuD,GAGPjW,GAAekC,KAAO0F,+sIAAY0H,2BACpCsH,EAAe,2BACVA,GADU,IAEbO,cAAehB,GAA4B,GAC3CC,4BAA6BA,EAC7BgB,QAAQ,GAAD,cAAKtX,SAAL,IAAKA,QAAL,EAAKA,GAAcwE,MAAnB,YAA4B6R,EAA5B,wBAA6DnW,SAA7D,IAA6DA,IAA7D,UAA6DA,GAAgB6D,YAA7E,aAA6D,EAAsBgN,MAC1F/Q,aAAY,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAcwE,QAG9BsS,EAAe,2BACVA,GADU,IAEbS,eAAgBnB,EAChBE,4BAA6BF,EAC7BkB,QAAQ,GAAD,cAAKtX,SAAL,IAAKA,QAAL,EAAKA,GAAcwE,MAAnB,wBAAiCtE,SAAjC,IAAiCA,IAAjC,UAAiCA,GAAgB6D,YAAjD,aAAiC,EAAsBgN,MAC9D/Q,aAAY,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAcwE,QAIhC,GAAI+N,EAAS,CACX,IAAMiF,EAAoBjF,EAAQ7P,MAAM,KACpC+U,EAAQ,GACZ,IAAqB,OAAjBD,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB5T,QAAS,EAC9B,IAAK,IAAI8T,EAAI,EAAGA,GAAC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAmB5T,QAAQ8T,IAC7CD,EAAQA,EAAQD,EAAkBE,GAAK,KAI3CZ,EAAe,2BACVA,GADU,IAEbvE,QAASkF,IAIbE,KACGC,KADH,OAEI1X,SAFJ,IAEIA,IAFJ,UAEIA,GAAgB6D,YAFpB,aAEI,EAAsByO,WAF1B,OAGItS,SAHJ,IAGIA,IAHJ,UAGIA,GAAgB6D,YAHpB,aAGI,EAAsB0O,YAH1B,eAKSqE,GAELhP,qBAEDtE,KATH,sBAUI,4BAAAtB,EAAA,sDACE,OAAIH,SAAJ,IAAIA,OAAiBF,MACnBG,GAAoB,CAClBH,MAAM,EACNC,KAAM,GACNsP,eAAgB,OAIdyG,EAAoB,GAC1BnF,EAAiB7O,SAAQ,SAACZ,GACxB4U,EAAkBzT,KAChB,IAAIa,QAAJ,uCAAY,WAAO6S,GAAP,SAAA5V,EAAA,sEACJa,IACHC,WAAW,WACXC,IAFG,OAEC/C,SAFD,IAECA,QAFD,EAECA,GAAgBkC,IACpBY,WAHG,OAGQhD,SAHR,IAGQA,QAHR,EAGQA,GAAcoC,IACzBa,IAJG,OAICA,QAJD,IAICA,OAJD,EAICA,EAAKb,IACToG,IAAI,CAAE2I,kBAAkB,GAAQ,CAAE1I,OAAO,IACzCjF,MAAK,WACJsU,GAAiB,MARX,2CAAZ,2DAcJ7S,QAAQiR,IAAI2B,GAAmBrU,MAAK,WAClC5D,GAAgB,0BAA2B,CACzCyC,QAAS,YAGXJ,KAEAvC,GAAS4C,aAAW,OAjCxB,4CAoCA,SAAC0H,GACCpK,GAAgB,oCAAD,OACuBoK,EAAM+N,MAC1C,CACE1V,QAAS,UAGb3C,GAAS4C,aAAW,eAxS5B1C,GAAgB,0BAA2B,CAAEyC,QAAS,UACtD3C,GAAS4C,aAAW,SAJpB1C,GAAgB,yBAA0B,CAAEyC,QAAS,UACrD3C,GAAS4C,aAAW,SAJpB1C,GAAgB,gCAAiC,CAAEyC,QAAS,UAC5D3C,GAAS4C,aAAW,SAJpB1C,GAAgB,0BAA2B,CAAEyC,QAAS,UACtD3C,GAAS4C,aAAW,SAJpB1C,GAAgB,+BAAgC,CAAEyC,QAAS,UAC3D3C,GAAS4C,aAAW,SAJpB1C,GAAgB,yBAA0B,CAAEyC,QAAS,UACrD3C,GAAS4C,aAAW","file":"static/js/48.c39997a3.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import { Suspense, useEffect, useRef, useState, lazy } from \"react\";\n// @mui\nimport {\n  Alert,\n  Autocomplete,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db, { functions } from \"../../firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport firebase from \"firebase/compat\";\nimport moment from \"moment\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { DatePicker } from \"@mui/lab\";\nimport {\n  selectDocument,\n  setUpdateDocumentData,\n} from \"../../features/documentSlice\";\nimport DocumentInputDetails from \"../document/DocumentInputDetails\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Iconify from \"../Iconify\";\nimport CurrencyFormat from \"react-currency-format\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { handleViewDownload } from \"../core-functions/SelectionCoreFunctions\";\nimport emailjs from \"@emailjs/browser\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport InvTransportTemplatePdf from \"../invoice-pdf/transport-custom/InvTransportTemplatePdf\";\nimport InvPdf from \"../invoice-pdf/InvPdf\";\n\nconst CCDialog = lazy(() => import(\"./CCDialog\"));\n\n/* const PdfDialog = lazy(() => import(\"./pdf-dialog/PdfDialog\")); */\n\n// ----------------------------------------------------------------------\n\nexport default function InvViewDetails({\n  viewOnly,\n  searchAndChoose,\n  chooseDocument,\n}) {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  const { user } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const {\n    documentType,\n    companyIdSelected,\n    companyDetails,\n    clientDocumentObjectSelected,\n  } = useSelector(selectDocument);\n\n  /*   const [openPdf, set_openPdf] = useState(false); */\n\n  /*   const [pdfContent, set_pdfContent] = useState(null);\n\n  const [downloadPdf, set_downloadPdf] = useState(false); */\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [logo, setLogo] = useState(\"\");\n\n  const [sigImage, setSigImage] = useState(\"\");\n\n  const [us_documentlist, set_us_documentlist] = useState([]);\n\n  const temp_logo_image_ref = useRef();\n\n  const temp_signature_image_ref = useRef();\n\n  const temp_fetch_document_ref = useRef();\n\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n\n  const [us_open_convertTo_dialog, set_us_open_convertTo_dialog] =\n    useState(false);\n\n  const [conversionValue, set_conversionValue] = useState(\"vat_invoice\");\n\n  const [selectedProformaDoc, set_selectedProformaDoc] = useState(null);\n\n  const [selectedProformaFilter, set_selectedProformaFilter] = useState(null);\n\n  const [us_openCCDialog, set_us_openCCDialog] = useState({\n    open: false,\n    type: \"\",\n  });\n\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  useEffect(() => {\n    // convert logo image to adaptable react-pdf image\n    temp_logo_image_ref.current();\n    // convert signature image to adaptable react-pdf image\n    temp_signature_image_ref.current();\n  }, [companyDetails]);\n\n  useEffect(() => {\n    temp_fetch_document_ref.current();\n  }, [\n    documentType,\n    us_fromDate,\n    us_ToDate,\n    companyDetails,\n    clientDocumentObjectSelected,\n  ]);\n\n  async function fetchDocument() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\" &&\n      documentType?.id &&\n      documentType?.id !== \"\"\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else if (\n        companyDetails !== undefined &&\n        clientDocumentObjectSelected !== undefined\n      ) {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(documentType?.id)\n          .where(\n            \"docDate\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"docDate\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let docArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((document) => {\n                // filter by client selected\n                if (\n                  document?.data()?.clientId ===\n                    clientDocumentObjectSelected?.id &&\n                  !document?.data()?.deleted\n                ) {\n                  let valid = true;\n                  if (\n                    documentType?.id === \"proforma\" &&\n                    document?.data()?.isProformaConverted\n                  ) {\n                    valid = false;\n                  }\n\n                  if (valid) {\n                    docArray.push({\n                      id: document?.id,\n                      data: document?.data(),\n                      checked: false,\n                    });\n                  }\n                }\n              });\n              set_us_documentlist(docArray);\n            } else {\n              set_us_documentlist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching ${documentType?.title} documents: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_document_ref.current = fetchDocument;\n\n  async function getLogoImage() {\n    if (\n      companyDetails?.data?.imageUrl &&\n      companyDetails?.data?.imageUrl !== \"\"\n    ) {\n      dispatch(setLoading(true));\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      setLogo(logoImage);\n    }\n  }\n\n  temp_logo_image_ref.current = getLogoImage;\n\n  async function getSignatureImage() {\n    if (companyDetails?.data?.sigUrl && companyDetails?.data?.sigUrl !== \"\") {\n      dispatch(setLoading(true));\n      let sigImage = await toDataUrl(companyDetails?.data?.sigUrl);\n      setSigImage(sigImage);\n    }\n  }\n\n  temp_signature_image_ref.current = getSignatureImage;\n\n  async function toDataUrl(url) {\n    if (url === \"\") {\n      return \"\";\n    } else {\n      try {\n        const data = await fetch(url);\n        const blob = await data.blob();\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  /*   async function applyVoid(voidBool, invoiceId) {\n    if (documentType?.id === \"vat_invoice\" || documentType?.id === \"invoice\") {\n      dispatch(setLoading(true));\n      await db\n        .collection(\"company\")\n        .doc(companyDetails?.id)\n        .collection(documentType?.id)\n        .doc(invoiceId)\n        .set({ isVoid: voidBool }, { merge: true })\n        .then(async () => {\n          await fetchDocument();\n          enqueueSnackbar(`${documentType?.title} updated successfully`, {\n            variant: \"success\",\n          });\n          dispatch(setLoading(false));\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while updating void: ${err?.message}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n        });\n    }\n  } */\n\n  const handleCloseUpdateDialog = (isUpdateDone) => {\n    dispatch(setUpdateDocumentData(undefined));\n    setOpenUpdateDialog(false);\n\n    if (isUpdateDone) {\n      fetchDocument();\n    }\n  };\n\n  async function confirmConversion() {\n    if (conversionValue) {\n      dispatch(setLoading(true));\n\n      // update status of proforma to \"converted to Invoice or vatInvoice\"\n      let invoiceDocumentData = {\n        ...selectedProformaDoc?.data,\n        createdFromProfroma: true,\n        previousProformaDocId: selectedProformaDoc?.id,\n      };\n\n      var documentDocRef = db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(conversionValue)\n        .doc(\"documentIndex\");\n\n      db.runTransaction((transaction) => {\n        return transaction.get(documentDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            // throw \"Document does not exist!\";\n            transaction.update(documentDocRef, {\n              documentIndex: 1,\n            });\n            return 1;\n          }\n\n          var newDocumentNumber = Number(sfDoc.data().documentIndex) + 1;\n          transaction.update(documentDocRef, {\n            documentIndex: newDocumentNumber,\n          });\n          return newDocumentNumber;\n        });\n      })\n        .then(async (newDocumentNumber) => {\n          let documentNumber = newDocumentNumber.toString();\n          if (documentNumber?.length === 1) {\n            documentNumber = `0000${documentNumber}`;\n          } else if (documentNumber?.length === 2) {\n            documentNumber = `000${documentNumber}`;\n          } else if (documentNumber?.length === 3) {\n            documentNumber = `00${documentNumber}`;\n          } else if (documentNumber?.length === 4) {\n            documentNumber = `0${documentNumber}`;\n          }\n\n          const documents = [\n            {\n              id: \"quotation\",\n              title: \"Quotation\",\n            },\n            {\n              id: \"invoice\",\n              title: \"Invoice\",\n            },\n            {\n              id: \"vat_invoice\",\n              title: \"VAT Invoice\",\n            },\n            {\n              id: \"purchase_order\",\n              title: \"Purchase order\",\n            },\n            {\n              id: \"proforma\",\n              title: \"Proforma\",\n            },\n          ];\n\n          let documentTitle = documents.find(\n            (doc) => doc?.id === conversionValue\n          )?.title;\n\n          const newDocumentData = {\n            ...invoiceDocumentData,\n            id: newDocumentNumber.toString(),\n            docString: documentNumber,\n            docTitle: documentTitle,\n            docType: conversionValue,\n            docDate: firebase.firestore.Timestamp.fromDate(new Date()),\n            convertedByUserId: user?.id || \"\",\n            convertedByUserEmail: user?.email || \"\",\n            convertedByUserTime: new Date(),\n          };\n\n          // smart promote\n          // update all transactions list\n          if (\n            companyDetails?.id === process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID\n          ) {\n            invoiceDocumentData.docParticulars.forEach(async (row) => {\n              if (row?.inventoryItemData) {\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(\"inventory\")\n                  .doc(row?.inventoryItemData?.id)\n                  .get()\n                  .then(async (itemData) => {\n                    if (itemData.exists) {\n                      let allInventoryItemTransactions =\n                        itemData?.data()?.allInventoryItemTransactions || [];\n\n                      // find proforma index\n                      let newAllInventoryItemTransactions = [\n                        ...(allInventoryItemTransactions || []),\n                      ];\n                      let proformaIndex =\n                        allInventoryItemTransactions.findIndex(\n                          (transaction) =>\n                            transaction?.docType === \"proforma\" &&\n                            transaction?.docString === selectedProformaDoc?.id\n                        );\n\n                      if (proformaIndex > -1) {\n                        newAllInventoryItemTransactions[proformaIndex] = {\n                          ...newAllInventoryItemTransactions[proformaIndex],\n                          documentNumber: newDocumentNumber.toString(),\n                          docString: documentNumber,\n                          docTitle: documentTitle,\n                          docType: conversionValue,\n                          docDate: firebase.firestore.Timestamp.fromDate(\n                            new Date()\n                          ),\n                          docDate: new Date(),\n                          profomaConverted: true,\n                          previousProformaNumber: selectedProformaDoc?.id,\n                        };\n\n                        await db\n                          .collection(\"company\")\n                          .doc(companyDetails?.id)\n                          .collection(\"inventory\")\n                          .doc(row?.inventoryItemData?.id)\n                          .set(\n                            {\n                              allInventoryItemTransactions:\n                                newAllInventoryItemTransactions || [],\n                            },\n                            { merge: true }\n                          );\n                      }\n                    }\n                  });\n              }\n            });\n          }\n\n          // save new invoice/Vat invoice document\n          await db\n            .collection(\"company\")\n            .doc(companyIdSelected)\n            .collection(conversionValue)\n            .doc(documentNumber.toString())\n            .set(\n              {\n                ...newDocumentData,\n              },\n              { merge: true }\n            )\n            .then(async () => {\n              enqueueSnackbar(\n                `New ${documentTitle} document has been created successfully`\n              );\n\n              // apply full payment for smart promote\n              if (\n                companyIdSelected ===\n                process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID\n              ) {\n                await applyPayment(\n                  {\n                    id: documentNumber.toString(),\n                    data: { ...newDocumentData },\n                  },\n                  \"FULL\"\n                );\n              }\n\n              //update proforma document status\n              dispatch(setLoading(true));\n              await db\n                .collection(\"company\")\n                .doc(companyIdSelected)\n                .collection(\"proforma\")\n                .doc(selectedProformaDoc?.id)\n                .set(\n                  {\n                    conversionDocId: conversionValue,\n                    conversionDocTitle: documentTitle,\n                    isProformaConverted: true,\n                  },\n                  { merge: true }\n                )\n                .then(() => {\n                  enqueueSnackbar(`Proforma status updated successfully`);\n\n                  // close dialog\n                  set_us_open_convertTo_dialog(false);\n\n                  // reset dialog data\n                  set_conversionValue(\"vat_invoice\");\n                  set_selectedProformaDoc(null);\n\n                  fetchDocument();\n\n                  dispatch(setLoading(false));\n                })\n                .catch((err) => {\n                  enqueueSnackbar(\n                    `Error occured while updating proforma status: ${err?.message}`,\n                    { variant: \"error\" }\n                  );\n                  dispatch(setLoading(false));\n                });\n            })\n            .catch((err) => {\n              enqueueSnackbar(\n                `Error occured while saving Invoice: ${err?.message}`,\n                { variant: \"error\" }\n              );\n              dispatch(setLoading(false));\n            });\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while overall Invoice saving transactions: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n        });\n    } else {\n      enqueueSnackbar(`Please choose a conversion type`);\n    }\n  }\n\n  const deleteDocument = async (documentId, data) => {\n    dispatch(setLoading(true));\n\n    // format collection name\n    let deletedCollectionName = `deleted${documentType?.id}`;\n\n    if (\n      companyDetails?.id === process.env.REACT_APP_CUSTOM_SMART_PROMOTE_ID &&\n      (documentType?.id === \"proforma\" ||\n        documentType?.id === \"invoice\" ||\n        documentType?.id === \"vat_invoice\" ||\n        documentType?.id === \"cash_transaction\")\n    ) {\n      // update stock\n      let docParticulars = [...(data?.docParticulars || [])];\n      docParticulars.forEach(async (row) => {\n        if (row?.inventoryItemData) {\n          // get latest stock remaining amount\n          await db\n            .collection(\"company\")\n            .doc(companyDetails?.id)\n            .collection(\"inventory\")\n            .doc(row?.inventoryItemData?.id)\n            .get()\n            .then(async (doc) => {\n              if (doc.exists) {\n                // get previous transactions for that inventory\n                let allInventoryItemTransactionsData =\n                  doc?.data()?.allInventoryItemTransactions || [];\n\n                // check the qty sold for that item with the same doc id\n                let isDocFoundIndex = -1;\n\n                if (allInventoryItemTransactionsData.length > 0) {\n                  isDocFoundIndex = allInventoryItemTransactionsData.findIndex(\n                    (transaction) =>\n                      transaction.docString === documentId &&\n                      transaction?.docType === documentType?.id\n                  );\n                }\n\n                let totalQtySold = Number(doc?.data()?.qtySold || 0);\n                let totalQtyRemaining = Number(doc?.data()?.qtyRemaining || 0);\n\n                let newTotalAmountReceivedWithoutVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithoutVAT || 0\n                );\n\n                let newTotalAmountReceivedWithVAT = Number(\n                  doc?.data()?.totalAmountReceivedWithVAT || 0\n                );\n\n                if (isDocFoundIndex > -1) {\n                  // get the qty Sold\n                  let OldQtySold = Number(\n                    allInventoryItemTransactionsData[isDocFoundIndex]\n                      ?.itemQtySold || 0\n                  );\n\n                  // rebuild total remaining qty\n                  totalQtyRemaining = totalQtyRemaining + OldQtySold;\n\n                  // rebuild qty sold\n                  totalQtySold = totalQtySold - OldQtySold;\n\n                  newTotalAmountReceivedWithoutVAT =\n                    newTotalAmountReceivedWithoutVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowDiscountedAmount ||\n                        allInventoryItemTransactionsData[isDocFoundIndex]\n                          ?.rowAmount ||\n                        0\n                    );\n\n                  newTotalAmountReceivedWithVAT =\n                    newTotalAmountReceivedWithVAT -\n                    Number(\n                      allInventoryItemTransactionsData[isDocFoundIndex]\n                        ?.rowAmountWithVAT || 0\n                    );\n                }\n\n                let allInventoryItemTransactions = [];\n\n                if (isDocFoundIndex > -1) {\n                  // update data if already present\n\n                  allInventoryItemTransactionsData.forEach((transaction) => {\n                    let valid = false;\n                    if (\n                      transaction?.docString === documentId &&\n                      transaction?.docType === documentType?.id\n                    ) {\n                      valid = false;\n                    } else {\n                      valid = true;\n                    }\n\n                    if (valid) {\n                      allInventoryItemTransactions.push({ ...transaction });\n                    }\n                  });\n                }\n\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(\"inventory\")\n                  .doc(row?.inventoryItemData?.id)\n                  .set(\n                    {\n                      totalAmountReceivedWithoutVAT: Number(\n                        newTotalAmountReceivedWithoutVAT || 0\n                      ).toFixed(2),\n                      totalAmountReceivedWithVAT: Number(\n                        newTotalAmountReceivedWithVAT || 0\n                      ).toFixed(2),\n                      qtySold: totalQtySold || 0,\n                      qtyRemaining: totalQtyRemaining || 0,\n                      allInventoryItemTransactions:\n                        allInventoryItemTransactions || [],\n                    },\n                    { merge: true }\n                  )\n                  .then(() => {\n                    enqueueSnackbar(\"Stock updated successfully\");\n                  })\n                  .catch((error) => {\n                    enqueueSnackbar(\n                      `Error occured while updating quantity of inventory item: ${error?.message}`,\n                      { variant: \"error\" }\n                    );\n                  });\n              } else {\n                enqueueSnackbar(\n                  \"Stock could not be updated as item could not be found, please check inventory\",\n                  { variant: \"error\" }\n                );\n              }\n            });\n        }\n      });\n    }\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(deletedCollectionName)\n      .add({\n        deleted: true,\n        deletedByUserId: user?.id,\n        deletedByUserEmail: user?.email,\n        deletedByUserTime: new Date(),\n        id: documentId,\n        ...data,\n      })\n      .then(async () => {\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(documentType?.id)\n          .doc(documentId)\n          .delete()\n          .then(() => {\n            enqueueSnackbar(\"Document deleted successfully\", {\n              variant: \"success\",\n            });\n\n            fetchDocument();\n            dispatch(setLoading(false));\n          })\n          .catch((error) => {\n            enqueueSnackbar(\n              `Error occured while deleting document: ${error?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while deleting document: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  };\n\n  async function uploadToMRA(invoiceData) {\n    if (!invoiceData?.data?.transactionType?.id) {\n      enqueueSnackbar(\"Please choose a type of transaction.\", {\n        variant: \"warning\",\n      });\n    } else if (!companyDetails?.data?.vatOrNonVatRegistered?.id) {\n      enqueueSnackbar(\n        \"Company VAT Registration status is missing, please update company details\",\n        {\n          variant: \"warning\",\n        }\n      );\n    } else if (!invoiceData?.data?.docIssuedDateTime) {\n      enqueueSnackbar(\"Issue date of invoice is missing\", {\n        variant: \"warning\",\n      });\n    } else if (!invoiceData?.data?.invoiceTypeDesc?.id) {\n      enqueueSnackbar(\"Type of Invoice is missing\", {\n        variant: \"warning\",\n      });\n    } else if (\n      (invoiceData?.data?.invoiceTypeDesc?.id === \"DRN\" ||\n        invoiceData?.data?.invoiceTypeDesc?.id === \"CRN\") &&\n      !invoiceData?.data?.invoiceRefIdentifier\n    ) {\n      enqueueSnackbar(\"Invoice number is missing\", {\n        variant: \"warning\",\n      });\n    } else {\n      if (isOnline) {\n        const checkedInvoices = [{ ...invoiceData }];\n\n        const submitMultipleInvoicesToMra = functions.httpsCallable(\n          \"submitmultipleinvoicestomra\"\n        );\n        submitMultipleInvoicesToMra({\n          user: JSON.stringify(user),\n          invoices: JSON.stringify(checkedInvoices),\n          companyIdSelected: companyIdSelected,\n          documentType: JSON.stringify(documentType),\n          brn: companyDetails?.data?.brn,\n          companyDetails: JSON.stringify(companyDetails),\n          clientDocumentObjectSelected: JSON.stringify(\n            clientDocumentObjectSelected\n          ),\n        });\n\n        fetchDocument();\n        dispatch(setLoading(false));\n      } else {\n        enqueueSnackbar(\"You are currently offline.\", { variant: \"error\" });\n        dispatch(setLoading(false));\n      }\n    }\n  }\n\n  async function submitMultipleInvoiceToMRA() {\n    if (!companyDetails?.data?.vatOrNonVatRegistered?.id) {\n      enqueueSnackbar(\n        \"Company VAT Registration status is missing, please update company details\",\n        {\n          variant: \"warning\",\n        }\n      );\n    } else {\n      const checkedInvoices = us_documentlist.filter(\n        (doc) => doc?.checked === true\n      );\n\n      if (checkedInvoices && checkedInvoices.length > 0) {\n        let errorFound = false;\n        checkedInvoices.forEach((invoiceData) => {\n          if (!invoiceData?.data?.transactionType?.id) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}. Please choose a type of transaction.`,\n              {\n                variant: \"warning\",\n              }\n            );\n          } else if (!invoiceData?.data?.docIssuedDateTime) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}. Issued date of invoice is missing`,\n              {\n                variant: \"warning\",\n              }\n            );\n          } else if (!invoiceData?.data?.invoiceTypeDesc?.id) {\n            errorFound = true;\n            enqueueSnackbar(\n              `Error found, inv num ${invoiceData?.data?.docString}.Type of Invoice is missing`,\n              {\n                variant: \"warning\",\n              }\n            );\n          }\n        });\n\n        if (!errorFound) {\n          if (isOnline) {\n            const submitMultipleInvoicesToMra = functions.httpsCallable(\n              \"submitmultipleinvoicestomra\"\n            );\n            submitMultipleInvoicesToMra({\n              user: JSON.stringify(user),\n              invoices: JSON.stringify(checkedInvoices),\n              companyIdSelected: companyIdSelected,\n              documentType: JSON.stringify(documentType),\n              brn: companyDetails?.data?.brn,\n              companyDetails: JSON.stringify(companyDetails),\n              clientDocumentObjectSelected: JSON.stringify(\n                clientDocumentObjectSelected\n              ),\n            });\n\n            fetchDocument();\n            dispatch(setLoading(false));\n          } else {\n            enqueueSnackbar(\"You are currently offline.\", { variant: \"error\" });\n            dispatch(setLoading(false));\n          }\n        }\n      }\n    }\n  }\n\n  const sendMultipleEmail = (type, invoiceContent, ccField) => {\n    dispatch(setLoading(true));\n\n    if (!clientDocumentObjectSelected?.data?.name) {\n      enqueueSnackbar(\"Client name is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data?.name) {\n      enqueueSnackbar(\"Your company name is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data?.email) {\n      enqueueSnackbar(\"Client email is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!clientDocumentObjectSelected?.data.email) {\n      enqueueSnackbar(\"Your company email is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!companyDetails?.data?.serviceKey) {\n      enqueueSnackbar(\"Service key is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else if (!companyDetails?.data?.templateKey) {\n      enqueueSnackbar(\"Template key is missing\", { variant: \"error\" });\n      dispatch(setLoading(false));\n    } else {\n      let selectedInvoices = [];\n\n      if (type === \"single\") {\n        selectedInvoices.push({ ...invoiceContent });\n      } else {\n        selectedInvoices = us_documentlist.filter(\n          (invoice) => invoice.checked === true\n        );\n      }\n\n      const promises = [];\n      selectedInvoices.forEach((doc) => {\n        promises.push(\n          new Promise(async (resolve) => {\n            const content = {\n              companyChosenObj: {\n                id:\n                  companyDetails?.id && companyDetails?.id !== \"\"\n                    ? companyDetails?.id\n                    : \"\",\n                data: {\n                  ...companyDetails?.data,\n                },\n              },\n              clientChosenObj: {\n                data: {\n                  ...clientDocumentObjectSelected?.data,\n                },\n              },\n              invDetails: {\n                docTitle: doc?.data?.docTitle || \"\",\n                docType: doc?.data?.docType || \"\",\n                docQuoteNumber: doc?.data?.docQuoteNumber || \"\",\n                docPurchaseOrderNumber: doc?.data?.docPurchaseOrderNumber || \"\",\n                docBillTo: doc?.data?.docBillTo || \"\",\n                docShipTo: doc?.data?.docShipTo || \"\",\n                docTermsAndCondition: doc?.data?.docTermsAndCondition || \"\",\n                invDate:\n                  moment(doc?.data?.docDate.toDate()).format(\"DD-MM-YYYY\") ||\n                  \"\",\n                invParticulars: doc?.data?.docParticulars || [],\n                invTotal: doc?.data?.docTotal || 0,\n                invoiceString: doc?.data?.docString || \"\",\n                invVatFee: doc?.data?.docVatFee || 0,\n                invSubTotal: doc?.data?.docSubTotal || 0,\n                paymentStatus: doc?.data?.paymentStatus || \"\",\n\n                //custom details\n                docBLNumber: doc?.data?.docBLNumber || \"\",\n                docSupplier: doc?.data?.docSupplier || \"\",\n                docContainerNumber: doc?.data?.docContainerNumber || \"\",\n                docPackages: doc?.data?.docPackages || \"\",\n                docDescription: doc?.data?.docDescription || \"\",\n                docGrossWeight: doc?.data?.docGrossWeight || \"\",\n                docVolume: doc?.data?.docVolume || \"\",\n                docPortOfLoading: doc?.data?.docPortOfLoading || \"\",\n                docETA: doc?.data?.docETA || \"\",\n                docVesselName: doc?.data?.docVesselName || \"\",\n                docRoE: doc?.data?.docRoE || \"\",\n                docPlaceOfLanding: doc?.data?.docPlaceOfLanding || \"\",\n\n                // MRA customs\n                discountTotalAmount: doc?.data?.discountTotalAmount || \"\",\n                discountedTotalAmount: doc?.data?.discountedTotalAmount || \"\",\n\n                // transport template\n                invJobRef: doc?.data?.invJobRef || \"\",\n                invStorageFee: doc?.data?.invStorageFee || \"\",\n                invScanningFee: doc?.data?.invScanningFee || \"\",\n                invGatePassFee: doc?.data?.invGatePassFee || \"\",\n                invVehicleNo: doc?.data?.invVehicleNo || \"\",\n                transportFees: doc?.data?.transportFees || \"\",\n                transportDesc: doc?.data?.transportDesc || \"\",\n                invApplyVat: doc?.data?.invApplyVat || false,\n\n                // flexitrans customs\n                docShipper: doc?.data?.docShipper || \"\",\n                docMarkNos: doc?.data?.docMarkNos || \"\",\n                docCommodity: doc?.data?.docCommodity || \"\",\n                docHbl: doc?.data?.docHbl || \"\",\n                docDepot: doc?.data?.docDepot || \"\",\n              },\n              logo: logo || \"\",\n              sigImage: sigImage || \"\",\n            };\n\n            let qrCodeUri = \"\";\n            if (doc?.data?.mraFinalisationData?.fiscalisedInvoices) {\n              let qrCode =\n                doc?.data?.mraFinalisationData?.fiscalisedInvoices[0]?.qrCode;\n\n              // Construct data URI data:image/png;base64,\n              const dataUri = `data:image/jpeg/png;base64,${qrCode}`;\n\n              qrCodeUri = dataUri;\n            }\n\n            const documentPdfComponent =\n              companyDetails?.data?.documentTemplate === \"transport\" ? (\n                <InvTransportTemplatePdf\n                  companyChosenObj={content.companyChosenObj}\n                  clientChosenObj={content.clientChosenObj}\n                  invDetails={content.invDetails}\n                  logo={content.logo}\n                  sigImage={content.sigImage}\n                />\n              ) : (\n                <InvPdf\n                  // worldlink custom template\n                  customTemplate1={\n                    process.env\n                      .REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n                    companyDetails?.id &&\n                    process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n                      companyDetails?.id\n                    )\n                      ? true\n                      : false\n                  }\n                  // new template with custom MRA changes\n                  newTemplate={\n                    companyDetails?.data?.MRATemplateFlag?.value ||\n                    content?.invDetails?.data?.MRATemplateApplied\n                      ? true\n                      : false\n                  }\n                  companyChosenObj={content.companyChosenObj}\n                  clientChosenObj={content.clientChosenObj}\n                  invDetails={content.invDetails}\n                  logo={content.logo}\n                  sigImage={content.sigImage}\n                  qrCodeUri={qrCodeUri || \"\"}\n                />\n              );\n\n            let blobPDF = await pdf(documentPdfComponent).toBlob();\n\n            if (blobPDF) {\n              let blobResponse = await new Promise((resolve) => {\n                var reader = new FileReader();\n                reader.readAsDataURL(blobPDF);\n\n                reader.onloadend = async () => {\n                  var base64String = reader.result;\n                  let sFormat = base64String.split(\",\");\n                  resolve(sFormat[1]);\n                };\n              });\n\n              if (blobResponse) {\n                resolve(blobResponse);\n              }\n            }\n          })\n        );\n      });\n\n      Promise.all(promises).then((allPdfs) => {\n        let invoiceNumberList = \"\";\n        let invoiceNumberSubjectList = \"\";\n        let invoice_number_customerName = \"\";\n        selectedInvoices.forEach((invoice) => {\n          invoiceNumberList =\n            invoiceNumberList + `- ${invoice?.data?.docString} \\n`;\n          invoiceNumberSubjectList =\n            invoiceNumberSubjectList + ` ${invoice?.data?.docString} `;\n\n          if (companyDetails?.id === process.env.REACT_APP_CUSTOM_ASHLEY_ID) {\n            let customerName = \"\";\n            const particulars = invoice?.data?.docParticulars || [];\n            if (particulars?.length > 0) {\n              const customerParticular = particulars.find(\n                (particular) => particular.title === \"Customer's\"\n              );\n              if (customerParticular) {\n                customerName = customerParticular.customDetail;\n              }\n            }\n\n            invoice_number_customerName =\n              invoice_number_customerName +\n              `- ${invoice?.data?.docString} for customer: ${customerName} \\n `;\n          }\n        });\n\n        let toEmail = clientDocumentObjectSelected?.data?.email || \"\";\n\n        if (clientDocumentObjectSelected?.data?.email2) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email2}`;\n        }\n        if (clientDocumentObjectSelected?.data?.email3) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email3}`;\n        }\n        if (clientDocumentObjectSelected?.data?.email4) {\n          toEmail = toEmail + `,${clientDocumentObjectSelected?.data?.email4}`;\n        }\n\n        let emailParameters = {\n          from_name: companyDetails?.data?.name,\n          to_name: clientDocumentObjectSelected?.data?.name,\n          from_email: companyDetails?.data?.email,\n          to_email: toEmail,\n          reply_to: companyDetails?.data?.email,\n          fileName: `${documentType?.title}.pdf`,\n          content: allPdfs,\n        };\n\n        if (companyDetails.id === process.env.REACT_APP_CUSTOM_ASHLEY_ID) {\n          emailParameters = {\n            ...emailParameters,\n            invoiceNumber: invoiceNumberSubjectList || \"\",\n            invoice_number_customerName: invoice_number_customerName,\n            subject: `${documentType?.title} ${invoiceNumberSubjectList} from ${companyDetails?.data?.name}`,\n            documentType: documentType?.title,\n          };\n        } else {\n          emailParameters = {\n            ...emailParameters,\n            invoice_number: invoiceNumberList,\n            invoice_number_customerName: invoiceNumberList,\n            subject: `${documentType?.title} from ${companyDetails?.data?.name}`,\n            documentType: documentType?.title,\n          };\n        }\n\n        if (ccField) {\n          const seperatedByCommas = ccField.split(\",\");\n          let newCC = \"\";\n          if (seperatedByCommas?.length > 0) {\n            for (let i = 0; i < seperatedByCommas?.length; i++) {\n              newCC = newCC + seperatedByCommas[i] + \", \";\n            }\n          }\n\n          emailParameters = {\n            ...emailParameters,\n            ccField: newCC,\n          };\n        }\n\n        emailjs\n          .send(\n            companyDetails?.data?.serviceKey,\n            companyDetails?.data?.templateKey,\n            {\n              ...emailParameters,\n            },\n            process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n          )\n          .then(\n            async () => {\n              if (us_openCCDialog?.open) {\n                set_us_openCCDialog({\n                  open: false,\n                  type: \"\",\n                  invoiceContent: null,\n                });\n              }\n\n              const promisesEmailSent = [];\n              selectedInvoices.forEach((doc) => {\n                promisesEmailSent.push(\n                  new Promise(async (resolveEmailSent) => {\n                    await db\n                      .collection(\"company\")\n                      .doc(companyDetails?.id)\n                      .collection(documentType?.id)\n                      .doc(doc?.id)\n                      .set({ emailAlreadySent: true }, { merge: true })\n                      .then(() => {\n                        resolveEmailSent(true);\n                      });\n                  })\n                );\n              });\n\n              Promise.all(promisesEmailSent).then(() => {\n                enqueueSnackbar(\"Email sent successfully\", {\n                  variant: \"success\",\n                });\n\n                fetchDocument();\n\n                dispatch(setLoading(false));\n              });\n            },\n            (error) => {\n              enqueueSnackbar(\n                `Error occured while sending pdf: ${error.text}`,\n                {\n                  variant: \"error\",\n                }\n              );\n              dispatch(setLoading(false));\n            }\n          );\n      });\n    }\n  };\n\n  async function applyVoid(voidBool, invoiceId) {\n    dispatch(setLoading(true));\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(documentType?.id)\n      .doc(invoiceId)\n      .set({ isVoid: voidBool }, { merge: true })\n      .then(async () => {\n        await fetchDocument();\n        enqueueSnackbar(`${documentType?.title} updated successfully`, {\n          variant: \"success\",\n        });\n        dispatch(setLoading(false));\n      })\n      .catch((err) => {\n        enqueueSnackbar(`Error occured while updating void: ${err?.message}`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function applyPayment(invoiceSelected, paymentType) {\n    return await new Promise((resolve) => {\n      dispatch(setLoading(true));\n      // create a payment doc using transaction to check if paymentCounter exists\n      // Create a reference to the SF doc.\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyIdSelected)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      db.runTransaction(async (transaction) => {\n        return transaction.get(paymentCounterDocRef).then((sfDoc) => {\n          if (!sfDoc.exists) {\n            return null;\n          }\n\n          var newPaymentCounter = Number(sfDoc.data().paymentCounter || 0) + 1;\n          return newPaymentCounter;\n        });\n      })\n        .then(async (result) => {\n          if (result === null) {\n            await db\n              .collection(\"company\")\n              .doc(companyIdSelected)\n              .collection(\"payment\")\n              .doc(\"paymentCounter\")\n              .set({ paymentCounter: 1 })\n              .then(async () => {\n                let paymentResult = await executePayment(\n                  1,\n                  invoiceSelected,\n                  paymentType\n                );\n                if (paymentResult) {\n                  resolve(true);\n                }\n              })\n              .catch((err) => {\n                enqueueSnackbar(\n                  `Error occured while creating payment counter: ${err?.message}`,\n                  { variant: \"error\" }\n                );\n                dispatch(setLoading(false));\n              });\n          } else if (result && Number(result) > 0) {\n            let paymentResult = await executePayment(\n              result,\n              invoiceSelected,\n              paymentType\n            );\n\n            if (paymentResult) {\n              resolve(true);\n            }\n          }\n        })\n        .catch((err) => {\n          enqueueSnackbar(\n            `Error occured while executing payment transaction: ${err?.message}`,\n            { variant: \"error\" }\n          );\n          dispatch(setLoading(false));\n          resolve(true);\n        });\n    });\n  }\n\n  async function executePayment(result, invoiceSelected, paymentType) {\n    return await new Promise((resolve) => {\n      let paymentNumberDoc = result.toString();\n      if (paymentNumberDoc?.length === 1) {\n        paymentNumberDoc = `0000${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 2) {\n        paymentNumberDoc = `000${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 3) {\n        paymentNumberDoc = `00${paymentNumberDoc}`;\n      } else if (paymentNumberDoc?.length === 4) {\n        paymentNumberDoc = `0${paymentNumberDoc}`;\n      }\n\n      let remainingAmount = 0;\n      let paymentAmount = 0;\n      let paymentStatus = \"\";\n\n      if (paymentType === \"FULL\") {\n        remainingAmount = 0;\n        paymentAmount = invoiceSelected?.data?.docTotal;\n        paymentStatus = \"Paid\";\n      }\n\n      // Get a new write batch\n      var batch = db.batch();\n\n      // store payment made\n      const paymentdocRefId = result.toString();\n\n      var paymentCounterDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(\"paymentCounter\");\n\n      var paymentDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(\"payment\")\n        .doc(paymentdocRefId);\n\n      var invoiceDocRef = db\n        .collection(\"company\")\n        .doc(companyDetails.id)\n        .collection(conversionValue)\n        .doc(invoiceSelected.id);\n\n      // update payment counter\n      batch.set(\n        paymentCounterDocRef,\n        { paymentCounter: Number(result) },\n        { merge: true }\n      );\n\n      // add new payment doc\n      batch.set(\n        paymentDocRef,\n        {\n          invoiceList: [{ invoiceId: invoiceSelected?.id }],\n          paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n          dateCreated: firebase.firestore.Timestamp.fromDate(new Date()),\n        },\n        { merge: true }\n      );\n\n      batch.set(\n        invoiceDocRef,\n        {\n          paymentStatus: paymentStatus,\n          docRemainingPaymentAmt: remainingAmount,\n          attachedPaymentNumber: [\n            {\n              paymentNumber: paymentdocRefId,\n              paymentNumberString: paymentNumberDoc,\n              paymentType: \"\",\n              paymentAmount: paymentAmount,\n              paymentRemainingAmount: remainingAmount,\n              paymentDate: moment(new Date()).format(\"DD-MM-YYYY\"),\n            },\n          ],\n        },\n        { merge: true }\n      );\n\n      // Commit the batch\n      batch\n        .commit()\n        .then(async () => {\n          enqueueSnackbar(`${paymentType} payment applied successfully`);\n          dispatch(setLoading(false));\n          resolve(true);\n        })\n        .catch((error) => {\n          enqueueSnackbar(\n            `Error occured while making ${paymentType} payment: ${error?.message}`,\n            {\n              variant: \"error\",\n            }\n          );\n          dispatch(setLoading(false));\n          resolve(true);\n        });\n    });\n  }\n\n  return (\n    <>\n      <Grid item xs={12} md={12}>\n        <hr />\n        <br />\n        <Typography>Please choose a date</Typography>\n      </Grid>\n\n      <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n        <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n          <DatePicker\n            label=\"From\"\n            value={us_fromDate || \"\"}\n            onChange={(newValue) => {\n              set_us_fromDate(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} size=\"small\" />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n\n          <DatePicker\n            label=\"To\"\n            value={us_ToDate || \"\"}\n            onChange={(newValue) => {\n              set_us_ToDate(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} size=\"small\" />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n        </Stack>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        md={12}\n        style={{\n          display: us_documentlist && us_documentlist?.length > 0 ? \"\" : \"none\",\n          width: \"100%\",\n        }}\n      >\n        {companyDetails?.data?.displayMRAFiscalisationButton ? (\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => submitMultipleInvoiceToMRA()}\n              disabled={\n                us_documentlist &&\n                us_documentlist?.length > 0 &&\n                us_documentlist?.find((doc) => doc?.checked === true)\n                  ? false\n                  : true\n              }\n            >\n              Send invoices to MRA\n            </Button>\n            <br />\n            <br />\n          </>\n        ) : (\n          <></>\n        )}\n\n        {companyDetails?.data?.sendEmail &&\n        us_documentlist &&\n        us_documentlist?.length > 0 &&\n        us_documentlist.find((invoice) => invoice.checked === true) ? (\n          <>\n            <Stack spacing={3} direction={\"row\"} alignItems={\"center\"}>\n              <Typography>\n                {`${\n                  us_documentlist.filter((invoice) => invoice.checked === true)\n                    ?.length\n                } seleted`}\n              </Typography>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() =>\n                  /* sendMultipleEmail() */ set_us_openCCDialog({\n                    open: true,\n                    type: \"mulitple\",\n                  })\n                }\n                style={{ width: 300 }}\n              >\n                {`Send selected invoice(s) via email`}\n              </Button>\n            </Stack>\n            <br />\n          </>\n        ) : (\n          <></>\n        )}\n\n        {documentType && documentType?.id === \"proforma\" ? (\n          <Grid item xs={12} md={12}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4}>\n                <Autocomplete\n                  ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n                  size=\"small\"\n                  label=\"Proforma filter\"\n                  id=\"filter-drop-down\"\n                  options={[\n                    \"With P.O\",\n                    \"With Quote number\",\n                    \"With both P.O and Quote number\",\n                    \"NONE\",\n                  ]}\n                  value={selectedProformaFilter}\n                  renderInput={(params) => (\n                    <TextField {...params} label={\"Proforma filter\"} />\n                  )}\n                  onChange={(e, value, reason) => {\n                    if (\n                      reason !== \"removeOption\" &&\n                      reason !== \"clear\" &&\n                      value\n                    ) {\n                      set_selectedProformaFilter(value);\n                    } else {\n                      set_selectedProformaFilter(null);\n                    }\n                  }}\n                  getOptionLabel={(option) => option}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <br />\n          </Grid>\n        ) : (\n          <></>\n        )}\n\n        <TableContainer>\n          <Table border={1}>\n            <TableHead>\n              <TableRow>\n                {companyDetails?.data?.MRATemplateFlag ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  ></TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {viewOnly && searchAndChoose ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Choose\n                  </TableCell>\n                ) : (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Delete\n                  </TableCell>\n                )}\n\n                {viewOnly && searchAndChoose ? (\n                  <></>\n                ) : (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Update\n                  </TableCell>\n                )}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Date time created\n                </TableCell>\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Client\n                </TableCell>\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  {`${documentType?.title} number`}\n                </TableCell>\n\n                {companyDetails?.id ===\n                process.env.REACT_APP_CUSTOM_ASHLEY_ID ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{\n                      fontWeight: \"bolder\",\n                      whiteSpace: \"nowrap\",\n                    }}\n                  >\n                    Customer's\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {companyDetails?.id ===\n                  process.env.REACT_APP_CUSTOM_ASHLEY_ID &&\n                clientDocumentObjectSelected?.id &&\n                process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS &&\n                process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS.includes(\n                  clientDocumentObjectSelected?.id\n                ) ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{\n                      whiteSpace: \"nowrap\",\n                    }}\n                  >\n                    Job Ref\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {companyDetails?.data?.sendEmail ? (\n                  <>\n                    <TableCell size=\"small\" align=\"center\">\n                      Send pdf to client\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {documentType && documentType?.id === \"proforma\" ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Quotation Number\n                    </TableCell>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      P.O Number\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {/* {user && user?.role === \"super-admin\" ? (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Send to google drive\n                  </TableCell>\n                ) : (\n                  <></>\n                )} */}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  View/download\n                </TableCell>\n\n                {companyDetails?.data?.displayMRAFiscalisationButton ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      MRA Fiscalisation\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                {documentType?.id && documentType?.id !== \"invoice\" ? (\n                  <>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Vat amount\n                    </TableCell>\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      Subtotal amount\n                    </TableCell>\n                  </>\n                ) : (\n                  <></>\n                )}\n\n                <TableCell\n                  size=\"small\"\n                  align=\"center\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  Total amount\n                </TableCell>\n\n                {companyDetails?.data?.documentTemplate === \"transport\" &&\n                documentType?.id === \"vat_invoice\" ? (\n                  <TableCell size=\"small\" align=\"center\">\n                    Apply/remove void\n                  </TableCell>\n                ) : (\n                  <></>\n                )}\n\n                {documentType?.id && documentType?.id === \"proforma\" && (\n                  <TableCell\n                    size=\"small\"\n                    align=\"center\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                  >\n                    Proforma status\n                  </TableCell>\n                )}\n\n                {documentType?.id &&\n                  (documentType?.id === \"proforma\" ||\n                    documentType?.id === \"vat_invoice\" ||\n                    documentType?.id === \"invoice\") && (\n                    <TableCell\n                      size=\"small\"\n                      align=\"center\"\n                      style={{ whiteSpace: \"nowrap\" }}\n                    >\n                      {documentType?.id === \"proforma\"\n                        ? \"Convert to Invoice/Vat Invoice\"\n                        : \"Converted from Proforma\"}\n                    </TableCell>\n                  )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {us_documentlist &&\n                us_documentlist?.length > 0 &&\n                us_documentlist?.map((doc, index) => {\n                  let displayBool = false;\n\n                  if (documentType && documentType?.id === \"proforma\") {\n                    if (\n                      (selectedProformaFilter === \"With Quote number\" &&\n                        doc?.data?.docQuoteNumber) ||\n                      (selectedProformaFilter === \"With P.O\" &&\n                        doc?.data?.docPurchaseOrderNumber) ||\n                      (selectedProformaFilter ===\n                        \"With both P.O and Quote number\" &&\n                        doc?.data?.docQuoteNumber &&\n                        doc?.data?.docPurchaseOrderNumber) ||\n                      (selectedProformaFilter === \"NONE\" &&\n                        !doc?.data?.docQuoteNumber &&\n                        !doc?.data?.docPurchaseOrderNumbe) ||\n                      !selectedProformaFilter\n                    ) {\n                      displayBool = true;\n                    } else {\n                      displayBool = false;\n                    }\n                  } else {\n                    displayBool = true;\n                  }\n\n                  if (displayBool) {\n                    return (\n                      <TableRow key={index}>\n                        {companyDetails?.data?.MRATemplateFlag ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Checkbox\n                              checked={doc?.checked}\n                              onChange={(event) => {\n                                let newDocumentlist = [...us_documentlist];\n                                newDocumentlist[index] = {\n                                  ...newDocumentlist[index],\n                                  checked: event.target.checked,\n                                };\n                                set_us_documentlist(newDocumentlist);\n                              }}\n                            />\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {viewOnly && searchAndChoose ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => chooseDocument(doc)}\n                            >\n                              Choose\n                            </Button>\n                          </TableCell>\n                        ) : (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <IconButton\n                              color=\"error\"\n                              onClick={() =>\n                                deleteDocument(doc?.id, { ...doc?.data })\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.deletePermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                        )}\n\n                        {viewOnly && searchAndChoose ? (\n                          <></>\n                        ) : (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <IconButton\n                              onClick={() => {\n                                dispatch(\n                                  setUpdateDocumentData({\n                                    ...doc,\n                                    documentTypeId: documentType?.id,\n                                    documentTypeTitle: documentType?.title,\n                                    keywords: doc?.data?.keywords || [],\n                                  })\n                                );\n                                setOpenUpdateDialog(true);\n                              }}\n                              disabled={\n                                !user?.permissions ||\n                                !user?.permissions[\n                                  documentType?.updatePermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                ) ||\n                                (doc?.data &&\n                                  doc?.data?.isProformaConverted &&\n                                  documentType?.id === \"proforma\")\n                              }\n                            >\n                              <EditIcon color=\"primary\" />\n                            </IconButton>\n                          </TableCell>\n                        )}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          {moment(doc?.data?.docDate.toDate()).format(\n                            \"DD-MM-YYYY, HH:MM:ss\"\n                          )}\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          {clientDocumentObjectSelected &&\n                          clientDocumentObjectSelected?.name &&\n                          clientDocumentObjectSelected?.name !== \"\"\n                            ? clientDocumentObjectSelected?.name\n                            : \"\"}\n                        </TableCell>\n                        {/* <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          {doc?.data?.docBillTo || \"\"}\n                        </TableCell> */}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >{`${doc?.data?.docString}`}</TableCell>\n\n                        {companyDetails?.id ===\n                        process.env.REACT_APP_CUSTOM_ASHLEY_ID ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.docParticulars.find(\n                              (particular) => particular.title === \"Customer's\"\n                            )?.customDetail || \"\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {companyDetails?.id ===\n                          process.env.REACT_APP_CUSTOM_ASHLEY_ID &&\n                        clientDocumentObjectSelected?.id &&\n                        process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS &&\n                        process.env.REACT_APP_ASHLEY_SOA_JOB_REF_CLIENTS.includes(\n                          clientDocumentObjectSelected?.id\n                        ) ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.invJobRef || \"\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {companyDetails?.data?.sendEmail ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                doc?.data?.emailAlreadySent === true\n                                  ? \"#befed5\"\n                                  : companyDetails?.data?.documentTemplate ===\n                                      \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                set_us_openCCDialog({\n                                  open: true,\n                                  type: \"single\",\n                                  invoiceContent: doc,\n                                })\n                              }\n                            >\n                              send email\n                            </Button>\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType && documentType?.id === \"proforma\" ? (\n                          <>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              {doc?.data?.docQuoteNumber || \"\"}\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              {doc?.data?.docPurchaseOrderNumber || \"\"}\n                            </TableCell>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n\n                        <TableCell\n                          align=\"center\"\n                          size=\"small\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          <Stack\n                            direction={\"row\"}\n                            alignItems={\"center\"}\n                            justifyContent={\"center\"}\n                            spacing={2}\n                          >\n                            <IconButton\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownload(\n                                  companyDetails,\n                                  clientDocumentObjectSelected,\n                                  doc,\n                                  logo,\n                                  sigImage,\n                                  \"view\"\n                                )\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.viewPermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <Iconify icon={\"carbon:view\"} />\n                            </IconButton>\n\n                            <IconButton\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                handleViewDownload(\n                                  companyDetails,\n                                  clientDocumentObjectSelected,\n                                  doc,\n                                  logo,\n                                  sigImage,\n                                  \"download\"\n                                )\n                              }\n                              disabled={\n                                !user?.permissions[\n                                  documentType?.viewPermission\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                )\n                              }\n                            >\n                              <Iconify icon={\"eva:download-fill\"} />\n                            </IconButton>\n                          </Stack>\n                        </TableCell>\n\n                        {companyDetails?.data?.displayMRAFiscalisationButton ? (\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            {doc?.data?.mraCompliantStatus === \"completed\" ? (\n                              <Typography>Completed</Typography>\n                            ) : doc?.data?.mraCompliantStatus === \"error\" ? (\n                              <Stack spacing={2} direction={\"row\"}>\n                                <Tooltip title={doc?.data?.mraCompliantMessage}>\n                                  <Typography>Error occured</Typography>\n                                </Tooltip>\n\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => uploadToMRA(doc)}\n                                >\n                                  Upload again\n                                </Button>\n                              </Stack>\n                            ) : (\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => uploadToMRA(doc)}\n                              >\n                                Upload\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType?.id && documentType?.id !== \"invoice\" ? (\n                          <>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                background:\n                                  companyDetails?.data?.documentTemplate ===\n                                    \"transport\" && doc?.data?.isVoid\n                                    ? \"#FEFEBE\"\n                                    : \"transparent\",\n                              }}\n                            >\n                              <CurrencyFormat\n                                value={Number(\n                                  doc?.data?.docVatFee || 0\n                                ).toFixed(2)}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                            <TableCell\n                              size=\"small\"\n                              align=\"center\"\n                              style={{ whiteSpace: \"nowrap\" }}\n                            >\n                              <CurrencyFormat\n                                value={Number(\n                                  doc?.data?.docSubTotal || 0\n                                ).toFixed(2)}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            </TableCell>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{\n                            whiteSpace: \"nowrap\",\n                            background:\n                              companyDetails?.data?.documentTemplate ===\n                                \"transport\" && doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                          }}\n                        >\n                          <CurrencyFormat\n                            value={Number(doc?.data?.docTotal || 0).toFixed(2)}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                          />\n                        </TableCell>\n\n                        {companyDetails?.data?.documentTemplate ===\n                          \"transport\" && documentType?.id === \"vat_invoice\" ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background: doc?.data?.isVoid\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                            }}\n                          >\n                            {doc?.data?.isVoid ? (\n                              <Button\n                                variant=\"contained\"\n                                onClick={() => applyVoid(false, doc?.id)}\n                                color=\"warning\"\n                              >\n                                cancel void\n                              </Button>\n                            ) : (\n                              <Button\n                                variant=\"contained\"\n                                onClick={() => applyVoid(true, doc?.id)}\n                                color=\"primary\"\n                              >\n                                void\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n\n                        {documentType?.id && documentType?.id === \"proforma\" && (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background:\n                                /* doc?.data?.isVoid || */\n                                doc?.data && doc?.data?.isProformaConverted\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data && doc?.data?.isProformaConverted\n                              ? `Converted to ${doc?.data?.conversionDocTitle}`\n                              : \"Still Proforma\"}\n                          </TableCell>\n                        )}\n\n                        {documentType?.id && documentType?.id === \"proforma\" ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              /* background: doc?.data?.isVoid\n                            ? \"#FEFEBE\"\n                            : \"transparent\", */\n                              whiteSpace: \"nowrap\",\n                              background:\n                                companyDetails?.data?.documentTemplate ===\n                                  \"transport\" && doc?.data?.isVoid\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => {\n                                set_selectedProformaDoc({\n                                  id: doc?.id,\n                                  data: { ...doc?.data },\n                                });\n                                set_us_open_convertTo_dialog(true);\n                              }}\n                              disabled={\n                                doc?.data?.isProformaConverted ||\n                                (viewOnly && searchAndChoose)\n                              }\n                            >\n                              Convert\n                            </Button>\n                          </TableCell>\n                        ) : documentType?.id &&\n                          (documentType?.id === \"vat_invoice\" ||\n                            documentType?.id === \"invoice\") ? (\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              background: doc?.data?.createdFromProfroma\n                                ? \"#FEFEBE\"\n                                : \"transparent\",\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            {doc?.data?.createdFromProfroma ? \"YES\" : \"NO\"}\n                          </TableCell>\n                        ) : (\n                          <></>\n                        )}\n                      </TableRow>\n                    );\n                  } else return <></>;\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n\n      <Grid item xs={12} md={12}>\n        {!us_documentlist || us_documentlist?.length === 0 ? (\n          <Alert severity=\"warning\">No document retrieved found.</Alert>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n\n      <Dialog open={openUpdateDialog} maxWidth={\"xl\"} fullWidth>\n        <DialogTitle>{`Update ${documentType?.title || \"\"}`}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3}>\n            <DocumentInputDetails\n              action={\"update\"}\n              handleCloseUpdateDialog={handleCloseUpdateDialog}\n            />\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => handleCloseUpdateDialog(false)}\n          >\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={us_open_convertTo_dialog} maxWidth={\"sm\"} fullWidth>\n        <DialogTitle>Convert to Invoice/Vat Invoice</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <FormControl>\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Conversion types\n                </FormLabel>\n                <RadioGroup\n                  aria-labelledby=\"demo-radio-buttons-group-label\"\n                  name=\"radio-buttons-group\"\n                  value={conversionValue}\n                  onChange={(e) => set_conversionValue(e.target.value)}\n                >\n                  <FormControlLabel\n                    value=\"invoice\"\n                    control={<Radio />}\n                    label=\"Invoice\"\n                  />\n                  <FormControlLabel\n                    value=\"vat_invoice\"\n                    control={<Radio />}\n                    label=\"VAT Invoice\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => confirmConversion()}\n          >\n            Confirm\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => set_us_open_convertTo_dialog(false)}\n          >\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* \n      {openPdf ? (\n        <Suspense fallback={<></>}>\n          <PdfDialog\n            content={pdfContent}\n            open={openPdf}\n            close={() => set_openPdf(false)}\n          />\n        </Suspense>\n      ) : (\n        <></>\n      )} */}\n\n      <Suspense fallback={<></>}>\n        <CCDialog\n          open={us_openCCDialog?.open}\n          close={() =>\n            set_us_openCCDialog({\n              open: false,\n              type: \"\",\n            })\n          }\n          us_openCCDialog={us_openCCDialog}\n          sendMultipleEmail={sendMultipleEmail}\n        />\n      </Suspense>\n    </>\n  );\n}\n"],"sourceRoot":""}