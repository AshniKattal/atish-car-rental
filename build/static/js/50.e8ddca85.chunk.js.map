{"version":3,"sources":["../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Search.js","components/invoice-pdf/InvPdfCustom1.js","components/search/SearchComponent.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","jsx","d","InvPdfCustom1","companyChosenObj","clientChosenObj","invDetails","logo","sigImage","size","style","styles","page","docType","paymentStatus","source","paidStamp","background","gridContainer","gridContainerMainTitle","mb15","col6","h3","data","name","alignRight","align","docTitle","toUpperCase","undefined","imageContainer","width","height","body3","contactNumber","mobileNumber","email","h6","docBillTo","address","tan","brn","body3Bold","col4","invDate","col8","invoiceString","docQuoteNumber","docPurchaseOrderNumber","col20","col30","docBLNumber","docSupplier","docContainerNumber","docPackages","docDescription","docGrossWeight","docVolume","docPortOfLoading","docETA","docVesselName","docRoE","docPlaceOfLanding","tableAutoWidth","middleTableHeight","rowNewTable","boldNewTable","headerNewTable","headerColumn","invParticulars","length","map","particular","index","wrap","column","rowDescription","Number","rowUnitPrice","toFixed","displayType","thousandSeparator","rowQty","rowAmount","rowVatAmount","rowTotalAmount","summaryRow","summaryColumnNoBorder","summaryColumnRightBorder","summaryColumn","invSubTotal","invVatFee","invTotal","subtitle2","docTermsAndCondition","display","flexDirection","alignLeft","footerTitle","footerTxt","fontWeight","beneficiaryName","bankName","bankAccNo","mt20","lineHeightMain","SearchComponent","user","useAuth","enqueueSnackbar","useSnackbar","dispatch","useDispatch","documents","useSelector","selectDocument","companyList","selectCompanyList","useState","companyDetails","set_companyDetails","documentSelected","setDocumentSelected","openUpdateDialog","setOpenUpdateDialog","clientList","setClientList","openSearchListDialog","set_openSearchListDialog","searchInput","set_searchInput","documentRetrieved","set_documentRetrieved","handleSelectChange","e","reason","a","preventDefault","initializeClientList","id","handleSelectDocumentChange","companyId","setLoading","db","collection","doc","process","orderBy","get","then","queryDocs","docs","arr","forEach","push","catch","err","message","search","searchInputSplit","split","promises","Promise","resolve","where","limit","result","documentType","document","documentNumber","docString","sort","dynamicSortDesc","all","allDocuments","allDocumentsData","variant","handleCloseUpdateDialog","isUpdateDone","setUpdateDocumentData","handleViewDownload","content","type","toDataUrl","imageUrl","logoImage","sigUrl","includes","InvPdf","blobPdf","pdf","updateContainer","toBlob","console","log","link","createElement","href","window","URL","createObjectURL","download","click","open","error","alert","url","fetch","blob","reader","FileReader","readAsDataURL","onloadend","base64data","Button","startIcon","color","onClick","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","minHeight","Stack","spacing","Autocomplete","ListboxProps","maxHeight","label","options","sx","renderInput","params","TextField","InputLabelProps","required","onChange","getOptionLabel","option","title","direction","alignItems","event","target","disabled","onKeyUp","key","TableContainer","Table","border","TableHead","TableRow","TableCell","whiteSpace","TableBody","justifyContent","IconButton","find","client","clientId","docShipTo","moment","docDate","toDate","format","docParticulars","docTotal","docVatFee","docSubTotal","docShipper","docMarkNos","docCommodity","docHbl","docDepot","Iconify","icon","documentTypeId","documentTypeTitle","keywords","permissions","assignedCompanyId","isProformaConverted","conversionDocTitle","DialogActions","Grid","container","DocumentInputDetails","action"],"mappings":"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","file":"static/js/50.e8ddca85.chunk.js","sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import { Page, View, Text, Image, Document } from \"@react-pdf/renderer\";\n//\nimport styles from \"./PdfStyle\";\nimport CurrencyFormat from \"react-currency-format\";\nimport PropTypes from \"prop-types\";\nimport paidStamp from \"../images/paid.png\";\n\n// ----------------------------------------------------------------------\n\nInvPdfCustom1.propTypes = {\n  companyChosenObj: PropTypes.object,\n  clientChosenObj: PropTypes.object,\n  invDetails: PropTypes.object,\n  logo: PropTypes.string,\n  sigImage: PropTypes.string,\n};\n\nexport default function InvPdfCustom1({\n  companyChosenObj,\n  clientChosenObj,\n  invDetails,\n  logo,\n  sigImage,\n}) {\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        {invDetails?.docType &&\n        (invDetails?.docType === \"invoice\" ||\n          invDetails?.docType === \"vat_invoice\") &&\n        invDetails?.paymentStatus &&\n        invDetails?.paymentStatus === \"Paid\" ? (\n          <Image source={paidStamp} style={styles.background} />\n        ) : (\n          <View></View>\n        )}\n\n        <View>\n          <View\n            style={[\n              styles.gridContainer,\n              styles.gridContainerMainTitle,\n              styles.mb15,\n            ]}\n          >\n            <View style={styles.col6}>\n              <Text style={styles.h3}>\n                <b>{companyChosenObj?.data?.name || \"\"}</b>\n              </Text>\n            </View>\n            <View style={[styles.col6, styles.alignRight]}>\n              <Text style={styles.h3} align=\"right\">\n                <b>\n                  {invDetails?.docTitle && invDetails?.docTitle !== \"\"\n                    ? invDetails?.docTitle.toUpperCase()\n                    : \"\"}\n                </b>\n              </Text>\n            </View>\n          </View>\n\n          <View style={[styles.gridContainer, styles.mb15]}>\n            {logo !== undefined && logo !== null && logo !== \"\" && (\n              <View style={[styles.col6, styles.imageContainer]}>\n                <Image\n                  source={logo}\n                  style={{ width: \"125px\", height: \"50px\" }}\n                />\n              </View>\n            )}\n\n            <View style={[styles.col6]}>\n              <Text style={styles.body3}>\n                {\"Tel: \"}\n                {companyChosenObj?.data?.contactNumber || \"\"}\n              </Text>\n\n              <Text style={styles.body3}>\n                {\"Mob: \"}\n                {companyChosenObj?.data?.mobileNumber\n                  ? `${companyChosenObj?.data?.mobileNumber}`\n                  : \"\"}\n              </Text>\n\n              <Text style={styles.body3}>\n                {\"Email: \"}\n                {companyChosenObj?.data?.email\n                  ? `${companyChosenObj?.data?.email}`\n                  : \"\"}\n              </Text>\n            </View>\n          </View>\n\n          <View style={[styles.gridContainer, styles.mb15]}>\n            <View style={styles.col6}>\n              <Text style={styles.h6}>Bill To: </Text>\n              {invDetails.docBillTo && (\n                <Text style={styles.body3}>{invDetails?.docBillTo || \"\"}</Text>\n              )}\n              {!invDetails.docBillTo && (\n                <Text style={styles.body3}>{`${\n                  clientChosenObj?.data?.address || \"\"\n                }`}</Text>\n              )}\n              {!invDetails.docBillTo && (\n                <Text style={styles.body3}>{`Vat no: Vat${\n                  clientChosenObj?.data?.tan || \"\"\n                }`}</Text>\n              )}\n              {!invDetails.docBillTo && (\n                <Text style={styles.body3}>{`BRN: ${\n                  clientChosenObj?.data?.brn || \"\"\n                }`}</Text>\n              )}\n            </View>\n\n            <View style={styles.col6}>\n              <Text style={styles.h6}>From: </Text>\n              <Text style={styles.body3Bold}>\n                {companyChosenObj?.data?.name || \"\"}\n              </Text>\n              <Text style={styles.body3}>\n                {companyChosenObj?.data?.address || \"\"}\n              </Text>\n              {!companyChosenObj?.data?.tan && (\n                <Text style={styles.body3}>{`Vat no: Vat${\n                  companyChosenObj?.data?.tan || \"\"\n                }`}</Text>\n              )}\n              {!companyChosenObj?.data?.brn && (\n                <Text style={styles.body3}>{`BRN: ${\n                  companyChosenObj?.data?.brn || \"\"\n                }`}</Text>\n              )}\n            </View>\n          </View>\n\n          <View style={[styles.gridContainer, styles.mb15]}>\n            <View style={styles.col4}>\n              <Text style={styles.body3}>\n                <span style={styles.body3Bold}>Date: </span>\n                {` ${\n                  (invDetails?.invDate !== undefined &&\n                    invDetails?.invDate !== null &&\n                    invDetails?.invDate) ||\n                  \"\"\n                }`}\n              </Text>\n            </View>\n            <View style={styles.col8}></View>\n            <View style={styles.col4}>\n              <Text style={styles.body3}>\n                <span style={styles.body3Bold}>INV NUM: </span>\n                {` ${\n                  invDetails?.invoiceString !== undefined &&\n                  invDetails?.invoiceString !== null\n                    ? invDetails?.invoiceString\n                    : \"\"\n                }`}\n              </Text>\n\n              {invDetails && invDetails.docQuoteNumber ? (\n                <Text style={styles.body3}>\n                  <span style={styles.body3Bold}>Quotation #: </span>\n                  {` ${invDetails?.docQuoteNumber || \"\"}`}\n                </Text>\n              ) : (\n                <View />\n              )}\n\n              {invDetails && invDetails.docQuoteNumber ? (\n                <Text style={styles.body3}>\n                  <span style={styles.body3Bold}>P.O. #: </span>\n                  {` ${invDetails?.docPurchaseOrderNumber || \"\"}`}\n                </Text>\n              ) : (\n                <View />\n              )}\n            </View>\n          </View>\n\n          <View style={[styles.gridContainer, styles.mb15]}>\n            <View style={styles.col20}>\n              <Text style={styles.body3Bold}>BL Number</Text>\n              <Text style={styles.body3Bold}>Supplier</Text>\n              <Text style={styles.body3Bold}>Container Number</Text>\n              <Text style={styles.body3Bold}>Packages</Text>\n              <Text style={styles.body3Bold}>Description</Text>\n              <Text style={styles.body3Bold}>Gross Weight</Text>\n              <Text style={styles.body3Bold}>Volume</Text>\n              <Text style={styles.body3Bold}>Port Of Loading</Text>\n            </View>\n            <View style={styles.col30}>\n              <Text style={styles.body3}>{invDetails?.docBLNumber || \"\"}</Text>\n              <Text style={styles.body3}>{invDetails?.docSupplier || \"\"}</Text>\n              <Text style={styles.body3}>\n                {invDetails?.docContainerNumber || \"\"}\n              </Text>\n              <Text style={styles.body3}>{invDetails?.docPackages || \"\"}</Text>\n              <Text style={styles.body3}>\n                {invDetails?.docDescription || \"\"}\n              </Text>\n              <Text style={styles.body3}>\n                {invDetails?.docGrossWeight || \"\"}\n              </Text>\n              <Text style={styles.body3}>{invDetails?.docVolume || \"\"}</Text>\n              <Text style={styles.body3}>\n                {invDetails?.docPortOfLoading || \"\"}\n              </Text>\n            </View>\n            <View style={styles.col20}>\n              <Text style={styles.body3Bold}>ETA</Text>\n              <Text style={styles.body3Bold}>Vessel Name</Text>\n              <Text style={styles.body3Bold}>RoE</Text>\n              <Text style={styles.body3Bold}>Place Of Landing</Text>\n            </View>\n            <View style={styles.col30}>\n              <Text style={styles.body3}>{invDetails?.docETA || \"\"}</Text>\n              <Text style={styles.body3}>\n                {invDetails?.docVesselName || \"\"}\n              </Text>\n              <Text style={styles.body3}>{invDetails?.docRoE || \"\"}</Text>\n              <Text style={styles.body3}>\n                {invDetails?.docPlaceOfLanding || \"\"}\n              </Text>\n            </View>\n          </View>\n\n          <View>\n            <View style={[styles.tableAutoWidth, styles.middleTableHeight]}>\n              <View\n                style={[\n                  styles.rowNewTable,\n                  styles.boldNewTable,\n                  styles.headerNewTable,\n                ]}\n              >\n                <Text style={styles.headerColumn}>DETAILS</Text>\n                <Text style={styles.headerColumn}>CHARGEABLE</Text>\n                <Text style={styles.headerColumn}>CURRENCY</Text>\n                <Text style={styles.headerColumn}>UNIT</Text>\n                <Text style={styles.headerColumn}>AMOUNT MUR</Text>\n                <Text style={styles.headerColumn}>VAT</Text>\n                <Text style={styles.headerColumn}>TOTAL MUR</Text>\n              </View>\n\n              {invDetails?.invParticulars &&\n                invDetails?.invParticulars?.length > 0 &&\n                invDetails?.invParticulars.map((particular, index) => (\n                  <View style={styles.rowNewTable} key={index} wrap={true}>\n                    <Text style={styles.column}>\n                      {particular?.rowDescription || \"\"}\n                    </Text>\n                    <Text style={styles.column}>\n                      <CurrencyFormat\n                        value={Number(particular?.rowUnitPrice || 0).toFixed(2)}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Text>\n                    <Text style={styles.column}>{\"MUR\"}</Text>\n                    <Text style={styles.column}>\n                      {particular?.rowQty || \"\"}\n                    </Text>\n                    <Text style={styles.column}>\n                      <CurrencyFormat\n                        value={Number(particular?.rowAmount || 0).toFixed(2)}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Text>\n                    <Text style={styles.column}>\n                      <CurrencyFormat\n                        value={Number(particular?.rowVatAmount || 0).toFixed(2)}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Text>\n                    <Text style={styles.column}>\n                      <CurrencyFormat\n                        value={Number(particular?.rowTotalAmount || 0).toFixed(\n                          2\n                        )}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Text>\n                  </View>\n                ))}\n\n              <View style={styles.summaryRow} wrap={true}>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnRightBorder}>Subtotal</Text>\n                <Text style={styles.summaryColumn}>\n                  <CurrencyFormat\n                    value={Number(invDetails?.invSubTotal || 0).toFixed(2)}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Text>\n              </View>\n              <View style={styles.summaryRow} wrap={true}>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnRightBorder}>Total VAT</Text>\n                <Text style={styles.summaryColumn}>\n                  <CurrencyFormat\n                    value={Number(invDetails?.invVatFee || 0).toFixed(2)}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Text>\n              </View>\n              <View style={styles.summaryRow} wrap={true}>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnNoBorder}></Text>\n                <Text style={styles.summaryColumnRightBorder}>\n                  Total Amount\n                </Text>\n                <Text style={styles.summaryColumn}>\n                  <CurrencyFormat\n                    value={Number(invDetails?.invTotal || 0).toFixed(2)}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Text>\n              </View>\n            </View>\n          </View>\n\n          <View style={styles.mb15}>\n            <Text style={styles.subtitle2}>Terms and conditions</Text>\n            <Text style={styles.body3}>\n              {invDetails?.docTermsAndCondition || \"\"}\n            </Text>\n          </View>\n\n          <View\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            <View style={styles.col6}>\n              <View style={[styles.alignLeft]}>\n                <Text style={styles.footerTitle}>Bank details</Text>\n                <Text style={styles.footerTxt}>\n                  Beneficiary name:{\"  \"}\n                  <span\n                    style={{\n                      fontWeight: 900,\n                    }}\n                  >\n                    {companyChosenObj?.data?.beneficiaryName || \"\"}\n                  </span>\n                </Text>\n                <Text style={styles.footerTxt}>\n                  Bank:{\"  \"}\n                  <span\n                    style={{\n                      fontWeight: 900,\n                    }}\n                  >\n                    {companyChosenObj?.data?.bankName || \"\"}\n                  </span>\n                </Text>\n                <Text style={styles.footerTxt}>\n                  Account number:{\"  \"}\n                  <span\n                    style={{\n                      fontWeight: 900,\n                    }}\n                  >\n                    {companyChosenObj?.data?.bankAccNo || \"\"}\n                  </span>\n                </Text>\n              </View>\n            </View>\n          </View>\n\n          {sigImage !== undefined && sigImage !== null && sigImage !== \"\" && (\n            <View style={[styles.gridContainer, styles.mt20]}>\n              <Text style={[styles.subtitle2, styles.lineHeightMain]}>\n                <b>Signature: </b>\n              </Text>\n            </View>\n          )}\n\n          {sigImage !== undefined && sigImage !== null && sigImage !== \"\" && (\n            <View style={[styles.gridContainer, styles.mb15]}>\n              <Image\n                source={sigImage}\n                style={{ width: \"150px\", height: \"90px\" }}\n              />\n            </View>\n          )}\n        </View>\n      </Page>\n    </Document>\n  );\n}\n","import {\n  Autocomplete,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport {\n  selectDocument,\n  setUpdateDocumentData,\n} from \"../../features/documentSlice\";\nimport db from \"src/firebase\";\nimport { selectCompanyList } from \"../../features/companySlice\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport Iconify from \"../Iconify\";\nimport InvPdf from \"../invoice-pdf/InvPdf\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport useAuth from \"../../hooks/useAuth\";\nimport DocumentInputDetails from \"../document/DocumentInputDetails\";\nimport CurrencyFormat from \"react-currency-format\";\nimport InvPdfCustom1 from \"../invoice-pdf/InvPdfCustom1\";\nimport { dynamicSortDesc } from \"../core-functions/SelectionCoreFunctions\";\n\nexport default function SearchComponent() {\n  const { user } = useAuth();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const { documents } = useSelector(selectDocument);\n\n  const { companyList } = useSelector(selectCompanyList);\n\n  const [companyDetails, set_companyDetails] = useState(null);\n\n  const [documentSelected, setDocumentSelected] = useState(null);\n\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\n\n  const [clientList, setClientList] = useState([]);\n\n  const [openSearchListDialog, set_openSearchListDialog] = useState(false);\n\n  const [searchInput, set_searchInput] = useState(\"\");\n\n  const [documentRetrieved, set_documentRetrieved] = useState([]);\n\n  function onHandleCloseDialog() {\n    set_openSearchListDialog(false);\n  }\n\n  const handleSelectChange = async (e, value, reason) => {\n    e.preventDefault();\n    if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n      set_companyDetails(value);\n\n      // retrieve all clients associated with the selected company\n      await initializeClientList(value.id);\n    } else if (reason === \"removeOption\" || reason === \"clear\") {\n      set_companyDetails(null);\n    }\n  };\n\n  const handleSelectDocumentChange = async (e, value, reason) => {\n    e.preventDefault();\n    if (reason !== \"removeOption\" && reason !== \"clear\" && value) {\n      setDocumentSelected(value);\n    } else if (reason === \"removeOption\" || reason === \"clear\") {\n      setDocumentSelected(null);\n    }\n  };\n\n  async function initializeClientList(companyId) {\n    dispatch(setLoading(true));\n    await db\n      .collection(\"company\")\n      .doc(process.env.REACT_APP_COMPANY_ID)\n      .collection(\"client\")\n      .orderBy(\"name\", \"asc\")\n      .get()\n      .then((queryDocs) => {\n        if (queryDocs?.docs?.length > 0) {\n          let arr = [];\n          queryDocs?.docs.forEach((doc) => {\n            arr.push({\n              id: doc?.id,\n              name: doc?.data()?.name,\n              data: { ...doc?.data() },\n            });\n          });\n          setClientList(arr);\n          dispatch(setLoading(false));\n        } else {\n          setClientList([]);\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while fetching clients: ${err?.message}`\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  async function search() {\n    if (searchInput) {\n      dispatch(setLoading(true));\n      const searchInputSplit = searchInput.split(\" \");\n      if (searchInputSplit && searchInputSplit?.length > 0) {\n        const promises = [];\n\n        if (documentSelected) {\n          promises.push(\n            new Promise(async (resolve) => {\n              await db\n                .collection(\"company\")\n                .doc(companyDetails?.id)\n                .collection(documentSelected?.id)\n                .where(\"keywords\", \"array-contains-any\", searchInputSplit)\n                .limit(25)\n                .get()\n                .then((result) => {\n                  if (result?.docs && result?.docs?.length > 0) {\n                    let arr = [];\n                    result?.docs.forEach((doc) => {\n                      arr.push({\n                        id: doc?.id,\n                        documentType: document,\n                        documentNumber: doc?.data()?.docString,\n                        data: { ...doc?.data() },\n                      });\n                    });\n\n                    arr.sort(dynamicSortDesc(\"documentNumber\"));\n\n                    resolve(arr);\n                  } else {\n                    resolve([]);\n                  }\n                });\n            })\n          );\n        } else {\n          documents.forEach((document) => {\n            promises.push(\n              new Promise(async (resolve) => {\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(document?.id)\n                  .where(\"keywords\", \"array-contains-any\", searchInputSplit)\n                  .limit(25)\n                  .get()\n                  .then((result) => {\n                    if (result?.docs && result?.docs?.length > 0) {\n                      let arr = [];\n                      result?.docs.forEach((doc) => {\n                        arr.push({\n                          id: doc?.id,\n                          documentType: document,\n                          documentNumber: doc?.data()?.docString,\n                          data: { ...doc?.data() },\n                        });\n                      });\n\n                      arr.sort(dynamicSortDesc(\"documentNumber\"));\n\n                      resolve(arr);\n                    } else {\n                      resolve([]);\n                    }\n                  });\n              })\n            );\n          });\n        }\n\n        Promise.all(promises).then((allDocuments) => {\n          let allDocumentsData = [];\n          if (allDocuments && allDocuments?.length > 0) {\n            allDocuments.forEach((documents) => {\n              if (documents && documents?.length > 0) {\n                documents.forEach((doc) => {\n                  allDocumentsData.push({ ...doc });\n                });\n              }\n            });\n          }\n\n          if (allDocumentsData?.length === 0) {\n            enqueueSnackbar(\"No document found\", { variant: \"warning\" });\n          }\n          set_documentRetrieved(allDocumentsData);\n\n          dispatch(setLoading(false));\n        });\n      }\n    }\n  }\n\n  /*  async function rebuildDoc() {\n    dispatch(setLoading(true));\n\n    const promises = [];\n    documents.forEach((document) => {\n      promises.push(\n        new Promise(async (resolve) => {\n          await db\n            .collection(\"company\")\n            .doc(companyDetails?.id)\n            .collection(document?.id)\n            .get()\n            .then((result) => {\n              if (result?.docs && result?.docs?.length > 0) {\n                let arr = [];\n                result?.docs.forEach((doc) => {\n                  if (doc.id !== \"documentIndex\") {\n                    arr.push({\n                      id: doc?.id,\n                      data: { ...doc?.data() },\n                      documentId: document?.id,\n                    });\n                  }\n                });\n                resolve(arr);\n              } else {\n                resolve(null);\n              }\n            });\n        })\n      );\n    });\n\n    Promise.all(promises).then(async (allResult) => {\n      //\n\n      const promises = [];\n      allResult.forEach(async (result) => {\n        promises.push(\n          new Promise(async (resolve) => {\n            if (result && result?.length > 0) {\n              result.forEach(async (doc) => {\n                let allParticularsDescription = \"\";\n                if (\n                  doc?.data?.docParticulars &&\n                  doc?.data?.docParticulars?.length > 0\n                ) {\n                  doc?.data?.docParticulars.forEach((docParticular) => {\n                    allParticularsDescription =\n                      allParticularsDescription +\n                      (docParticular?.rowDescription || \"\");\n                  });\n                }\n\n                let keywords = [];\n                if (allParticularsDescription) {\n                  const particularSplit = allParticularsDescription.split(\" \");\n                  let newParticularSplit = [];\n\n                  particularSplit.forEach((particular) => {\n                    newParticularSplit.push(particular.toLowerCase());\n                  });\n\n                  keywords = [...newParticularSplit];\n                }\n\n                if (doc?.data?.docBillTo) {\n                  const docBillToSplit = doc?.data?.docBillTo.split(\" \");\n\n                  let newDocBillToSplit = [];\n\n                  docBillToSplit.forEach((docBill) => {\n                    newDocBillToSplit.push(docBill.toLowerCase());\n                  });\n\n                  keywords = [...keywords, ...newDocBillToSplit];\n                }\n\n                keywords = [...new Set(keywords)];\n\n                await db\n                  .collection(\"company\")\n                  .doc(companyDetails?.id)\n                  .collection(doc.documentId)\n                  .doc(doc.id)\n                  .set(\n                    {\n                      keywords: keywords,\n                    },\n                    { merge: true }\n                  )\n                  .then(() => {\n                    resolve(true);\n                  })\n                  .catch(() => {\n                    resolve(true);\n                  });\n              });\n            } else resolve(true);\n          })\n        );\n      });\n\n      Promise.all(promises).then(async () => {\n        dispatch(setLoading(false));\n      });\n    });\n  } */\n\n  const handleCloseUpdateDialog = (isUpdateDone) => {\n    dispatch(setUpdateDocumentData(undefined));\n    setOpenUpdateDialog(false);\n\n    if (isUpdateDone) {\n      search();\n    }\n  };\n\n  const handleViewDownload = async (content, type) => {\n    try {\n      let logoImage = await toDataUrl(companyDetails?.data?.imageUrl);\n      let sigImage = await toDataUrl(companyDetails?.data?.sigUrl);\n\n      const doc =\n        process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE &&\n        companyDetails?.id &&\n        process.env.REACT_APP_CUSTOM_REQUIREMENT_WORLDLINK_EXAMPLE.includes(\n          companyDetails?.id\n        ) ? (\n          <InvPdfCustom1\n            companyChosenObj={content.companyChosenObj}\n            clientChosenObj={content.clientChosenObj}\n            invDetails={content.invDetails}\n            logo={logoImage || \"\"}\n            sigImage={sigImage || \"\"}\n          />\n        ) : (\n          <InvPdf\n            companyChosenObj={content.companyChosenObj}\n            clientChosenObj={content.clientChosenObj}\n            invDetails={content.invDetails}\n            logo={logoImage || \"\"}\n            sigImage={sigImage || \"\"}\n          />\n        );\n\n      const blobPdf = pdf(doc);\n      blobPdf.updateContainer(doc);\n      const result = await blobPdf.toBlob();\n\n      console.log(result);\n\n      if (result) {\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(result);\n\n        if (type === \"download\") {\n          link.download = `${content?.invDetails?.docTitle}_${content?.invDetails?.invoiceString}_Bill_to_${content?.clientChosenObj?.data?.name}.pdf`;\n          link.click();\n        } else if (type === \"view\") {\n          window.open(link.href, \"_blank\");\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Error generating PDF\");\n    }\n  };\n\n  async function toDataUrl(url) {\n    if (url === \"\") {\n      return \"\";\n    } else {\n      try {\n        const data = await fetch(url);\n        const blob = await data.blob();\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  return (\n    <>\n      <Button\n        startIcon={<SearchIcon />}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => set_openSearchListDialog(true)}\n      >\n        Search document\n      </Button>\n\n      <Dialog\n        open={openSearchListDialog}\n        onClose={() => onHandleCloseDialog()}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle>Search document</DialogTitle>\n        <DialogContent style={{ minHeight: \"70vh\" }}>\n          <hr />\n          <br />\n          <Stack spacing={3}>\n            <Autocomplete\n              ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n              size=\"small\"\n              label=\"Please choose a company\"\n              id=\"company-drop-down\"\n              options={companyList}\n              value={companyDetails || null}\n              sx={{ width: 300 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Please choose a company\"\n                  InputLabelProps={{ required: true }}\n                />\n              )}\n              required\n              onChange={(e, value, reason) =>\n                handleSelectChange(e, value, reason)\n              }\n              getOptionLabel={(option) => option.name}\n            />\n\n            <Autocomplete\n              ListboxProps={{ style: { maxHeight: \"70vh\" } }}\n              size=\"small\"\n              label=\"Select type of document\"\n              id=\"document-drop-down\"\n              options={documents}\n              value={documentSelected || null}\n              sx={{ width: 300 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select type of document\"\n                  InputLabelProps={{ required: false }}\n                />\n              )}\n              onChange={(e, value, reason) =>\n                handleSelectDocumentChange(e, value, reason)\n              }\n              getOptionLabel={(option) => option?.title || \"\"}\n            />\n\n            <Stack spacing={3} direction={\"row\"} alignItems={\"center\"}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"searchInput\"\n                label=\"Search\"\n                type=\"text\"\n                id=\"searchInput\"\n                size=\"small\"\n                value={searchInput || \"\"}\n                onChange={(event) => {\n                  set_searchInput(event.target.value);\n                }}\n                disabled={!companyDetails}\n                onKeyUp={(e) => {\n                  if (e.key === \"Enter\") {\n                    if (!searchInput) {\n                      enqueueSnackbar(\"Wrong search input\", {\n                        variant: \"error\",\n                      });\n                    } else {\n                      search();\n                    }\n                  }\n                }}\n              />\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => search()}\n                disabled={!companyDetails || !searchInput}\n              >\n                search\n              </Button>\n            </Stack>\n\n            {documentRetrieved && documentRetrieved?.length > 0 ? (\n              <>\n                <TableContainer>\n                  <Table border={1}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell align=\"center\" size=\"small\">\n                          View/download\n                        </TableCell>\n                        <TableCell align=\"center\" size=\"small\">\n                          Update\n                        </TableCell>\n                        <TableCell align=\"center\" size=\"small\">\n                          Customer\n                        </TableCell>\n                        <TableCell align=\"center\" size=\"small\">\n                          Document\n                        </TableCell>\n                        <TableCell align=\"center\" size=\"small\">\n                          Number\n                        </TableCell>\n                        <TableCell align=\"center\" size=\"small\">\n                          Date\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          Vat amount\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          Subtotal amount\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          Total amount\n                        </TableCell>\n                        <TableCell\n                          size=\"small\"\n                          align=\"center\"\n                          style={{ whiteSpace: \"nowrap\" }}\n                        >\n                          Proforma Status\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {documentRetrieved?.map((document) => (\n                        <TableRow>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <Stack\n                              direction={\"row\"}\n                              alignItems={\"center\"}\n                              justifyContent={\"center\"}\n                              spacing={2}\n                            >\n                              <IconButton\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() =>\n                                  handleViewDownload(\n                                    {\n                                      companyChosenObj: {\n                                        id:\n                                          companyDetails?.id &&\n                                          companyDetails?.id !== \"\"\n                                            ? companyDetails?.id\n                                            : \"\",\n                                        data: {\n                                          ...companyDetails?.data,\n                                        },\n                                      },\n                                      clientChosenObj: {\n                                        data: {\n                                          ...(clientList?.find(\n                                            (client) =>\n                                              client?.id ===\n                                              document?.data?.clientId\n                                          )?.data || {}),\n                                        },\n                                      },\n                                      invDetails: {\n                                        docTitle:\n                                          document?.data?.docTitle || \"\",\n                                        docType: document?.data?.docType || \"\",\n                                        docQuoteNumber:\n                                          document?.data?.docQuoteNumber || \"\",\n                                        docPurchaseOrderNumber:\n                                          document?.data\n                                            ?.docPurchaseOrderNumber || \"\",\n                                        docBillTo:\n                                          document?.data?.docBillTo || \"\",\n                                        docShipTo:\n                                          document?.data?.docShipTo || \"\",\n                                        docTermsAndCondition:\n                                          document?.data\n                                            ?.docTermsAndCondition || \"\",\n                                        invDate:\n                                          moment(\n                                            document?.data?.docDate.toDate()\n                                          ).format(\"DD-MM-YYYY\") || \"\",\n                                        invParticulars:\n                                          document?.data?.docParticulars || [],\n                                        invTotal: document?.data?.docTotal || 0,\n                                        invoiceString:\n                                          document?.data?.docString || \"\",\n                                        invVatFee:\n                                          document?.data?.docVatFee || 0,\n                                        invSubTotal:\n                                          document?.data?.docSubTotal || 0,\n                                        paymentStatus:\n                                          document?.data?.paymentStatus || \"\",\n\n                                        docBLNumber:\n                                          document?.data?.docBLNumber || \"\",\n                                        docSupplier:\n                                          document?.data?.docSupplier || \"\",\n                                        docContainerNumber:\n                                          document?.data?.docContainerNumber ||\n                                          \"\",\n                                        docPackages:\n                                          document?.data?.docPackages || \"\",\n                                        docDescription:\n                                          document?.data?.docDescription || \"\",\n                                        docGrossWeight:\n                                          document?.data?.docGrossWeight || \"\",\n                                        docVolume:\n                                          document?.data?.docVolume || \"\",\n                                        docPortOfLoading:\n                                          document?.data?.docPortOfLoading ||\n                                          \"\",\n                                        docETA: document?.data?.docETA || \"\",\n                                        docVesselName:\n                                          document?.data?.docVesselName || \"\",\n                                        docRoE: document?.data?.docRoE || \"\",\n                                        docPlaceOfLanding:\n                                          document?.data?.docPlaceOfLanding ||\n                                          \"\",\n\n                                        // flexitrans customs\n                                        docShipper:\n                                          document?.data?.docShipper || \"\",\n                                        docMarkNos:\n                                          document?.data?.docMarkNos || \"\",\n                                        docCommodity:\n                                          document?.data?.docCommodity || \"\",\n                                        docHbl: document?.data?.docHbl || \"\",\n                                        docDepot:\n                                          document?.data?.docDepot || \"\",\n                                      },\n                                      /*  logo: logo || \"\",\n                                      sigImage: sigImage || \"\", */\n                                    },\n                                    \"view\"\n                                  )\n                                }\n                              >\n                                <Iconify icon={\"carbon:view\"} />\n                              </IconButton>\n\n                              <IconButton\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() =>\n                                  handleViewDownload(\n                                    {\n                                      companyChosenObj: {\n                                        id:\n                                          companyDetails?.id &&\n                                          companyDetails?.id !== \"\"\n                                            ? companyDetails?.id\n                                            : \"\",\n                                        data: {\n                                          ...companyDetails?.data,\n                                        },\n                                      },\n                                      clientChosenObj: {\n                                        data: {\n                                          ...(clientList?.find(\n                                            (client) =>\n                                              client?.id ===\n                                              document?.data?.clientId\n                                          )?.data || {}),\n                                        },\n                                      },\n                                      invDetails: {\n                                        docTitle:\n                                          document?.data?.docTitle || \"\",\n                                        docType: document?.data?.docType || \"\",\n                                        docQuoteNumber:\n                                          document?.data?.docQuoteNumber || \"\",\n                                        docPurchaseOrderNumber:\n                                          document?.data\n                                            ?.docPurchaseOrderNumber || \"\",\n                                        docBillTo:\n                                          document?.data?.docBillTo || \"\",\n                                        docShipTo:\n                                          document?.data?.docShipTo || \"\",\n                                        docTermsAndCondition:\n                                          document?.data\n                                            ?.docTermsAndCondition || \"\",\n                                        invDate:\n                                          moment(\n                                            document?.data?.docDate.toDate()\n                                          ).format(\"DD-MM-YYYY\") || \"\",\n                                        invParticulars:\n                                          document?.data?.docParticulars || [],\n                                        invTotal: document?.data?.docTotal || 0,\n                                        invoiceString:\n                                          document?.data?.docString || \"\",\n                                        invVatFee:\n                                          document?.data?.docVatFee || 0,\n                                        invSubTotal:\n                                          document?.data?.docSubTotal || 0,\n                                        paymentStatus:\n                                          document?.data?.paymentStatus || \"\",\n\n                                        docBLNumber:\n                                          document?.data?.docBLNumber || \"\",\n                                        docSupplier:\n                                          document?.data?.docSupplier || \"\",\n                                        docContainerNumber:\n                                          document?.data?.docContainerNumber ||\n                                          \"\",\n                                        docPackages:\n                                          document?.data?.docPackages || \"\",\n                                        docDescription:\n                                          document?.data?.docDescription || \"\",\n                                        docGrossWeight:\n                                          document?.data?.docGrossWeight || \"\",\n                                        docVolume:\n                                          document?.data?.docVolume || \"\",\n                                        docPortOfLoading:\n                                          document?.data?.docPortOfLoading ||\n                                          \"\",\n                                        docETA: document?.data?.docETA || \"\",\n                                        docVesselName:\n                                          document?.data?.docVesselName || \"\",\n                                        docRoE: document?.data?.docRoE || \"\",\n                                        docPlaceOfLanding:\n                                          document?.data?.docPlaceOfLanding ||\n                                          \"\",\n\n                                        // flexitrans customs\n                                        docShipper:\n                                          document?.data?.docShipper || \"\",\n                                        docMarkNos:\n                                          document?.data?.docMarkNos || \"\",\n                                        docCommodity:\n                                          document?.data?.docCommodity || \"\",\n                                        docHbl: document?.data?.docHbl || \"\",\n                                        docDepot:\n                                          document?.data?.docDepot || \"\",\n                                      },\n                                      /*  logo: logo || \"\",\n                                      sigImage: sigImage || \"\", */\n                                    },\n                                    \"download\"\n                                  )\n                                }\n                              >\n                                <Iconify icon={\"eva:download-fill\"} />\n                              </IconButton>\n                            </Stack>\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                            }}\n                          >\n                            <IconButton\n                              onClick={() => {\n                                dispatch(\n                                  setUpdateDocumentData({\n                                    ...document,\n                                    documentTypeId: document?.data?.docType,\n                                    documentTypeTitle: document?.data?.docTitle,\n                                    keywords: document?.data?.keywords || [],\n                                  })\n                                );\n                                setOpenUpdateDialog(true);\n                              }}\n                              disabled={\n                                !user?.permissions[\n                                  documents.find(\n                                    (doc) => doc.id === document?.data?.docType\n                                  )\n                                ]?.assignedCompanyId?.includes(\n                                  companyDetails?.id\n                                ) ||\n                                (document?.data &&\n                                  document?.data?.isProformaConverted &&\n                                  document?.data?.docType === \"proforma\")\n                              }\n                            >\n                              <EditIcon color=\"primary\" />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            {document?.data?.clientId\n                              ? clientList?.find(\n                                  (client) =>\n                                    client?.id === document?.data?.clientId\n                                )?.name\n                              : \"\"}\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            {document?.data?.docTitle || \"\"}\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            {document?.data?.docString || \"\"}\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            size=\"small\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            {document?.data?.docDate\n                              ? moment(document?.data?.docDate.toDate()).format(\n                                  \"DD-MM-YYYY\"\n                                )\n                              : \"\"}\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            {document?.data?.docType === \"invoice\" ? (\n                              \"Not applicable\"\n                            ) : (\n                              <CurrencyFormat\n                                value={Number(\n                                  document?.data?.docVatFee || 0\n                                ).toFixed(2)}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                              />\n                            )}\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <CurrencyFormat\n                              value={Number(\n                                document?.data?.docSubTotal || 0\n                              ).toFixed(2)}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{ whiteSpace: \"nowrap\" }}\n                          >\n                            <CurrencyFormat\n                              value={Number(\n                                document?.data?.docTotal || 0\n                              ).toFixed(2)}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                            />\n                          </TableCell>\n                          <TableCell\n                            size=\"small\"\n                            align=\"center\"\n                            style={{\n                              whiteSpace: \"nowrap\",\n                              background:\n                                document?.data &&\n                                document?.data?.isProformaConverted\n                                  ? \"#FEFEBE\"\n                                  : \"transparent\",\n                            }}\n                          >\n                            {document?.data?.docType &&\n                            document?.data?.docType === \"proforma\" &&\n                            document?.data?.isProformaConverted\n                              ? `Converted to ${document?.data?.conversionDocTitle}`\n                              : document?.data?.docType &&\n                                document?.data?.docType === \"proforma\"\n                              ? \"Still Proforma\"\n                              : \"Not applicable\"}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </>\n            ) : (\n              <></>\n            )}\n\n            {/*   <Button\n              startIcon={<SearchIcon />}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => rebuildDoc()}\n            >\n              rebuild document\n            </Button> */}\n          </Stack>\n        </DialogContent>\n        <DialogActions></DialogActions>\n      </Dialog>\n\n      {openUpdateDialog ? (\n        <Dialog\n          open={openUpdateDialog}\n          onClose={() => handleCloseUpdateDialog(false)}\n          maxWidth={\"lg\"}\n          fullWidth\n        >\n          <DialogTitle>Update invoice</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={3}>\n              <DocumentInputDetails\n                action={\"update\"}\n                handleCloseUpdateDialog={handleCloseUpdateDialog}\n              />\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={() => handleCloseUpdateDialog(false)}\n            >\n              close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}