{"version":3,"sources":["components/document/quotation-purchase-order-list-dialog/QuotationOrPurchaseOrderListDialog.js"],"names":["QuotationOrPurchaseOrderListDialog","open","type","setType","setOpen","logo","sigImage","documentDetails","setDocumentDetails","set_us_doc_number","enqueueSnackbar","useSnackbar","dispatch","useDispatch","temp_fetch_document_ref","useRef","useSelector","selectDocument","companyDetails","clientDocumentObjectSelected","useState","Date","us_fromDate","set_us_fromDate","us_ToDate","set_us_ToDate","us_documentlist","set_us_documentlist","lastVisibleId","set_lastVisibleId","a","undefined","variant","setLoading","startDateISOString","toISOString","startDateStringSplit","split","endDateISOString","endDateStringSplit","startDate","endDate","db","collection","doc","id","where","firebase","firestore","Timestamp","fromDate","get","then","querySnapshot","docArray","docs","length","forEach","document","data","clientId","deleted","push","docString","checked","sort","dynamicSort","catch","err","message","startAfter","limit","newArr","useEffect","current","onClose","maxWidth","fullWidth","container","spacing","item","xs","md","style","width","direction","alignItems","label","value","onChange","newValue","renderInput","params","size","inputFormat","border","map","desc","index","docDate","moment","toDate","format","align","color","onClick","handleViewDownload","icon","quoteData","docBillTo","docShipTo","docParticulars","docSubTotal","docTotal","docVatFee","docTermsAndCondition","colSpan","nextPagination"],"mappings":"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","file":"static/js/71.8c09164e.chunk.js","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDocument } from \"../../../features/documentSlice\";\nimport Iconify from \"../../../components/Iconify\";\nimport {\n  dynamicSort,\n  handleViewDownload,\n} from \"../../../components/core-functions/SelectionCoreFunctions\";\nimport { useEffect, useRef, useState } from \"react\";\nimport db from \"../../../firebase\";\nimport { setLoading } from \"../../../features/globalSlice\";\nimport { useSnackbar } from \"notistack\";\nimport { DatePicker } from \"@mui/lab\";\nimport firebase from \"firebase/compat\";\n\nexport default function QuotationOrPurchaseOrderListDialog({\n  open,\n  type,\n  setType,\n  setOpen,\n  logo,\n  sigImage,\n  documentDetails,\n  setDocumentDetails,\n  set_us_doc_number,\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const temp_fetch_document_ref = useRef();\n\n  const { companyDetails, clientDocumentObjectSelected } =\n    useSelector(selectDocument);\n\n  const [us_fromDate, set_us_fromDate] = useState(new Date());\n\n  const [us_ToDate, set_us_ToDate] = useState(new Date());\n\n  const [us_documentlist, set_us_documentlist] = useState([]);\n\n  const [lastVisibleId, set_lastVisibleId] = useState(\"\");\n\n  useEffect(() => {\n    temp_fetch_document_ref.current();\n  }, [us_fromDate, us_ToDate]);\n\n  async function fetchDocument() {\n    if (\n      us_fromDate !== undefined &&\n      us_fromDate !== \"\" &&\n      us_ToDate !== undefined &&\n      us_ToDate !== \"\"\n    ) {\n      if (new Date(us_fromDate) > new Date(us_ToDate)) {\n        enqueueSnackbar(`Date incorrect. To Date cannot be before From Date.`, {\n          variant: \"error\",\n        });\n        dispatch(setLoading(false));\n      } else if (\n        companyDetails !== undefined &&\n        clientDocumentObjectSelected !== undefined\n      ) {\n        dispatch(setLoading(true));\n\n        const startDateISOString = us_fromDate.toISOString();\n        const startDateStringSplit = startDateISOString.split(\"T\");\n\n        const endDateISOString = us_ToDate.toISOString();\n        const endDateStringSplit = endDateISOString.split(\"T\");\n\n        const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n        const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n        await db\n          .collection(\"company\")\n          .doc(companyDetails?.id)\n          .collection(type)\n          .where(\n            \"docDate\",\n            \">=\",\n            firebase.firestore.Timestamp.fromDate(startDate)\n          )\n          .where(\n            \"docDate\",\n            \"<=\",\n            firebase.firestore.Timestamp.fromDate(endDate)\n          )\n          .get()\n          .then((querySnapshot) => {\n            let docArray = [];\n            if (querySnapshot?.docs?.length > 0) {\n              querySnapshot?.docs.forEach((document) => {\n                // filter by client selected\n                if (\n                  document?.data()?.clientId ===\n                    clientDocumentObjectSelected?.id &&\n                  !document?.data()?.deleted\n                ) {\n                  docArray.push({\n                    id: document?.id,\n                    docString: document?.data()?.docString,\n                    data: document?.data(),\n                    checked: false,\n                  });\n                }\n              });\n\n              if (docArray?.length === 25) {\n                set_lastVisibleId(true);\n              }\n\n              docArray.sort(dynamicSort(\"docString\"));\n\n              set_us_documentlist(docArray);\n            } else {\n              set_us_documentlist([]);\n            }\n            dispatch(setLoading(false));\n          })\n          .catch((err) => {\n            enqueueSnackbar(\n              `Error occured while fetching documents: ${err?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      }\n    } else {\n      dispatch(setLoading(false));\n    }\n  }\n\n  temp_fetch_document_ref.current = fetchDocument;\n\n  async function nextPagination() {\n    dispatch(setLoading(true));\n\n    const startDateISOString = us_fromDate.toISOString();\n    const startDateStringSplit = startDateISOString.split(\"T\");\n\n    const endDateISOString = us_ToDate.toISOString();\n    const endDateStringSplit = endDateISOString.split(\"T\");\n\n    const startDate = new Date(`${startDateStringSplit[0]}T00:00:00.000Z`); // The start date of the range\n    const endDate = new Date(`${endDateStringSplit[0]}T23:59:59.000Z`); // The end date of the range\n\n    await db\n      .collection(\"company\")\n      .doc(companyDetails?.id)\n      .collection(type)\n      .where(\"docDate\", \">=\", firebase.firestore.Timestamp.fromDate(startDate))\n      .where(\"docDate\", \"<=\", firebase.firestore.Timestamp.fromDate(endDate))\n      .startAfter(lastVisibleId)\n      .limit(25)\n      .get()\n      .then((querySnapshot) => {\n        let docArray = [];\n        if (querySnapshot?.docs?.length > 0) {\n          querySnapshot?.docs.forEach((document) => {\n            // filter by client selected\n            if (\n              document?.data()?.clientId === clientDocumentObjectSelected?.id &&\n              !document?.data()?.deleted\n            ) {\n              docArray.push({\n                id: document?.id,\n                data: document?.data(),\n                checked: false,\n              });\n            }\n          });\n\n          if (docArray?.length === 25) {\n            set_lastVisibleId(true);\n          } else {\n            set_lastVisibleId(false);\n          }\n\n          let newArr = [...us_documentlist, ...docArray];\n\n          set_us_documentlist(newArr);\n\n          dispatch(setLoading(false));\n        } else {\n          set_lastVisibleId(false);\n\n          dispatch(setLoading(false));\n        }\n      })\n      .catch((err) => {\n        enqueueSnackbar(\n          `Error occured while fetching documents: ${err?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  function onChooseQuotationNumber(quoteData) {\n    if (\n      clientDocumentObjectSelected &&\n      clientDocumentObjectSelected?.id !== quoteData?.clientId\n    ) {\n      enqueueSnackbar(\n        \"The quotation number you have selected does not match with the client you have selected above.\",\n        { variant: \"error\" }\n      );\n    } else {\n      set_us_doc_number(quoteData?.docString || \"\");\n\n      setType(\"\");\n      setOpen(false);\n\n      // set document data\n      setDocumentDetails({\n        ...documentDetails,\n        docBillTo: quoteData?.docBillTo || documentDetails?.docBillTo || \"\",\n        docShipTo: quoteData?.docShipTo || documentDetails?.docShipTo || \"\",\n        docParticulars: quoteData?.docParticulars || [],\n        docSubTotal: quoteData?.docSubTotal || 0,\n        docTotal: quoteData?.docTotal || 0,\n        docVatFee: quoteData?.docVatFee || 0,\n        docTermsAndCondition:\n          quoteData?.docTermsAndCondition ||\n          documentDetails?.docTermsAndCondition ||\n          \"\",\n      });\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      maxWidth={\"md\"}\n      fullWidth\n    >\n      <DialogTitle>\n        {type === \"quotation\"\n          ? \"Associate a quotation number to current document\"\n          : type === \"purchase_order\"\n          ? \"Associate a purchase order number to current document\"\n          : \"\"}\n      </DialogTitle>\n      <DialogContent>\n        <br />\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <hr />\n            <br />\n            <Typography>Please choose a date</Typography>\n          </Grid>\n\n          <Grid item xs={12} md={12} style={{ width: \"100%\" }}>\n            <Stack direction={\"row\"} spacing={3} alignItems={\"center\"}>\n              <DatePicker\n                label=\"From\"\n                value={us_fromDate || \"\"}\n                onChange={(newValue) => {\n                  set_us_fromDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} size=\"small\" />}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n\n              <DatePicker\n                label=\"To\"\n                value={us_ToDate || \"\"}\n                onChange={(newValue) => {\n                  set_us_ToDate(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} size=\"small\" />}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n            </Stack>\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <TableContainer>\n              <Table border={1}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell size=\"small\">\n                      {type === \"quotation\" ? \"Quote number\" : \"P.O number\"}\n                    </TableCell>\n                    <TableCell size=\"small\">Date created</TableCell>\n                    <TableCell size=\"small\">Preview</TableCell>\n                    <TableCell size=\"small\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {us_documentlist &&\n                    us_documentlist?.length > 0 &&\n                    us_documentlist?.map((desc, index) => (\n                      <TableRow key={index}>\n                        <TableCell size=\"small\">\n                          <Typography>{desc?.data?.docString}</Typography>\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <Typography>\n                            {desc?.data?.docDate\n                              ? moment(desc?.data?.docDate.toDate()).format(\n                                  \"DD-MM-YYYY\"\n                                ) || \"\"\n                              : \"\"}\n                          </Typography>\n                        </TableCell>\n                        <TableCell size=\"small\" align=\"center\">\n                          <IconButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() =>\n                              handleViewDownload(\n                                companyDetails,\n                                clientDocumentObjectSelected,\n                                desc,\n                                logo,\n                                sigImage,\n                                \"view\"\n                              )\n                            }\n                          >\n                            <Iconify icon={\"carbon:view\"} />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell size=\"small\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => onChooseQuotationNumber(desc?.data)}\n                          >\n                            select\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n\n                  {lastVisibleId ? (\n                    <TableRow>\n                      <TableCell size=\"small\" colSpan={4}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => nextPagination()}\n                        >\n                          Next\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <></>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={() => setOpen(false)}\n        >\n          cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"sourceRoot":""}