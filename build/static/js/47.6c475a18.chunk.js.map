{"version":3,"sources":["../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","pages/home/ContactUs.js"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ContentStyle","spacing","theme","paddingTop","ContactUs","themeStretch","useSettings","enqueueSnackbar","useSnackbar","dispatch","useDispatch","useState","fullName","contactNumber","email","inquiry","documentDetails","setDocumentDetails","a","setLoading","db","collection","add","timestamp","firebase","firestore","Timestamp","fromDate","Date","then","emailParameters","from_name","to_name","from_email","to_email","reply_to","emailjs","send","process","closeDialog","catch","error","message","variant","maxWidth","sx","p","zIndex","container","style","width","item","xs","md","required","label","id","type","value","size","fullWidth","onChange","event","previous","target","multiline","minRows","onClick","submitDetails","disabled"],"mappings":"uOACO,SAASA,EAA2BC,GACzC,OAAOC,YAAqB,iBAAkBD,GAErBE,YAAuB,iBAAkB,CAAC,SAArE,I,OCFMC,EAAY,CAAC,YAAa,aAoB1BC,EAAkBC,YAAO,MAAO,CACpCC,KAAM,iBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAHvBL,EAIrB,WACD,MAAO,CACLM,QAAS,GACT,eAAgB,CACdC,cAAe,QAIfC,EAA2BC,cAAiB,SAAqBC,EAASC,GAC9E,IAAMR,EAAQS,YAAc,CAC1BT,MAAOO,EACPT,KAAM,mBAINY,EAEEV,EAFFU,UADF,EAGIV,EADFW,iBAFF,MAEc,MAFd,EAIMC,EAAQC,YAA8Bb,EAAOL,GAE7CmB,EAAaC,YAAS,GAAIf,EAAO,CACrCW,cAGIK,EAtCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,YAHO,CACZf,KAAM,CAAC,SAEoBX,EAA4ByB,GA+BzCE,CAAkBJ,GAClC,OAAoBK,cAAKvB,EAAiBmB,YAAS,CACjDK,GAAIT,EACJD,UAAWW,YAAKL,EAAQd,KAAMQ,GAC9BI,WAAYA,EACZN,IAAKA,GACJI,OAoCUP,O,kUClETiB,EAAezB,aAAO,SAACG,GAAD,OAAW,cAAC,IAAD,aAAOuB,QAAS,GAAOvB,MAAzCH,EACnB,gBAAG2B,EAAH,EAAGA,MAAH,MAAgB,CACdC,WAAYD,EAAMD,QAAQ,IAC1BnB,cAAeoB,EAAMD,QAAQ,QAIlB,SAASG,IACtB,IAAQC,EAAiBC,cAAjBD,aAEAE,EAAoBC,cAApBD,gBAEFE,EAAWC,cAEjB,EAA8CC,mBAAS,CACrDC,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,QAAS,KAJX,mBAAOC,EAAP,KAAwBC,EAAxB,KAOQL,EAA4CI,EAA5CJ,SAAUC,EAAkCG,EAAlCH,cAAeC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAdN,4CAgBlC,sBAAAG,EAAA,6DACET,EAASU,aAAW,IADtB,SAGQC,IACHC,WAAW,iBACXC,IAFG,2BAGCN,GAHD,IAIFO,UAAWC,IAASC,UAAUC,UAAUC,SAAS,IAAIC,SAEtDC,MAAK,WACJ,IAAIC,EAAe,2BACdd,GADc,IAEjBe,UAAW,oBACXC,QAASpB,EACTqB,WAAY,2BACZC,SAAUpB,EACVqB,SAAU,6BAGZC,IACGC,KACCC,kBACAA,mBAHJ,eAKSR,GAELQ,qBAEDT,MAAK,WACJtB,EAAgB,gDAChBgC,IACA9B,EAASU,aAAW,OAErBqB,OAAM,SAACC,GACNlC,EAAgB,wEAAD,cAC2DkC,QAD3D,IAC2DA,OAD3D,EAC2DA,EAAOC,SAC/E,CAAEC,QAAS,UAEblC,EAASU,aAAW,UAGzBqB,OAAM,SAACC,GACNlC,EAAgB,wEAAD,cAC2DkC,QAD3D,IAC2DA,OAD3D,EAC2DA,EAAOC,SAC/E,CAAEC,QAAS,UAEblC,EAASU,aAAW,OA9C1B,4CAhBkC,sBAkElC,SAASoB,IACPtB,EAAmB,CACjBL,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,QAAS,KAIb,OACE,cAACf,EAAD,UACE,cAAC,IAAD,CAAW4C,UAAUvC,GAAuB,KAA5C,SACE,eAAC,IAAD,WAkBE,cAAC,IAAD,CAAKjB,UAAU,mBACf,cAAC,IAAD,CAAayD,GAAI,CAAEC,EAAG,EAAGC,OAAQ,GAAjC,SACE,eAAC,IAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgD,MAAO,CAAEC,MAAO,QAA5C,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,IAAD,CAAOpD,QAAS,EAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAY0C,QAAQ,KAApB,2BACA,cAAC,IAAD,CAAYA,QAAQ,KAApB,6BAGF,cAAC,IAAD,CAAYA,QAAQ,QAApB,6WAUJ,cAAC,IAAD,CAAMQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,IAAD,CAAML,WAAS,EAAC/C,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMkD,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEC,UAAQ,EACRX,QAAQ,WACRnE,KAAK,WACL+E,MAAO,YACPC,GAAG,WACHC,KAAK,OACLC,MAAO9C,GAAY,GACnB+C,KAAK,QACLC,WAAS,EACTC,SAAU,SAACC,GACT7C,GAAmB,SAAC8C,GAClB,OAAO,2BACFA,GADL,IAEEnD,SAAUkD,EAAME,OAAON,gBAOjC,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEC,UAAQ,EACRX,QAAQ,WACRnE,KAAK,gBACL+E,MAAO,iBACPC,GAAG,gBACHC,KAAK,OACLC,MAAO7C,GAAiB,GACxB8C,KAAK,QACLC,WAAS,EACTC,SAAU,SAACC,GACT7C,GAAmB,SAAC8C,GAClB,OAAO,2BACFA,GADL,IAEElD,cAAeiD,EAAME,OAAON,gBAOtC,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACEC,UAAQ,EACRX,QAAQ,WACRnE,KAAK,QACL+E,MAAO,gBACPC,GAAG,QACHC,KAAK,OACLC,MAAO5C,GAAS,GAChB6C,KAAK,QACLC,WAAS,EACTC,SAAU,SAACC,GACT7C,GAAmB,SAAC8C,GAClB,OAAO,2BACFA,GADL,IAEEjD,MAAOgD,EAAME,OAAON,gBAO9B,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACEC,UAAQ,EACRX,QAAQ,WACRnE,KAAK,UACL+E,MAAO,UACPC,GAAG,UACHC,KAAK,OACLC,MAAO3C,GAAW,GAClB4C,KAAK,QACLC,WAAS,EACTK,WAAS,EACTC,QAAS,EACTL,SAAU,SAACC,GACT7C,GAAmB,SAAC8C,GAClB,OAAO,2BACFA,GADL,IAEEhD,QAAS+C,EAAME,OAAON,gBAO/B9C,GAAYC,GAAiBC,GAASC,EACrC,cAAC,IAAD,CAAMoC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,IAAD,CACEV,QAAQ,YACRwB,QAAS,kBApNG,0CAoNGC,IACfR,WAAS,EACTD,KAAK,QACLU,UACGzD,IAAaC,IAAkBC,IAAUC,EAN9C,sBAaF","file":"static/js/47.6c475a18.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","// @mui\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Button,\n  Container,\n  Typography,\n  Grid,\n  Card,\n  Stack,\n  TextField,\n  Box,\n  CardContent,\n} from \"@mui/material\";\n// components\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport db from \"../../firebase\";\nimport firebase from \"firebase/compat\";\nimport { useSnackbar } from \"notistack\";\nimport { setLoading } from \"../../features/globalSlice\";\nimport emailjs from \"@emailjs/browser\";\nimport \"./ContactUs.css\";\nimport useSettings from \"src/hooks/useSettings\";\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled((props) => <Stack spacing={5} {...props} />)(\n  ({ theme }) => ({\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(10),\n  })\n);\n\nexport default function ContactUs() {\n  const { themeStretch } = useSettings();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch();\n\n  const [documentDetails, setDocumentDetails] = useState({\n    fullName: \"\",\n    contactNumber: \"\",\n    email: \"\",\n    inquiry: \"\",\n  });\n\n  const { fullName, contactNumber, email, inquiry } = documentDetails;\n\n  async function submitDetails() {\n    dispatch(setLoading(true));\n\n    await db\n      .collection(\"onlineinquiry\")\n      .add({\n        ...documentDetails,\n        timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      })\n      .then(() => {\n        let emailParameters = {\n          ...documentDetails,\n          from_name: \"PlusInvoice ADMIN\",\n          to_name: fullName,\n          from_email: \"contact@fertositeweb.com\",\n          to_email: email,\n          reply_to: \"contact@fertositeweb.com\",\n        };\n\n        emailjs\n          .send(\n            process.env.REACT_APP_ADMIN_EMAIL_SERVICE_KEY,\n            process.env.REACT_APP_INQUIRY_FORM_TEMPLATE_KEY,\n            {\n              ...emailParameters,\n            },\n            process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n          )\n          .then(() => {\n            enqueueSnackbar(\"Your details have been recorded successfully\");\n            closeDialog();\n            dispatch(setLoading(false));\n          })\n          .catch((error) => {\n            enqueueSnackbar(\n              `Error occured while recording data, please contact (+230) 5929 1209: ${error?.message}`,\n              { variant: \"error\" }\n            );\n            dispatch(setLoading(false));\n          });\n      })\n      .catch((error) => {\n        enqueueSnackbar(\n          `Error occured while recording data, please contact (+230) 5929 1209: ${error?.message}`,\n          { variant: \"error\" }\n        );\n        dispatch(setLoading(false));\n      });\n  }\n\n  function closeDialog() {\n    setDocumentDetails({\n      fullName: \"\",\n      contactNumber: \"\",\n      email: \"\",\n      inquiry: \"\",\n    });\n  }\n\n  return (\n    <ContentStyle>\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        <Card>\n          {/* <Box\n            sx={{\n              position: \"absolute\",\n              top: \"-50%\",\n              right: \"-60%\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundImage: `url(${backgroundImage})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              //opacity: 0.9, // Set your desired opacity here\n              zIndex: 1,\n              borderBottomRightRadius: \"300px\",\n              mixBlendMode: \"hard-light\",\n            }}\n          /> */}\n\n          <Box className=\"box-background\" />\n          <CardContent sx={{ p: 5, zIndex: 2 }}>\n            <Grid container spacing={3} style={{ width: \"100%\" }}>\n              <Grid item xs={12} md={6}>\n                <Stack spacing={3}>\n                  <Stack>\n                    <Typography variant=\"h3\">Help us solve</Typography>\n                    <Typography variant=\"h3\">your inquiry</Typography>\n                  </Stack>\n\n                  <Typography variant=\"body1\">\n                    Getting started with PlusInvoice for invoicing is quick and\n                    efficient, allowing you to streamline your process\n                    immediately. If your business requires additional features,\n                    our development team is ready to assist. Share your business\n                    needs with us, and we'll guide you to the best solutions and\n                    develop customized features to fit your requirements.\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      required\n                      variant=\"outlined\"\n                      name=\"fullName\"\n                      label={\"Full name\"}\n                      id=\"fullName\"\n                      type=\"text\"\n                      value={fullName || \"\"}\n                      size=\"large\"\n                      fullWidth\n                      onChange={(event) => {\n                        setDocumentDetails((previous) => {\n                          return {\n                            ...previous,\n                            fullName: event.target.value,\n                          };\n                        });\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      required\n                      variant=\"outlined\"\n                      name=\"contactNumber\"\n                      label={\"Contact number\"}\n                      id=\"contactNumber\"\n                      type=\"text\"\n                      value={contactNumber || \"\"}\n                      size=\"large\"\n                      fullWidth\n                      onChange={(event) => {\n                        setDocumentDetails((previous) => {\n                          return {\n                            ...previous,\n                            contactNumber: event.target.value,\n                          };\n                        });\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      required\n                      variant=\"outlined\"\n                      name=\"email\"\n                      label={\"Email address\"}\n                      id=\"email\"\n                      type=\"text\"\n                      value={email || \"\"}\n                      size=\"large\"\n                      fullWidth\n                      onChange={(event) => {\n                        setDocumentDetails((previous) => {\n                          return {\n                            ...previous,\n                            email: event.target.value,\n                          };\n                        });\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <TextField\n                      required\n                      variant=\"outlined\"\n                      name=\"inquiry\"\n                      label={\"Inquiry\"}\n                      id=\"inquiry\"\n                      type=\"text\"\n                      value={inquiry || \"\"}\n                      size=\"large\"\n                      fullWidth\n                      multiline\n                      minRows={5}\n                      onChange={(event) => {\n                        setDocumentDetails((previous) => {\n                          return {\n                            ...previous,\n                            inquiry: event.target.value,\n                          };\n                        });\n                      }}\n                    />\n                  </Grid>\n\n                  {fullName && contactNumber && email && inquiry ? (\n                    <Grid item xs={12} md={12}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => submitDetails()}\n                        fullWidth\n                        size=\"large\"\n                        disabled={\n                          !fullName || !contactNumber || !email || !inquiry\n                        }\n                      >\n                        Submit\n                      </Button>\n                    </Grid>\n                  ) : (\n                    <></>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Container>\n    </ContentStyle>\n  );\n}\n"],"sourceRoot":""}