{"version":3,"sources":["components/table/TableCRUDAdmin.js"],"names":["useStyles","makeStyles","table","minWidth","tableTitle","fontWeight","tableBtnOption","cursor","tableRow","tableCell","whiteSpace","textOverflow","overflow","tableCellLeft","borderTopLeftRadius","borderBottomLeftRadius","tableCellRight","borderTopRightRadius","borderBottomRightRadius","StyledHeaderTableRow","styled","TableRow","theme","backgroundColor","palette","mode","primary","light","dark","StyledTableRow","lighter","darker","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headers","onRequestSort","style","width","headCell","align","label","sortDirection","id","active","direction","onClick","property","event","TableCRUDAdmin","companyId","type","aCollection","addBtnDisplay","addBtnLabel","addBtnFunc","emptyColMsg","updateBtnDisplay","updateBtnFunc","deleteBtnDisplay","deleteBtnFunc","user","useAuth","classes","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","showPermisDialog","setShowPermisDialog","permissionArr","setPermissionArr","deleteId","setDeleteId","openDel","setOpenDel","emptyRows","Math","min","length","display","paddingBottom","startIcon","color","variant","disabled","permissions","createAdminChk","assignedCompanyId","includes","className","root","sx","mt","p","padding","component","fontSize","size","numSelected","onSelectAllClick","target","checked","newSelecteds","n","name","rowCount","slice","object","arr","i","push","value","tabIndex","title","updateAdminChk","data","deleteAdminChk","obj","indexSec","JSON","parse","a_comp","o_val","a_empNotAllow","undefined","height","colSpan","rowsPerPageOptions","count","onPageChange","e","onRowsPerPageChange","parseInt","open","keepMounted","onClose","maxWidth","fullWidth","minHeight","permis","func"],"mappings":"ueAgCMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAEZC,WAAY,CACVC,WAAY,QAEdC,eAAgB,CACdC,OAAQ,WAEVC,SAAU,CACRD,OAAQ,WAEVE,UAAW,CACTC,WAAY,SACZC,aAAc,WAEdC,SAAU,UAEZC,cAAe,CACbH,WAAY,SACZC,aAAc,WAEdC,SAAU,SACVE,oBAAqB,GACrBC,uBAAwB,IAE1BC,eAAgB,CACdC,qBAAsB,GACtBC,wBAAyB,MAIvBC,EAAuBC,YAAOC,IAAPD,EAAiB,sBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5DC,gBAC2B,WAApB,OAALD,QAAK,IAALA,GAAA,UAAAA,EAAOE,eAAP,eAAgBC,MAAhB,OACIH,QADJ,IACIA,GADJ,UACIA,EAAOE,eADX,aACI,EAAgBE,QAAQC,MACC,UAApB,OAALL,QAAK,IAALA,GAAA,UAAAA,EAAOE,eAAP,eAAgBC,MAChBH,EAAME,QAAQE,QAAQE,KACtB,kBAGFC,EAAiBT,YAAOC,IAAPD,EAAiB,sBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACtD,sBAAuB,CACrBC,gBAC2B,WAApB,OAALD,QAAK,IAALA,GAAA,UAAAA,EAAOE,eAAP,eAAgBC,MAAhB,OACIH,QADJ,IACIA,GADJ,UACIA,EAAOE,eADX,aACI,EAAgBE,QAAQI,QACC,UAApB,OAALR,QAAK,IAALA,GAAA,UAAAA,EAAOE,eAAP,eAAgBC,MAChBH,EAAME,QAAQE,QAAQK,OACtB,mBAIV,SAASC,EAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAGT,SAASC,EAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGC,IAG5C,SAASG,EAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAH,EAAeI,MAAK,SAACZ,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EAAoBA,EACjBJ,EAAE,GAAKC,EAAE,MAEXO,EAAeC,KAAI,SAACC,GAAD,OAAQA,EAAG,MAGvC,SAASG,EAAkBC,GACzB,IAAQC,EAA2CD,EAA3CC,QAASX,EAAkCU,EAAlCV,MAAOF,EAA2BY,EAA3BZ,QAASc,EAAkBF,EAAlBE,cAKjC,OACE,cAAC,IAAD,CAAWC,MAAO,CAAEC,MAAO,QAA3B,SACE,cAAChC,EAAD,UACG6B,GACCA,EAAQN,KAAI,SAACU,EAAUR,GAAX,OACV,cAAC,IAAD,CAEES,MAA0B,WAAnBD,EAASE,MAAqB,QAAU,SAC/CC,cAAepB,IAAYiB,EAASI,IAAKnB,EAH3C,SAKsB,WAAnBe,EAASE,OAAyC,WAAnBF,EAASE,MACvCF,EAASE,MAET,cAAC,IAAD,CACEG,OAAQtB,IAAYiB,EAASI,GAC7BE,UAAWvB,IAAYiB,EAASI,GAAKnB,EAAQ,MAC7CsB,SApBWC,EAoBgBR,EAASI,GApBZ,SAACK,GACvCZ,EAAcY,EAAOD,KAgBT,SAKGR,EAASE,SAZTV,GAVS,IAACgB,SA2cdE,UA3aQ,SAAC,GAajB,IAAD,MAZJC,EAYI,EAZJA,UACAC,EAWI,EAXJA,KACAhB,EAUI,EAVJA,QACAiB,EASI,EATJA,YACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,WACAC,EAKI,EALJA,YACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,cAEQC,EAASC,cAATD,KAEFE,EAAU5E,IAChB,EAA0B6E,mBAAS,OAAnC,mBAAOxC,EAAP,KAAcyC,EAAd,KACA,GAA8BD,mBAAS,IAAvC,qBAAO1C,GAAP,MAAgB4C,GAAhB,MACA,GAAgCF,mBAAS,IAAzC,qBAAOG,GAAP,MAAiBC,GAAjB,MACA,GAAwBJ,mBAAS,GAAjC,qBAAOK,GAAP,MAAaC,GAAb,MACA,GAAsCN,mBAAS,IAA/C,qBAAOO,GAAP,MAAoBC,GAApB,MACA,GAAgDR,oBAAS,GAAzD,qBAAOS,GAAP,MAAyBC,GAAzB,MACA,GAA0CV,mBAAS,IAAnD,qBAAOW,GAAP,MAAsBC,GAAtB,MAEA,GAAgCZ,mBAAS,IAAzC,qBAAOa,GAAP,MAAiBC,GAAjB,MACA,GAA8Bd,oBAAS,GAAvC,qBAAOe,GAAP,MAAgBC,GAAhB,MAsBMC,GACJV,GACAW,KAAKC,IAAIZ,GAAanB,EAAYgC,OAASf,GAAOE,IAEpD,OACE,sBAAKlC,MAAO,CAAEC,MAAO,QAArB,UACE,qBACED,MAAO,CACLgD,QAAShC,EAAgB,GAAK,OAC9Bf,MAAO,OACPgD,cAAe,QAJnB,SAOE,cAAC,IAAD,CACEC,UAAW,cAAC,IAAD,IACXzC,QAAS,kBAAMS,KACfiC,MAAM,UACNC,QAAQ,YACRC,WACW,gBAATvC,GACU,UAATA,GAAA,OACCU,QADD,IACCA,GADD,UACCA,EAAM8B,mBADP,iBACC,EAAmBC,sBADpB,iBACC,EAAmCC,yBADpC,OACC,EAAsDC,SACpD5C,IATR,SAeGI,MAIL,qBAAKyC,UAAWhC,EAAQiC,KAAxB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,GAAI,CAAEC,GAAI,IAAKC,EAAG,KAAzB,SACG/C,GAAsC,IAAvBA,EAAYgC,OAC1B,mCACE,qBAAK/C,MAAO,CAAEC,MAAO,OAAQ8D,QAAS,OAAtC,SACE,cAAC,IAAD,CACEX,QAAQ,KACRY,UAAU,KACVhE,MAAO,CAAEiE,SAAU,QAASd,MAAO,OACnCA,MAAM,YAJR,SAMGhC,QAKP,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEuC,UAAWhC,EAAQ1E,MACnB,kBAAgB,aAChBkH,KAAK,SACL,aAAW,iBAJb,UAME,cAACtE,EAAD,CACE8B,QAASA,EACTyC,YAAarC,GAASiB,OACtB5D,MAAOA,EACPF,QAASA,GACTmF,iBA5ES,SAACzD,GAC5B,GAAIA,EAAM0D,OAAOC,QAAjB,CACE,IAAMC,EAAexD,EAAYvB,KAAI,SAACgF,GAAD,OAAOA,EAAEC,QAC9C1C,GAAYwC,QAGdxC,GAAY,KAuEMhC,cAnFM,SAACY,EAAOD,GAEhCkB,EADc3C,KAAYyB,GAAsB,QAAVvB,EACrB,OAAS,OAC1B0C,GAAWnB,IAiFOgE,SAAU3D,EAAYgC,OACtBjD,QAASA,IAEX,eAAC,IAAD,WACGiB,GACwB,IAAvBA,EAAYgC,QACZ3D,EAAW2B,EAAa7B,EAAcC,EAAOF,KAC1C0F,MACC3C,GAAOE,GACPF,GAAOE,GAAcA,IAEtB1C,KAAI,SAACoF,EAAQlF,GAAW,IAAD,YAClBmF,EAAM,GACV,IAAK,IAAMnE,KAAYkE,EACrB,IAAK,IAAIE,EAAI,EAAGA,EAAIhF,EAAQiD,OAAQ+B,IAClC,GAAIhF,EAAQgF,GAAGxE,KAAOI,EAAU,CAC9BmE,EAAIE,KAAK,CACPzE,GAAIR,EAAQgF,GAAGxE,GACf0E,MAAM,GAAD,OAAKJ,EAAOlE,MAEnB,MAKN,OACE,cAAC,WAAD,UACE,eAAC/B,EAAD,CAAgBsG,UAAW,EAA3B,UACE,cAAC,IAAD,CACEvB,UAAWhC,EAAQ/D,cACnBwC,MAAM,SACN+D,KAAK,QAHP,SAKGxE,EAAQ,EAAI,MAEd0B,EACC,cAAC,IAAD,CAAWjB,MAAM,SAAS+D,KAAK,QAA/B,SACE,cAAC,IAAD,CAASgB,MAAM,WAAf,SACE,cAAC,IAAD,CACE/B,MAAM,UACNE,WACW,gBAATvC,GACU,UAATA,GAAA,OACCU,QADD,IACCA,GADD,UACCA,EAAM8B,mBADP,iBACC,EAAmB6B,sBADpB,iBACC,EAAmC3B,yBADpC,OACC,EAAsDC,SACpD5C,IAKNJ,QAAS,kBACPY,EACEuD,EAAOtE,GACPsE,EAAOQ,OAdb,SAkBE,cAAC,IAAD,CACE1B,UAAWhC,EAAQtE,uBAM3B,GAEDkE,EACC,cAAC,IAAD,CACEoC,UAAWhC,EAAQ5D,eACnBqC,MAAM,QACN+D,KAAK,QAHP,SAKE,cAAC,IAAD,CAASgB,MAAM,WAAf,SACE,cAAC,IAAD,CACE/B,MAAM,QACNE,WACW,gBAATvC,GACU,UAATA,GAAA,OACCU,QADD,IACCA,GADD,UACCA,EAAM8B,mBADP,iBACC,EAAmB+B,sBADpB,iBACC,EAAmC7B,yBADpC,OACC,EAAsDC,SACpD5C,IAKNJ,QAAS,WACPgC,GAAYmC,EAAOtE,IACnBqC,IAAW,IAbf,SAgBE,cAAC,IAAD,CACEe,UAAWhC,EAAQtE,uBAM3B,GAEDyH,IAAG,OACFA,QADE,IACFA,OADE,EACFA,EAAKrF,KAAI,SAAC8F,EAAKC,GACb,OAAID,GAAkB,YAAXA,EAAIhF,GAEX,cAAC,IAAD,CACEoD,UAAWhC,EAAQnE,UAEnB4C,MAAM,SACN+D,KAAK,QAJP,SAME,cAAC,IAAD,CACEd,QAAQ,YACRD,MAAM,UACN1C,QAAS,WACP8B,GACEiD,KAAKC,MAAMH,EAAIN,QAEjB3C,IAAoB,IAPxB,mBAJKkD,GAkBAD,GAAkB,WAAXA,EAAIhF,GAElB,cAAC,IAAD,CACEoD,UAAWhC,EAAQnE,UAEnB4C,MAAM,SACN+D,KAAK,QAJP,UAMS,OAANU,QAAM,IAANA,GAAA,UAAAA,EAAQc,cAAR,eAAgB3C,QAAS,IAAzB,OACC6B,QADD,IACCA,GADD,UACCA,EAAQc,cADT,aACC,EAAgBlG,KAAI,SAACmG,GAAD,OAClB,oDAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAOlB,KAAb,aANCc,GAWTD,GACW,kBAAXA,EAAIhF,GAGF,cAAC,IAAD,CACEoD,UAAWhC,EAAQnE,UAEnB4C,MAAM,SACN+D,KAAK,QAJP,UAMS,OAANU,QAAM,IAANA,GAAA,UAAAA,EAAQgB,qBAAR,eAAuB7C,QACtB,IADD,OAEC6B,QAFD,IAECA,GAFD,UAECA,EAAQgB,qBAFT,aAEC,EAAuBpG,KACrB,SAACmG,GAAD,OACE,oDAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAOlB,KAAb,aARDc,GAeP,cAAC,IAAD,CACE7B,UAAWhC,EAAQnE,UAEnB4C,MAAM,SACN+D,KAAK,QAJP,SAMGoB,QAAqBO,IAAdP,EAAIN,MACR,GACAM,GAAOA,EAAIN,MACXM,EAAIN,MACJ,IARCO,GAtC6B,IAAD,IAiBrC,YAhHK7F,MAsJtBkD,GAAY,GACX,cAAC,IAAD,CAAU5C,MAAO,CAAE8F,OAAQ,GAAKlD,IAAhC,SACE,cAAC,IAAD,CAAWmD,QAAS,eAM7BhF,GAAeA,EAAYgC,QAAU,EACpC,cAAC,IAAD,CACEiD,mBAAoB,CAAC,EAAG,GAAI,IAC5BhC,UAAU,MACViC,MAAK,OAAElF,QAAF,IAAEA,OAAF,EAAEA,EAAagC,OACpBb,YAAaA,GACbF,KAAMA,GACNkE,aAAc,SAACC,EAAGnE,GAAJ,OAAaC,GAAQD,IACnCoE,oBArQc,SAACzF,GAC/BwB,GAAekE,SAAS1F,EAAM0D,OAAOW,MAAO,KAC5C/C,GAAQ,MAsQM,YAQZ,mCACE,eAAC,IAAD,CACEqE,KAAMlE,GACNmE,aAAW,EACXC,QAAS,kBAAMnE,IAAoB,IACnC,kBAAgB,gBAChB,mBAAiB,gBACjBoE,SAAS,KACTC,WAAS,EAPX,UASE,cAAC,IAAD,CAAapG,GAAG,qBAAqBH,MAAM,SAA3C,SACE,cAAC,IAAD,UACE,oDAGJ,cAAC,IAAD,CAAeH,MAAO,CAAE2G,UAAW,QAAnC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,kDAEF,cAAC,IAAD,UACE,8CAIN,cAAC,IAAD,UACGrE,KAAa,OACZA,SADY,IACZA,QADY,EACZA,GAAe9C,KAAI,SAACoH,EAAQlH,GAAT,OACjB,eAAC,IAAD,WACE,cAAC,IAAD,UAAYkH,GAAUA,EAAOC,OAC7B,cAAC,IAAD,UACGD,GAAUA,EAAOnC,MAAQmC,EAAOA,EAAOnC,MACtC,cAAC,IAAD,CACER,SAAS,QACTjE,MAAO,CAAEmD,MAAO,aAGlB,cAAC,IAAD,CACEc,SAAS,QACTjE,MAAO,CAAEmD,MAAO,iBAXTzD,gBAqB3B,cAAC,IAAD,UACE,cAAC,IAAD,CACE0D,QAAQ,YACRD,MAAM,YACN1C,QAAS,kBAAM4B,IAAoB,IAHrC,0BAWN,mCACE,eAAC,IAAD,CACEiE,KAAM5D,GACN6D,aAAW,EACXC,QAAS,kBAAM7D,IAAW,IAC1B,kBAAgB,SAChB,mBAAiB,SACjB8D,SAAS,KACTC,WAAS,EAPX,UASE,cAAC,IAAD,CAAapG,GAAG,gBAAgBH,MAAM,SAAtC,SACE,cAAC,IAAD,UACE,wDAGJ,eAAC,IAAD,CAAeH,MAAO,CAAE2G,UAAW,QAAUxG,MAAM,SAAnD,UACE,uBACA,cAAC,IAAD,6DAEF,eAAC,IAAD,WACE,cAAC,IAAD,CACEiD,QAAQ,YACRD,MAAM,UACN1C,QAAS,WACPc,EAAciB,IACdC,GAAY,IACZE,IAAW,IANf,oBAWA,cAAC,IAAD,CACES,QAAQ,YACRD,MAAM,YACN1C,QAAS,WACPkC,IAAW,GACXF,GAAY,KALhB","file":"static/js/17.b0573f0d.chunk.js","sourcesContent":["import { Fragment, useState } from \"react\";\n// import { makeStyles, withStyles } from '@mui/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  TableSortLabel,\n  TablePagination,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Card,\n  Stack,\n} from \"@mui/material\";\nimport Scrollbar from \"../Scrollbar\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { styled } from \"@mui/material/styles\";\nimport useAuth from \"src/hooks/useAuth\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableTitle: {\n    fontWeight: \"bold\",\n  },\n  tableBtnOption: {\n    cursor: \"pointer\",\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableCell: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n  },\n  tableCellLeft: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    //display: \"block\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n  },\n  tableCellRight: {\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n  },\n});\n\nconst StyledHeaderTableRow = styled(TableRow)(({ theme }) => ({\n  backgroundColor:\n    theme?.palette?.mode === \"light\"\n      ? theme?.palette?.primary.light\n      : theme?.palette?.mode === \"dark\"\n      ? theme.palette.primary.dark\n      : \"transparent\",\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(even)\": {\n    backgroundColor:\n      theme?.palette?.mode === \"light\"\n        ? theme?.palette?.primary.lighter\n        : theme?.palette?.mode === \"dark\"\n        ? theme.palette.primary.darker\n        : \"transparent\",\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { headers, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead style={{ width: \"100%\" }}>\n      <StyledHeaderTableRow>\n        {headers &&\n          headers.map((headCell, index) => (\n            <TableCell\n              key={index}\n              align={headCell.label === \"Delete\" ? \"right\" : \"center\"}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              {headCell.label === \"Update\" || headCell.label === \"Delete\" ? (\n                headCell.label\n              ) : (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : \"asc\"}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n      </StyledHeaderTableRow>\n    </TableHead>\n  );\n}\n\nconst TableCRUDAdmin = ({\n  companyId,\n  type,\n  headers,\n  aCollection,\n  addBtnDisplay,\n  addBtnLabel,\n  addBtnFunc,\n  emptyColMsg,\n  updateBtnDisplay,\n  updateBtnFunc,\n  deleteBtnDisplay,\n  deleteBtnFunc,\n}) => {\n  const { user } = useAuth();\n\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [showPermisDialog, setShowPermisDialog] = useState(false);\n  const [permissionArr, setPermissionArr] = useState([]);\n\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [openDel, setOpenDel] = useState(false);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = aCollection.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, aCollection.length - page * rowsPerPage);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div\n        style={{\n          display: addBtnDisplay ? \"\" : \"none\",\n          width: \"100%\",\n          paddingBottom: \"2rem\",\n        }}\n      >\n        <Button\n          startIcon={<AddIcon />}\n          onClick={() => addBtnFunc()}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={\n            type === \"super-admin\" ||\n            (type === \"admin\" &&\n              user?.permissions?.createAdminChk?.assignedCompanyId?.includes(\n                companyId\n              ))\n              ? false\n              : true\n          }\n        >\n          {addBtnLabel}\n        </Button>\n      </div>\n\n      <div className={classes.root}>\n        <Card>\n          <Stack sx={{ mt: 1.5, p: 1.5 }}>\n            {aCollection && aCollection.length === 0 ? (\n              <>\n                <div style={{ width: \"100%\", padding: \"2em\" }}>\n                  <Typography\n                    variant=\"h6\"\n                    component=\"h4\"\n                    style={{ fontSize: \"1.2em\", color: \"red\" }}\n                    color=\"secondary\"\n                  >\n                    {emptyColMsg}\n                  </Typography>\n                </div>\n              </>\n            ) : (\n              <Scrollbar>\n                <TableContainer>\n                  <Table\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size=\"medium\"\n                    aria-label=\"enhanced table\"\n                  >\n                    <EnhancedTableHead\n                      classes={classes}\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={handleSelectAllClick}\n                      onRequestSort={handleRequestSort}\n                      rowCount={aCollection.length}\n                      headers={headers}\n                    />\n                    <TableBody>\n                      {aCollection &&\n                        aCollection.length !== 0 &&\n                        stableSort(aCollection, getComparator(order, orderBy))\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((object, index) => {\n                            let arr = [];\n                            for (const property in object) {\n                              for (let i = 0; i < headers.length; i++) {\n                                if (headers[i].id === property) {\n                                  arr.push({\n                                    id: headers[i].id,\n                                    value: `${object[property]}`,\n                                  });\n                                  break;\n                                }\n                              }\n                            }\n\n                            return (\n                              <Fragment key={index}>\n                                <StyledTableRow tabIndex={-1}>\n                                  <TableCell\n                                    className={classes.tableCellLeft}\n                                    align=\"center\"\n                                    size=\"small\"\n                                  >\n                                    {index + 1 + \")\"}\n                                  </TableCell>\n                                  {updateBtnDisplay ? (\n                                    <TableCell align=\"center\" size=\"small\">\n                                      <Tooltip title=\"Update ?\">\n                                        <IconButton\n                                          color=\"primary\"\n                                          disabled={\n                                            type === \"super-admin\" ||\n                                            (type === \"admin\" &&\n                                              user?.permissions?.updateAdminChk?.assignedCompanyId?.includes(\n                                                companyId\n                                              ))\n                                              ? false\n                                              : true\n                                          }\n                                          onClick={() =>\n                                            updateBtnFunc(\n                                              object.id,\n                                              object.data\n                                            )\n                                          }\n                                        >\n                                          <EditIcon\n                                            className={classes.tableBtnOption}\n                                          />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </TableCell>\n                                  ) : (\n                                    \"\"\n                                  )}\n                                  {deleteBtnDisplay ? (\n                                    <TableCell\n                                      className={classes.tableCellRight}\n                                      align=\"right\"\n                                      size=\"small\"\n                                    >\n                                      <Tooltip title=\"Delete ?\">\n                                        <IconButton\n                                          color=\"error\"\n                                          disabled={\n                                            type === \"super-admin\" ||\n                                            (type === \"admin\" &&\n                                              user?.permissions?.deleteAdminChk?.assignedCompanyId?.includes(\n                                                companyId\n                                              ))\n                                              ? false\n                                              : true\n                                          }\n                                          onClick={() => {\n                                            setDeleteId(object.id);\n                                            setOpenDel(true);\n                                          }}\n                                        >\n                                          <DeleteIcon\n                                            className={classes.tableBtnOption}\n                                          />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </TableCell>\n                                  ) : (\n                                    \"\"\n                                  )}\n                                  {arr &&\n                                    arr?.map((obj, indexSec) => {\n                                      if (obj && obj.id === \"sysFunc\") {\n                                        return (\n                                          <TableCell\n                                            className={classes.tableCell}\n                                            key={indexSec}\n                                            align=\"center\"\n                                            size=\"small\"\n                                          >\n                                            <Button\n                                              variant=\"contained\"\n                                              color=\"primary\"\n                                              onClick={() => {\n                                                setPermissionArr(\n                                                  JSON.parse(obj.value)\n                                                );\n                                                setShowPermisDialog(true);\n                                              }}\n                                            >\n                                              View\n                                            </Button>\n                                          </TableCell>\n                                        );\n                                      } else if (obj && obj.id === \"a_comp\") {\n                                        return (\n                                          <TableCell\n                                            className={classes.tableCell}\n                                            key={indexSec}\n                                            align=\"center\"\n                                            size=\"small\"\n                                          >\n                                            {object?.a_comp?.length > 0 &&\n                                              object?.a_comp?.map((o_val) => (\n                                                <>{`${o_val?.name}, `}</>\n                                              ))}\n                                          </TableCell>\n                                        );\n                                      } else if (\n                                        obj &&\n                                        obj.id === \"a_empNotAllow\"\n                                      ) {\n                                        return (\n                                          <TableCell\n                                            className={classes.tableCell}\n                                            key={indexSec}\n                                            align=\"center\"\n                                            size=\"small\"\n                                          >\n                                            {object?.a_empNotAllow?.length >\n                                              0 &&\n                                              object?.a_empNotAllow?.map(\n                                                (o_val) => (\n                                                  <>{`${o_val?.name}, `}</>\n                                                )\n                                              )}\n                                          </TableCell>\n                                        );\n                                      } else {\n                                        return (\n                                          <TableCell\n                                            className={classes.tableCell}\n                                            key={indexSec}\n                                            align=\"center\"\n                                            size=\"small\"\n                                          >\n                                            {obj && obj.value === undefined\n                                              ? \"\"\n                                              : obj && obj.value\n                                              ? obj.value\n                                              : \"\"}\n                                          </TableCell>\n                                        );\n                                      }\n                                    })}\n                                </StyledTableRow>\n                              </Fragment>\n                            );\n                          })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                          <TableCell colSpan={16} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                {aCollection && aCollection.length >= 1 ? (\n                  <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={aCollection?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={(e, page) => setPage(page)}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </Scrollbar>\n            )}\n          </Stack>\n        </Card>\n      </div>\n\n      <>\n        <Dialog\n          open={showPermisDialog}\n          keepMounted\n          onClose={() => setShowPermisDialog(false)}\n          aria-labelledby=\"privacypolicy\"\n          aria-describedby=\"privacypolicy\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"privacypolicyTitle\" align=\"center\">\n            <Typography>\n              <b>System Function</b>\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <b>System Function</b>\n                    </TableCell>\n                    <TableCell>\n                      <b>Access</b>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {permissionArr &&\n                    permissionArr?.map((permis, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{permis && permis.func}</TableCell>\n                        <TableCell>\n                          {permis && permis.name && permis[permis.name] ? (\n                            <CheckCircleIcon\n                              fontSize=\"large\"\n                              style={{ color: \"#99d066\" }}\n                            />\n                          ) : (\n                            <CancelIcon\n                              fontSize=\"large\"\n                              style={{ color: \"#f44336\" }}\n                            />\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setShowPermisDialog(false)}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n\n      <>\n        <Dialog\n          open={openDel}\n          keepMounted\n          onClose={() => setOpenDel(false)}\n          aria-labelledby=\"delete\"\n          aria-describedby=\"delete\"\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle id=\"deleteConfirm\" align=\"center\">\n            <Typography>\n              <b>Delete confirmation</b>\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ minHeight: \"auto\" }} align=\"center\">\n            <br />\n            <Typography>Are you sure you want to delete this data ?</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                deleteBtnFunc(deleteId);\n                setDeleteId(\"\");\n                setOpenDel(false);\n              }}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setOpenDel(false);\n                setDeleteId(\"\");\n              }}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    </div>\n  );\n};\n\nexport default TableCRUDAdmin;\n"],"sourceRoot":""}