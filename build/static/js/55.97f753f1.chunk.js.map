{"version":3,"sources":["../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","sections/auth/verify-code/VerifyCodeForm.js","pages/auth/VerifyCode.js"],"names":["getLoadingButtonUtilityClass","slot","generateUtilityClass","loadingButtonClasses","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","startIconLoadingStart","endIconLoadingEnd","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","loading","color","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","position","visibility","display","variant","left","transform","palette","action","disabled","right","LoadingIndicator","_jsx","CircularProgress","size","LoadingButton","React","inProps","ref","useThemeProps","children","other","_objectWithoutPropertiesLoose","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","_jsxs","className","VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","useForm","mode","resolver","yupResolver","defaultValues","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","values","useEffect","document","addEventListener","handlePasteClipboard","onSubmit","data","a","Promise","resolve","setTimeout","console","log","Object","join","PATH_DASHBOARD","replace","error","event","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","Stack","direction","spacing","justifyContent","keys","map","render","field","OutlinedInput","id","autoFocus","placeholder","onChange","handleChange","target","maxLength","fieldIntIndex","Number","length","nextfield","querySelector","focus","handleChangeWithNextField","inputProps","sx","p","textAlign","width","xs","sm","height","type","mt","RootStyle","alignItems","padding","VerifyCode","Page","title","LogoOnlyLayout","Container","Box","maxWidth","mx","component","RouterLink","to","PATH_AUTH","login","Iconify","icon","mb","Typography","paragraph","align","Link","underline","onClick"],"mappings":"iQACO,SAASA,EAA6BC,GAC3C,OAAOC,YAAqB,mBAAoBD,GAElD,IACeE,EADcC,YAAuB,mBAAoB,CAAC,OAAQ,UAAW,mBAAoB,yBAA0B,wBAAyB,sBAAuB,oBAAqB,0B,OCFzMC,EAAY,CAAC,WAAY,WAAY,UAAW,mBAAoB,kBAAmB,WAgCvFC,EAAoBC,YAAOC,IAAQ,CACvCC,kBAAmB,SAAAC,GAAI,OAHK,SAAAA,GAAI,MAAa,eAATA,GAAkC,UAATA,GAA6B,OAATA,GAA0B,OAATA,GAA0B,YAATA,EAGxFC,CAAsBD,IAAkB,YAATA,GAC1DE,KAAM,mBACNX,KAAM,OACNY,kBAAmB,SAACC,EAAOC,GACzB,MAAO,CAACA,EAAOC,KAAMD,EAAOE,uBAAP,4BACZd,EAAqBc,uBAA0BF,EAAOE,uBAC5DF,EAAOG,mBAAP,4BACMf,EAAqBe,mBAAsBH,EAAOG,sBARrCX,EAWvB,gBACDY,EADC,EACDA,WACAC,EAFC,EAEDA,MAFC,OAGGC,YAAS,4BACNlB,EAAqBc,sBADhB,gBAC6Cd,EAAqBe,mBAAsB,CAClGI,WAAYF,EAAMG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAUL,EAAMG,YAAYE,SAASC,QAEvCC,QAAS,IAEqB,WAA/BR,EAAWS,iBAAX,aACDN,WAAYF,EAAMG,YAAYC,OAAO,CAAC,mBAAoB,aAAc,gBAAiB,CACvFC,SAAUL,EAAMG,YAAYE,SAASC,SAFtC,YAIKvB,EAAqB0B,SAAY,CACrCC,MAAO,gBAEuB,UAA/BX,EAAWS,iBAA+BT,EAAWY,WAArD,4BACM5B,EAAqBc,sBAD3B,gBACwDd,EAAqBe,mBAAsB,CAClGI,WAAYF,EAAMG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAUL,EAAMG,YAAYE,SAASC,QAEvCC,QAAS,EACTK,aAAc,IAEgB,QAA/Bb,EAAWS,iBAA6BT,EAAWY,WAAnD,4BACM5B,EAAqBc,sBAD3B,gBACwDd,EAAqBe,mBAAsB,CAClGI,WAAYF,EAAMG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAUL,EAAMG,YAAYE,SAASC,QAEvCC,QAAS,EACTM,YAAa,QAGXC,EAAgC3B,YAAO,MAAO,CAClDK,KAAM,mBACNX,KAAM,mBACNY,kBAAmB,SAACC,EAAOC,GACzB,IACEI,EACEL,EADFK,WAEF,MAAO,CAACJ,EAAOoB,iBAAkBpB,EAAO,mBAAD,OAAoBqB,YAAWjB,EAAWS,sBAP/CrB,EASnC,gBACDa,EADC,EACDA,MACAD,EAFC,EAEDA,WAFC,OAGGE,YAAS,CACbgB,SAAU,WACVC,WAAY,UACZC,QAAS,QACuB,UAA/BpB,EAAWS,kBAAuD,aAAvBT,EAAWqB,SAAiD,cAAvBrB,EAAWqB,UAA4B,CACxHC,KAAM,IAC0B,UAA/BtB,EAAWS,iBAAsD,SAAvBT,EAAWqB,SAAsB,CAC5EC,KAAM,GAC0B,WAA/BtB,EAAWS,iBAAgC,CAC5Ca,KAAM,MACNC,UAAW,kBACXZ,MAAOV,EAAMuB,QAAQC,OAAOC,UACI,QAA/B1B,EAAWS,kBAAqD,aAAvBT,EAAWqB,SAAiD,cAAvBrB,EAAWqB,UAA4B,CACtHM,MAAO,IACyB,QAA/B3B,EAAWS,iBAAoD,SAAvBT,EAAWqB,SAAsB,CAC1EM,MAAO,GACyB,UAA/B3B,EAAWS,iBAA+BT,EAAWY,WAAa,CACnEM,SAAU,WACVI,MAAO,IACyB,QAA/BtB,EAAWS,iBAA6BT,EAAWY,WAAa,CACjEM,SAAU,WACVS,OAAQ,QAGJC,EAAgCC,cAAKC,IAAkB,CAC3DnB,MAAO,UACPoB,KAAM,KAGFC,EAA6BC,cAAiB,SAAuBC,EAASC,GAClF,IAAMxC,EAAQyC,YAAc,CAC1BzC,MAAOuC,EACPzC,KAAM,qBAIN4C,EAME1C,EANF0C,SADF,EAOI1C,EALF+B,gBAFF,WAOI/B,EAJFe,eAHF,WAOIf,EAHFqB,wBAJF,MAIqBY,EAJrB,IAOIjC,EAFFc,uBALF,MAKoB,SALpB,IAOId,EADF0B,eANF,MAMY,OANZ,EAQMiB,EAAQC,YAA8B5C,EAAOT,GAE7Cc,EAAaE,YAAS,GAAIP,EAAO,CACrC+B,WACAhB,UACAM,mBACAP,kBACAY,YAGImB,EAjIkB,SAAAxC,GACxB,IACEU,EAGEV,EAHFU,QACAD,EAEET,EAFFS,gBACA+B,EACExC,EADFwC,QAEIC,EAAQ,CACZ5C,KAAM,CAAC,OAAQa,GAAW,WAC1BgC,UAAW,CAAChC,GAAW,mBAAJ,OAAuBO,YAAWR,KACrDkC,QAAS,CAACjC,GAAW,iBAAJ,OAAqBO,YAAWR,KACjDO,iBAAkB,CAAC,mBAAoBN,GAAW,mBAAJ,OAAuBO,YAAWR,MAE5EmC,EAAkBC,YAAeJ,EAAO5D,EAA8B2D,GAC5E,OAAOtC,YAAS,GAAIsC,EAASI,GAoHbE,CAAkB9C,GAClC,OAAoB6B,cAAK1C,EAAmBe,YAAS,CACnDwB,SAAUA,GAAYhB,EACtByB,IAAKA,GACJG,EAAO,CACRjB,QAASA,EACTmB,QAASA,EACTxC,WAAYA,EACZqC,SAAyC,QAA/BrC,EAAWS,gBAAyCsC,eAAMd,WAAgB,CAClFI,SAAU,CAACA,EAAU3B,GAAwBmB,cAAKd,EAA+B,CAC/EiC,UAAWR,EAAQxB,iBACnBhB,WAAYA,EACZqC,SAAUrB,OAEI+B,eAAMd,WAAgB,CACtCI,SAAU,CAAC3B,GAAwBmB,cAAKd,EAA+B,CACrEiC,UAAWR,EAAQxB,iBACnBhB,WAAYA,EACZqC,SAAUrB,IACRqB,WAmEKL,O,6SCvNA,SAASiB,IACtB,IAAMC,EAAWC,cAETC,EAAoBC,cAApBD,gBAEFE,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaG,SAAS,oBAC7BC,MAAOJ,MAAaG,SAAS,oBAC7BE,MAAOL,MAAaG,SAAS,oBAC7BG,MAAON,MAAaG,SAAS,oBAC7BI,MAAOP,MAAaG,SAAS,oBAC7BK,MAAOR,MAAaG,SAAS,sBAY/B,EAMIM,YAAQ,CACVC,KAAM,SACNC,SAAUC,YAAYb,GACtBc,cAlBoB,CACpBX,MAAO,GACPE,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,MAIPM,EADF,EACEA,MACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,aAJF,IAKEC,UAAaC,EALf,EAKeA,aAAcC,EAL7B,EAK6BA,QAOvBC,EAASP,IAEfQ,qBAAU,WACRC,SAASC,iBAAiB,QAASC,KAElC,IAEH,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAEP,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAS,QAFtC,OAGbE,QAAQC,IAAI,QAASC,OAAOb,OAAOM,GAAMQ,KAAK,KAE9CtC,EAAgB,mBAEhBF,EAASyC,IAAe9F,KAAM,CAAE+F,SAAS,IAP5B,gDASbL,QAAQM,MAAR,MATa,yDAAH,sDAaRb,EAAuB,SAACc,GAAW,IAAD,EAClCZ,GAAY,OAALY,QAAK,IAALA,GAAA,UAAAA,EAAOC,qBAAP,eAAsBC,QAAQ,UAAW,GAEpDd,EAAOA,EAAKe,MAAM,IAElB,GAAGC,QAAQC,KAAKrB,SAASsB,iBAAiB,gBAAgB,SAACC,EAAMC,GAC/DD,EAAKE,MAAQrB,EAAKoB,GAClB,IAAME,EAAU,cAAUF,EAAQ,GAClC/B,EAASiC,EAAYtB,EAAKoB,QAuB9B,OACE,uBAAMrB,SAAUT,EAAaS,GAA7B,UACE,cAACwB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGC,eAAe,SAAlD,SACGnB,OAAOoB,KAAKjC,GAAQkC,KAAI,SAACrH,EAAM6G,GAAP,OACvB,cAAC,IAAD,CAEE7G,KAAI,cAAS6G,EAAQ,GACrBhC,QAASA,EACTyC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,GAAG,aACHC,UAAqB,IAAVb,EACXc,YAAY,IACZC,SAAU,SAACvB,GAAD,OAjCU,SAACA,EAAOwB,GACxC,MAAmCxB,EAAMyB,OAAjCC,EAAR,EAAQA,UAAWjB,EAAnB,EAAmBA,MACbC,EADN,EAA0B/G,KACFmG,QAAQ,OAAQ,IAElC6B,EAAgBC,OAAOlB,GAE7B,GAAID,EAAMoB,QAAUH,GACdC,EAAgB,EAAG,CACrB,IAAMG,EAAY9C,SAAS+C,cAAT,yBAAyCJ,EAAgB,EAAzD,MAEA,OAAdG,GACFA,EAAUE,QAKhBR,EAAaxB,GAiBoBiC,CAA0BjC,EAAOkB,EAAMK,WAC5DW,WAAY,CACVR,UAAW,EACXS,GAAI,CACFC,EAAG,EACHC,UAAW,SACXC,MAAO,CAAEC,GAAI,GAAIC,GAAI,IACrBC,OAAQ,CAAEF,GAAI,GAAIC,GAAI,WAhBzB7I,QAyBX,cAACuC,EAAA,EAAD,CACEpB,WAAS,EACTmB,KAAK,QACLyG,KAAK,SACLnH,QAAQ,YACRX,QAASgE,EACThD,UAAWiD,EACXsD,GAAI,CAAEQ,GAAI,GAPZ,uBCnHN,IAAMC,EAAYtJ,YAAO,MAAPA,EAAc,kBAAgB,CAC9CgC,QAAS,OACTmH,OAAQ,OACRI,WAAY,SACZC,QAJ8B,EAAG3I,MAIlB0G,QAAQ,GAAI,OAKd,SAASkC,IACtB,OACE,cAACC,EAAA,EAAD,CAAMC,MAAM,SAASd,GAAI,CAAEM,OAAQ,GAAnC,SACE,eAACG,EAAD,WACE,cAACM,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKjB,GAAI,CAAEkB,SAAU,IAAKC,GAAI,QAA9B,UACE,cAAC/J,EAAA,EAAD,CACE0C,KAAK,QACLsH,UAAWC,IACXC,GAAIC,IAAUC,MACd/G,UAAW,cAACgH,EAAA,EAAD,CAASC,KAAM,0BAA2BvB,MAAO,GAAIG,OAAQ,KACxEN,GAAI,CAAE2B,GAAI,GALZ,kBAUA,cAACC,EAAA,EAAD,CAAYxI,QAAQ,KAAKyI,WAAS,EAAlC,sCAGA,cAACD,EAAA,EAAD,CAAY5B,GAAI,CAAEtH,MAAO,kBAAzB,iIAKA,cAACuI,EAAA,EAAD,CAAKjB,GAAI,CAAEQ,GAAI,EAAGmB,GAAI,GAAtB,SACE,cAAC3G,EAAD,MAGF,eAAC4G,EAAA,EAAD,CAAYxI,QAAQ,QAAQ0I,MAAM,SAAlC,yCAEE,cAACC,EAAA,EAAD,CAAM3I,QAAQ,YAAY4I,UAAU,OAAOC,QAAS,aAApD","file":"static/js/55.97f753f1.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\n\nconst LoadingIndicator = /*#__PURE__*/_jsx(CircularProgress, {\n  color: \"inherit\",\n  size: 16\n});\n\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    loading = false,\n    loadingIndicator = LoadingIndicator,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { OutlinedInput, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required('Code is required'),\n    code2: Yup.string().required('Code is required'),\n    code3: Yup.string().required('Code is required'),\n    code4: Yup.string().required('Code is required'),\n    code5: Yup.string().required('Code is required'),\n    code6: Yup.string().required('Code is required'),\n  });\n\n  const defaultValues = {\n    code1: '',\n    code2: '',\n    code3: '',\n    code4: '',\n    code5: '',\n    code6: '',\n  };\n\n  const {\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const values = watch();\n\n  useEffect(() => {\n    document.addEventListener('paste', handlePasteClipboard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      console.log('code:', Object.values(data).join(''));\n\n      enqueueSnackbar('Verify success!');\n\n      navigate(PATH_DASHBOARD.root, { replace: true });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePasteClipboard = (event) => {\n    let data = event?.clipboardData?.getData('Text') || '';\n\n    data = data.split('');\n\n    [].forEach.call(document.querySelectorAll('#field-code'), (node, index) => {\n      node.value = data[index];\n      const fieldIndex = `code${index + 1}`;\n      setValue(fieldIndex, data[index]);\n    });\n  };\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n    const fieldIndex = name.replace('code', '');\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    if (value.length >= maxLength) {\n      if (fieldIntIndex < 6) {\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\n\n        if (nextfield !== null) {\n          nextfield.focus();\n        }\n      }\n    }\n\n    handleChange(event);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\n        {Object.keys(values).map((name, index) => (\n          <Controller\n            key={name}\n            name={`code${index + 1}`}\n            control={control}\n            render={({ field }) => (\n              <OutlinedInput\n                {...field}\n                id=\"field-code\"\n                autoFocus={index === 0}\n                placeholder=\"-\"\n                onChange={(event) => handleChangeWithNextField(event, field.onChange)}\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    p: 0,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 56 },\n                    height: { xs: 36, sm: 56 },\n                  },\n                }}\n              />\n            )}\n          />\n        ))}\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        disabled={!isValid}\n        sx={{ mt: 3 }}\n      >\n        Verify\n      </LoadingButton>\n    </form>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Link, Container, Typography } from '@mui/material';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\n// sections\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  height: '100%',\n  alignItems: 'center',\n  padding: theme.spacing(12, 0),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCode() {\n  return (\n    <Page title=\"Verify\" sx={{ height: 1 }}>\n      <RootStyle>\n        <LogoOnlyLayout />\n\n        <Container>\n          <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n            <Button\n              size=\"small\"\n              component={RouterLink}\n              to={PATH_AUTH.login}\n              startIcon={<Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />}\n              sx={{ mb: 3 }}\n            >\n              Back\n            </Button>\n\n            <Typography variant=\"h3\" paragraph>\n              Please check your email!\n            </Typography>\n            <Typography sx={{ color: 'text.secondary' }}>\n              We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify\n              your email.\n            </Typography>\n\n            <Box sx={{ mt: 5, mb: 3 }}>\n              <VerifyCodeForm />\n            </Box>\n\n            <Typography variant=\"body2\" align=\"center\">\n              Don’t have a code? &nbsp;\n              <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\n                Resend code\n              </Link>\n            </Typography>\n          </Box>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}