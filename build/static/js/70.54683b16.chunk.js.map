{"version":3,"sources":["components/document/document-conversion/DocumentConversion.js"],"names":["DocumentConversion","documentDetails","setDocumentDetails","set_us_actionChoice","classStyle","dispatch","useDispatch","documents","useSelector","selectDocument","useState","selectedDocument","set_selectedDocument","handleSelectChange","e","value","reason","a","preventDefault","setDocumentType","ListboxProps","style","maxHeight","size","label","id","options","renderInput","params","InputLabelProps","required","onChange","getOptionLabel","option","title","className","borderRadius"],"mappings":"6RAQe,SAASA,EAAT,GAKX,IAJAC,EAID,EAJCA,gBACAC,EAGD,EAHCA,mBACAC,EAED,EAFCA,oBACAC,EACD,EADCA,WAEMC,EAAWC,cAETC,EAAcC,YAAYC,KAA1BF,UAER,EAAiDG,mBAAS,MAA1D,mBAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAkB,uCAAG,WAAOC,EAAGC,EAAOC,GAAjB,SAAAC,EAAA,sDACvBH,EAAEI,iBACa,iBAAXF,GAAwC,UAAXA,GAAsBD,GACnDH,EAAqBG,GAErBV,EACIc,YAAgB,eACTJ,KAIXZ,EAAoB,UAEpBD,EAAmB,eAAKD,KACN,iBAAXe,GAAwC,UAAXA,GACpCJ,EAAqB,MAfF,2CAAH,0DAmBxB,OACI,mCACI,cAAC,IAAD,CACIQ,aAAc,CAAEC,MAAO,CAAEC,UAAW,SACpCC,KAAK,QACLC,MAAM,iCACNC,GAAG,gCACHC,QAASnB,EACTQ,MAAOJ,GAAoB,KAC3BgB,YAAa,SAACC,GAAD,OACT,cAAC,IAAD,2BACQA,GADR,IAEIJ,MAAM,iCACNK,gBAAiB,CAAEC,UAAU,OAGrCA,UAAQ,EACRC,SAAU,SAACjB,EAAGC,EAAOC,GAAX,OACNH,EAAmBC,EAAGC,EAAOC,EAAQ,WAEzCgB,eAAgB,SAACC,GAAD,OAAYA,EAAOC,OACnCC,UAAW/B,EACXiB,MAAO,CAAEe,aAAc","file":"static/js/70.54683b16.chunk.js","sourcesContent":["import { Autocomplete, TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectDocument,\n    setDocumentType,\n} from '../../../features/documentSlice';\nimport { useState } from 'react';\n\nexport default function DocumentConversion({\n    documentDetails,\n    setDocumentDetails,\n    set_us_actionChoice,\n    classStyle,\n}) {\n    const dispatch = useDispatch();\n\n    const { documents } = useSelector(selectDocument);\n\n    const [selectedDocument, set_selectedDocument] = useState(null);\n\n    const handleSelectChange = async (e, value, reason) => {\n        e.preventDefault();\n        if (reason !== 'removeOption' && reason !== 'clear' && value) {\n            set_selectedDocument(value);\n\n            dispatch(\n                setDocumentType({\n                    ...value,\n                }),\n            );\n\n            set_us_actionChoice('create');\n\n            setDocumentDetails({ ...documentDetails });\n        } else if (reason === 'removeOption' || reason === 'clear') {\n            set_selectedDocument(null);\n        }\n    };\n\n    return (\n        <>\n            <Autocomplete\n                ListboxProps={{ style: { maxHeight: '70vh' } }}\n                size=\"small\"\n                label=\"Convert to other document type\"\n                id=\"document-conversion-drop-down\"\n                options={documents}\n                value={selectedDocument || null}\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Convert to other document type\"\n                        InputLabelProps={{ required: true }}\n                    />\n                )}\n                required\n                onChange={(e, value, reason) =>\n                    handleSelectChange(e, value, reason, 'client')\n                }\n                getOptionLabel={(option) => option.title}\n                className={classStyle}\n                style={{ borderRadius: '10px' }}\n            />\n        </>\n    );\n}\n"],"sourceRoot":""}